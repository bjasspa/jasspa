.Id $Id: nr2html.1,v 1.1 2000-10-21 14:31:34 jon Exp $
.Im mantools converters
.TH nr2html 1
.XI nr2html - "Nroff to Hyper Text Markup Language (HTML) converter"
.SH NAME
nr2html \- Nroff to Hyper Text Markup Language (HTML) converter.
.SH SYNOPSIS
.sp 1
.na
\fBnr2html\fR
\fC[\fB\-?\fC|\fB\-h\fC]\fR
\fC[\fB\-E\fR\ \fI<file>\fC]\fR
\fC[\fB\-e\fR\ \fI<file>\fC]\fR
\fC[\fB\-H\fR\ \fI<home>\fC]\fR
\fC[\fB\-I\fC]\fR
\fC[\fB\-i\fR\ \fI<section>\fC]\fR
\fC[\fB\-l\fR\ \fI<library>\fC]\fR
\fC[\fB\-L\fR\ \fI<path>\fC]\fR
\fC[\fB\-M\fR\ \fI<module>\fC]\fR
\fC[\fB\-n\fR\ \fI<name>\fC]\fR
\fC[\fB\-o\fR\ \fI<file>\fC]\fR
\fC[\fB\-p\fR\ \fI<file>\fC]\fR
\fC[\fB\-q\fC]\fR
\fC[\fB\-t\fR\ \fI<name:link\fC[\fI:section\fC]\fI>\fC]\fR
\fC[\fB\-s\fC]\fR
\fC[\fB\-x\fC]\fR
\fIfiles \.\.\.\fR
.ad
.SH DESCRIPTION
.B nr2html
converts Nroff files into Hyper Text Markup Language (HTML) format files both.
The converter generates a single super-HTML output file (see
.Ht hts 4 ),
comprising  the  converted  HTML output files,  delimited by file markers. The
compiler  uses the input  Nroff file name (or  sub-file  name in the case of a
\fC.sm\fR   file),  and  generates  a  corresponding   output  file  with  the
\fC.html\fR  extension. Pages may be generated and labelled  automatically  as
required,   the  naming   convention   of  automatic   files  takes  the  form
\fBa\fImmm\fB0000.html\fR,  where \fImmm\fR denotes the module name taken from
the first three letters of the Nroff \fC.Im\fR tag (see
.Ht mad 7 );
\fB0000\fR is a digit sequence which is incremented by 1 for each new page.
.PP
The  converter  takes it's input from the command  line, either Nroff files or
the more compact
.Hl superman superman 1
files (see
.Ht sm 4 ).
When generating HTML files the converter is executed in compile mode, utilising
symbol libraries
.Ht lbn 4
generated by the archiving utility
.Ht nrar 1
to determine both internal and external  references. The compiler  utilities a
single pass strategy,  requiring  it's input file set to have been  previously
archived  to enable it to  determine  forward  references.  This is  perhaps a
little unorthodox, but does make for a rapid conversion process.
.SS "HTML Page Layout"
The HTML page layout utilities a fixed format header of the form:
.CS
_____________________________________

XXXX  Header Line
XXXX
XXXX

[home] [link] [link] [link]
_____________________________________

Text Body
.CE
The header is defined as a scrolling  region of space that  appears at the top
of the HTML page. The details of the header are defined as follows:
.IP \fBXXX\fR
identifies  a graphical  logo  position,  the logo is defined to be a GIF file
called  \fIlogo.gif\fR  which is located in the  \fIhome\fR  (\fB\-H\fR  name)
directory.
.IP "\fBHeader\ Line\fR"
The topical  name of the help page,  derived  from the  \fC.TH\fR or \fC.NH\fR
header description, as defined by
.Ht mad 7 .
.IP "\fB[link]\fR"
A set of  hypertext  links to other  related  modules, set up as short cuts to
other  information.  The first tag that  appears is  typically  identified  as
\fC[home]\fR  which points to the modules  entry page, this  performs the same
function as the Windows Help file \fBContents\fR button, as defined by
.Ht nr2rtf 1 .
.IP "\fBText\ Body\fR"
the bulk of the manual page text.
.SH OPTIONS
The \fBnr2html\fRutility recognises the following options:-
.\" -?/-h help option
.so opt_h.tni
.\" -e -E : Error options.
.so opt_e.tni
.\" -H <home> : Home page
.so opt_hh.tni
.\" -I : Information.
.so opt_i.tni
.IP "\fB\-i\ \fI<section>\fR"
The \fB\-i\fR  defines  provides an over-riding  section number, when using in
conjunction  with the \fB-n\fR name flag, this  overrides  the default  module
name. The section  number  corresponds  to the UNIX  manual  numbering  scheme
\fI<name>\fB(\fI<number>\fB)\fR.
.\" -l <library> : Library search.
.so opt_l.tni
.IP
A \fI\-l\fR  option is made for each  library  module that is  required by the
Nroff  source  to  resolve  external   references.  Forward  references  (e.g.
references  for labels in modules that have not been built  yet)are  generally
made by manually  constructing a library file called  \fCforward.lbn\fR  which
resolves those references.
.\" -L <path> : Library search path.
.so opt_ll.tni
.\" -M <module> : Module name
.so opt_m.tni
The  \fI<module>\fR  is the name by which all remote pages  references  labels
within the module. The  introductory  page of the module  should also be given
this  name. The  title  line  \fC[home]\fR  link  should  be  mapped  into the
\fImodule\fR name and serves as the entry point to the module.
.\" -n <name> : Module name
.so opt_n.tni
.\" -o <file> : Output file name.
.so opt_o.tni
.IP
If  the   \fB\-o\fR   option  is  omitted,   the   default   output   file  is
\fImodule\fR.hts, as defined by the \fB\-M\fR option.
.\" -p <file> : Logo file name.
.so opt_p.tni
The  default  when  omitted is  \fIlogo.gif\fR,  this is  searched  for in the
\fI<home>\fR directory (as defined by the \fB\-H\fR option).
.\" -q : Quiet mode.
.so opt_q.tni
.\" -s : Standard out
.so opt_s.tni
.\" -t : Link line name.
.so opt_t.tni
.\" -x : Compile.
.so opt_x.tni
.SH EXAMPLE
.SS "Typical Example"
The following  example shows the most typical  construction  of a modules HTML
file in terms of the make  rules. The  example is taken from the  makefile  to
construct this page. In this example, the \fImodule\fR is called \fBmanrun\fR,
generating a super-HTML file called  \fBmanrun.hts\fR.  The \fI.hts\fR file is
generated from the
.Ht superman 1
concatenation of the individual manual Nroff pages defined by \fBmanrun.sm\fR,
an index page \fBmanrun.1\fR which has been constructed using
.Ht nrsearch 1
from \fBmanrun.1s\fR.
.B nr2html
also takes as input the library file \fBmanrun.lbn\fR which has been generated
by
.Ht nrar 1 ;
this  defines  the  external  labels  appearing  within  \fBmanrun.sm\fR.  The
additional library \fBforward.lbn\fR forward references the \fIbuild\fR module
which is built after the manual tools.
.PP
The options on the command line are:
.BS
.B \-x
to perform a compilation process.
.BU
.B "\-M\ manrun"
generate a module  called  \fBmanrun\fR.  This becomes the  \fC[home]\fR  page
title  link  in  this   example   the  label   \fImanrun\fR   is  defined   in
\fImanrun.1\fR;  the  file  contains  all  of the  index  information  and  is
logically the introduction page.
.BU
.B "\-H\ jasspa"
defines  the  'home'  page  as  \fBjasspa\fR,  requiring  a entry  label  of
\fBjasspa\fR in another module.
.BU
.B "\-L."
Search path for the libraries is the current working directory.
.BU
.B "\-lmanrun \-lforward"
use the  archive  files  \fBmanrun.lbn\fR  and  \fBforward.lbn\fR  to  resolve
references.
.BU
.B "\-thome:manrun \-tbuild:build"
appends two links  topic to the header; the first is the module home page; the
second to topic called  \fBbuild\fR  whose label  reference is \fBbuild\fR  in
another module.
.BE
The resultant makefile is defined as:
.CS
manrun.1:: manrun.sm manrun.1s
        $(NRSEARCH) -o $@ -n manrun.1s manrun.sm
manrun.lbn: manrun.sm manrun.1
        $(NRAR) -M manrun manrun.1 manrun.sm
clean::
        $(RM) manrun.1 manrun.lbn
#
# Build the main components.
#
manrun.sm:: $(MANRUN)
        $(SUPERMAN) -o $@ $(MANRUN)

manrun.hts: manrun.sm manrun.1 manrun.lbn forward.lbn
        nr2html -x -M manrun manrun.sm manrun.1 \e
                   -H jasspa                  \e
                   -L. -lmanrun -lforward       \e
                   -thome:manrun                \e
                   -tbuild:build
.CE
The \fBmanrun.1s\fR file deserves a special mention, the \fC[home]\fR page has
a label called  \fImanrun\fR  which is defined  without a section  number. The
header of the file is defined as follows,  which shows how the  definition  is
made:-
.CS
\.Id $Id: nr2html.1,v 1.1 2000-10-21 14:31:34 jon Exp $
\.Im mantools
\.TH manrun - - - "Manual Tools"
\.XI manrun - -
\.Ss
\.\e" Run in description mode for the searches.
\.\e" Description mode includes the descriptions when generating indexes
description
\.Se
\.SH Overview
The
\.B "Manual Tools"
describe the manual page  building  utilities,  which run under
DOS, which are used to construct on-line hypertext documentation
(\efBHTML\efR and \efIWindows\efR \efIHelp\efR files) and the
more traditional UNIX \efIcatman\efR and postscript printed manual

\.\.\.

build system.
\.SH Index
\.Ss
search mantools * *
output * "%N
\.Se
\.FH
.CE 0
.SS "Sub-Module Example"
This  example  is a more  complex  example  involving  sub-modules,  an almost
complete  listing of a makefile is shown later to convey the  operations  that
are performed. In this example two sub-modules \fBdivutils\fR and \fBdrvrun\fR
are  contained   within  a  module   \fButilsrun\fR,   considering  HTML  file
construction, all of the sub-modules and the contents page  \fButilsrun\fR for
the whole module are processed  together.  This is different  from the Windows
Help file generation by
.Ht nr2rtf 1
which deals with the sub-modules individually.
The help page rule is defined as follows:-
.CS
utilsrun.hts: utilsrun.lbn forward.lbn
        $(NR2HTML) $(NROPTIONS) $(NRLIBS) \e
                divutils.1 divutils.sm    \e
                drvrun.7 drvrun.sm        \e
                utilsrun.1
.CE
.ne 7
The following example is a complete makefile description for sub-modules:
.CS
#
# Define some directories
#
ROOTDIR = ../..
include $(ROOTDIR)/etc/makeinc.mk
#
# Define the modules to build to make.

HLPS    =       utilsrun.hlp
LIBS    =       utilsrun.lbn
HTSS    =       utilsrun.hts
SMS     =       utilsrun.sm
PSOS    =       utilsrun.pso

DRVRUN7 =       drv7dbi.7 drv7exos.7 drv7d232.7 drv7m3d.7 \e
                drv7msnd.7 dvs.7
DIVUTILS1=      testipu.1 testvpx.1 testdbi3.1 msnd.1
UTILSRUN=       $(DIVUTILS1) $(DRVRUN7)

#
# Define the local build rules
# Build the local index page.
#
drvrun.7: drvrun.sm drvrun.7s
        $(NRSEARCH) -o $@ -n drvrun.7s drvrun.sm
divutils.1: divutils.sm divutils.1s
        $(NRSEARCH) -o $@ -n divutils.1s divutils.sm
clean::
        $(RM) divutils.1 drvrun.7
#
# Build the files.
#
divutils.sm: $(DIVUTILS1)
        $(SUPERMAN) -o $@ $(DIVUTILS1)
divutils.lbn: divutils.sm divutils.1
        $(NRAR) -M divutils -A utilsrun divutils.sm divutils.1

drvrun.sm: $(DRVRUN7)
        $(SUPERMAN) -o $@ $(DRVRUN7)
drvrun.lbn: drvrun.sm drvrun.7
        $(NRAR) -M drvrun -A utilsrun drvrun.sm drvrun.7
#
# Build the library.
#
utilsrun.lbn: divutils.lbn drvrun.lbn utilsrun.1
        $(NRAR) -o $@ -M utilsrun -L. -ldivutils \e
                         -ldrvrun utilsrun.1
clean::
        $(RM) divutils.lbn drvrun.lbn utilsrun.lbn
#
# Build the superman file.
#
utilsrun.sm:    divutils.sm drvrun.sm
        $(SUPERMAN) -o $@ divutils.sm drvrun.sm
#
# Build the windows help files.
#

NROPTIONS =     -x -M utilsrun -H jasspa \e
                -tdiagnostics:divutils -tdriver:drvrun
NRLIBS    =     -L. -lutilsrun -lforward

utilsrun.hlp: utilsrun.lbn forward.lbn
        cp $(ROOTDIR)/etc/logo.bmp logo.bmp
        $(NR2RTF) $(NROPTIONS) -o divutils.rtf divutils.1 \e
                                  divutils.sm $(NRLIBS)
        $(NR2RTF) $(NROPTIONS) -o drvrun.rtf drvrun.7 \e
                                  drvrun.sm $(NRLIBS)
        $(NR2RTF) $(NROPTIONS) -o utilsrun.rtf utilsrun.1 \e
                                  $(NRLIBS)
        $(MAKEHPJ) -v base=utilsrun \e
                   -v title=Utilities,_Diagnostics_&_Drivers \e
                   utilsrun.rtf divutils.rtf drvrun.rtf
        $(HC31) utilsrun
        $(RM) logo.bmp utilsrun.hpj utilsrun.rtf \e
              divutils.rtf drvrun.rtf

utilsrun.hts: utilsrun.lbn forward.lbn
        $(NR2HTML) $(NROPTIONS) $(NRLIBS) \e
                divutils.1 divutils.sm    \e
                drvrun.7 drvrun.sm        \e
                utilsrun.1

utilsrun.pso: utilsrun.sm
        $(NRORDER) -c -s -z -o $@ utilsrun.sm
.CE 0
.SH "SEE ALSO"
.na
.Ht hts2html 1 ,
.Ht lbn 4 ,
.Ht nr2rtf 1 ,
.Ht nrar 1 ,
.Ht sm 4 ,
.Ht superman 1 .
.ad
.FH
