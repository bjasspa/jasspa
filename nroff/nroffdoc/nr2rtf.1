.Id $Id: nr2rtf.1,v 1.1 2000-10-21 14:31:35 jon Exp $
.Im mantools converters
.TH nr2rtf 1
.XI nr2rtf - "Nroff to Microsoft Rich Text Format (RTF) converter"
.SH NAME
nr2rtf \- Nroff to Microsoft Rich Text Format (RTF) converter.
.SH SYNOPSIS
.sp 1
.na
\fBnr2rtf\fR
\fC[\fB\-?\fC|\fB\-h\fC]\fR
\fC[\fB\-E\fR\ \fI<file>\fC]\fR
\fC[\fB\-e\fR\ \fI<file>\fC]\fR
\fC[\fB\-f\fC|\fB\-m\fC]\fR
\fC[\fB\-H\fR\ \fI<home>\fC]\fR
\fC[\fB\-I\fC]\fR
\fC[\fB\-i\fR\ \fI<section>\fC]\fR
\fC[\fB\-l\fR\ \fI<library>\fC]\fR
\fC[\fB\-L\fR\ \fI<path>\fC]\fR
\fC[\fB\-M\fR\ \fI<module>\fC]\fR
\fC[\fB\-n\fR\ \fI<name>\fC]\fR
\fC[\fB\-o\fR\ \fI<file>\fC]\fR
\fC[\fB\-p\fR\ \fI<file>\fC]\fR
\fC[\fB\-q\fC]\fR
\fC[\fB\-s\fC]\fR
\fC[\fB\-t\fR\ \fI<name:link\fC[\fI:section\fC]\fI>\fC]\fR
\fC[\fB\-w\fC]\fR
\fC[\fB\-x\fC]\fR
\fIfiles \.\.\.\fR
.ad
.SH DESCRIPTION
.B nr2rtf
converts  Nroff files into  Microsoft's  Rich Text Format  (RTF) both with and
without  Windows Help File (.hlp) RTF  extensions.  The converter is primarily
used in conjunction with the Windows help compiler
.Ht hc 1
when it creates hypertext links for help file generation.
.PP
The  converter  takes it's input from the command line, either Nroff files or
the more compact
.Hl superman superman 1
files (see
.Ht sm 4 ).
When  generating  Windows Help files the converter is execute in compile mode,
utilising symbol libraries
.Ht lbn 4
generated by the archiving utility
.Ht nrar 1
to determine  both internal and external  references.  The compiler  utilities a
single pass strategy,  requiring  it's input file set to have been  previously
archived  to enable it to  determine  forward  references.  This is perhaps a
little unorthodox, but does make for a rapid conversion process.
.SS "Windows Help Page Layout"
The Windows Help page layout utilities a fixed format header of the form:
.CS
_____________________________________

XXXX  Header Line
XXXX
XXXX  [link] [link] [link]
_____________________________________

Text Body
.CE
The header is defined as a  non-scrolling  region of space that appears at the
top of the windows help file and is always  visible. The details of the header
are defined as follows:
.IP \fBXXX\fR
identifies  a graphical  logo  position,  the logo is defined to be a BMP file
called \fIlogo.bmp\fR located in the current working directory.
.IP "\fBHeader\ Line\fR"
The topical name of the help page,  derived  from the  \fC.TH\fR or \fC.NH\fR
header description, as defined by
.Ht mad 7 .
.IP "\fB[link]\fR"
A set of  hypertext  links to other  related  modules, set up as short cuts to
other information.
.IP "\fBText\ Body\fR"
the bulk of the manual page text.
.SH OPTIONS
The \fBnr2rtf\fRutility recognises the following options:-
.\" -?/-h help option
.so opt_h.tni
.\" -e -E : Error options.
.so opt_e.tni
.IP "\fC[\fB\-f\fC|\fB\-m\fC]\fR"
These  options  determine the output font type.  \fB\-f\fR is the default when
neither  option is specified and defines the font to be the standard  Windows
Help font (Swiss - Arial). The \fB\-m\fR  option  specifies a UNIX manual type
font (Roman - Times New Roman),  typically used when converting a Nroff manual
page to text for insertion into a Word document
.\" -H <home> : Home page
.so opt_hh.tni
.\" -I : Information.
.so opt_i.tni
.IP "\fB\-i\ \fI<section>\fR"
The \fB\-i\fR  defines  provides an over-riding  section number, when using in
conjunction  with the \fB-n\fR name flag, this  overrides  the default  module
name. The section  number  corresponds  to the UNIX  manual  numbering  scheme
\fI<name>\fB(\fI<number>\fB)\fR.
.\" -l <library> : Library search.
.so opt_l.tni
.IP
A \fI\-l\fR  option is made for each  library  module that is  required by the
Nroff  source  to  resolve  external   references.  Forward  references  (e.g.
references  for labels in modules that have not been built  yet)are  generally
made by manually  constructing a library file called  \fCforward.lbn\fR  which
resolves those references.
.\" -L <path> : Library search path.
.so opt_ll.tni
.\" -M <module> : Module name
.so opt_m.tni
The  \fI<module>\fR  is the name by which all remote pages  references  labels
within the module. The  introductory  page of the module  should also be given
this name, the Windows  \fBContents\fR  button is mapped into the \fImodule\fR
name and serves as the entry point to the module.
.\" -n <name> : Module name
.so opt_n.tni
.\" -o <file> : Output file name.
.so opt_o.tni
.IP
If  the   \fB\-o\fR   option  is  omitted,   the   default   output   file  is
\fImodule\fR.rtf, as defined by the \fB\-M\fR option.
.\" -p : logo picture image
.so opt_p.tni
The default when omitted is \fIlogo.bmp\fR.
.\" -q : Quiet mode.
.so opt_q.tni
.\" -s : Standard out
.so opt_s.tni
.\" -t : Link line name.
.so opt_t.tni
.IP "\fB\-w\fR"
Word mode, generate word processing style RTF output, whereby the Windows Help
file  overloading  of the RTF syntax is not utilised,  enabling the  generated
output to be read by  Microsoft  Word. By  default  the  \fB\-m\fR  option  is
enabled,   whereby  the  RTF  utilises  a  \fIRoman\fR   font  as  opposed  to
\fISwiss\fR.
.\" -x : Compile.
.so opt_x.tni
.SH EXAMPLE
.SS "Typical Example"
The following  example shows the most typical  construction  of a modules help
file in terms of the make  rules. The  example is taken from the  makefile  to
construct this page. In this example, the \fImodule\fR is called \fBmanrun\fR,
generating  a  Windows  Help file  called  \fBmanrun.hlp\fR.  The help file is
generated from the
.Ht superman 1
concatenation of the individual manual Nroff pages defined by \fBmanrun.sm\fR,
an index page \fBmanrun.1\fR which has been constructed using
.Ht nrsearch 1
from \fBmanrun.1s\fR.
.B nr2rtf
also takes as input the library file \fBmanrun.lbn\fR which has been generated
by
.Ht nrar 1 ;
this  defines  the  external  labels  appearing  within  \fBmanrun.sm\fR.  The
additional library \fBforward.lbn\fR forward references the \fIbuild\fR module
which is built after the manual tools.
.PP
Dealing  with  the  help  file  build  itself,  firstly  the  \fIbmp\fR  file,
containing the graphics for the logo is copied into the local directory into a
file called  \fBlogo.bmf\fR  ready for the  compilation  process. Once copied a
single RTF file is generated from the Nroff/Superman  source file. The options
on the command line are:
.BS
.B \-x
to perform a compilation process.
.BU
.B "\-M\ manrun"
generate a module  called  \fBmanrun\fR.  This becomes the  Contents  page
(corresponding  to the Windows  help  \fC[Contents]\fR  button) in this  example the
label  \fImanrun\fR is defined in \fImanrun.1\fR; the file contains all of
the index information and is logically the introduction page.
.BU
.B "\-H\ jasspa"
defines  the  'home'  page  as  \fBjasspa\fR,  requiring  a entry  label  of
\fBjasspa\fR in another module.
.BU
.B "\-L."
Search path for the libraries is the current working directory.
.BU
.B "\-lmanrun \-lforward"
use the  archive  files  \fBmanrun.lbn\fR  and  \fBforward.lbn\fR  to  resolve
references.
.BU
.B "\-tbuild:build"
append a single  link topic to the header to topic  called  \fBbuild\fR  whose
label reference is \fBbuild\fR in another module.
.BE
On completion of the compilation process, \fC$(MAKEHPJ)\fR uses the
.Hr awk 1
utility to  construct  the Window Help  project  file for module  \fBmanrun\fR;
this is assigned a module header of
.BR "Manual Build System" .
The Microsoft Help compiler
.Ht hc 1
is invoked to compile the resultant  RTF into a HLP file. Finally, the working
directory  is  cleaned  up,  the  intermediary   \fC.rtf\fR,   \fC.hpj\fR  and
\fC.bmp\fR files are deleted.
.PP
The resultant makefile is defined as:
.CS
manrun.1:: manrun.sm manrun.1s
        $(NRSEARCH) -o $@ -n manrun.1s manrun.sm
manrun.lbn: manrun.sm manrun.1
        $(NRAR) -M manrun manrun.1 manrun.sm
clean::
        $(RM) manrun.1 manrun.lbn
#
# Build the main components.
#
manrun.sm:: $(MANRUN)
        $(SUPERMAN) -o $@ $(MANRUN)

manrun.hlp: manrun.sm manrun.1 manrun.lbn forward.lbn
        cp $(ROOTDIR)/etc/toollogo.bmp logo.bmp
        $(NR2RTF) -x -M manrun manrun.sm manrun.1       \e
                   -H jasspa                            \e
                   -L. -lmanrun -lforward               \e
                   -tbuild:build
        $(MAKEHPJ) -v base=manrun -v title=Manual_Build_System
        $(HC31) manrun
        $(RM) logo.bmp manrun.rtf manrun.hpj
.CE
The \fBmanrun.1s\fR  file deserves a special mention, the \fBContents\fR  page
has a label called  \fImanrun\fR  which is defined  without a section  number.
The header of the file is defined as follows,  which shows how the  definition
is made:-
.CS
\.Id $Id: nr2rtf.1,v 1.1 2000-10-21 14:31:35 jon Exp $
\.Im mantools
\.TH manrun - - - "Manual Tools"
\.XI manrun - -
\.Ss
\.\e" Run in description mode for the searches.
\.\e" Description mode includes the descriptions when generating indexes
description
\.Se
\.SH Overview
The
\.B "Manual Tools"
describe the manual page  building  utilities,  which run under
DOS, which are used to contruct on-line hypertext documentation
(\efBHTML\efR and \efIWindows\efR \efIHelp\efR files) and the
more traditional UNIX \efIcatman\efR and postscript printed manual

\.\.\.

build system.
\.SH Index
\.Ss
search mantools * *
output * "%N
\.Se
\.FH
.CE 0
.SS "Sub-Module Example"
This  example  is a more  complex  example  involving  sub-modules,  an almost
complete  listing of a makefile is shown later to convey the  operations  that
are performed. In this example two sub-modules \fBdivutils\fR and \fBdrvrun\fR
are contained  within a module  \fButilsrun\fR,  considering  the Windows Help
file  construction,  each  of  the  sub-modules  is  constructed  individually
generating  their  respective RTF files, in addition the contents page for the
whole module  \fButilsrun\fR  is dealt with separately, this contains links to
the sub-modules. The sub-module and Contents RTF files and are merged together
using the Help Compiler
.Ht hc 1 .
The help page rule is defined as follows:-
.CS
utilsrun.hlp: utilsrun.lbn forward.lbn
        cp $(ROOTDIR)/etc/logo.bmp logo.bmp
        $(NR2RTF) $(NROPTIONS) -o divutils.rtf divutils.1 \e
                                  divutils.sm $(NRLIBS)
        $(NR2RTF) $(NROPTIONS) -o drvrun.rtf drvrun.7 \e
                                  drvrun.sm $(NRLIBS)
        $(NR2RTF) $(NROPTIONS) -o utilsrun.rtf utilsrun.1 $(NRLIBS)
        $(MAKEHPJ) -v base=utilsrun \e
                   -v title=Utilities,_Diagnostics_&_Drivers \e
                   utilsrun.rtf divutils.rtf drvrun.rtf
        $(HC31) utilsrun
        $(RM) logo.bmp utilsrun.hpj utilsrun.rtf \e
              divutils.rtf drvrun.rtf
.CE
.ne 7
The following example is a complete makefile description for sub-modules:
.CS
#
# Define some directories
#
ROOTDIR = ../..
include $(ROOTDIR)/etc/makeinc.mk
#
# Define the modules to build to make.

HLPS    =       utilsrun.hlp
LIBS    =       utilsrun.lbn
HTSS    =       utilsrun.hts
SMS     =       utilsrun.sm
PSOS    =       utilsrun.pso

DRVRUN7 =       drv7dbi.7 drv7exos.7 drv7d232.7 drv7m3d.7 \e
                drv7msnd.7 dvs.7
DIVUTILS1=      testipu.1 testvpx.1 testdbi3.1 msnd.1
UTILSRUN=       $(DIVUTILS1) $(DRVRUN7)

#
# Define the local build rules
# Build the local index page.
#
drvrun.7: drvrun.sm drvrun.7s
        $(NRSEARCH) -o $@ -n drvrun.7s drvrun.sm
divutils.1: divutils.sm divutils.1s
        $(NRSEARCH) -o $@ -n divutils.1s divutils.sm
clean::
        $(RM) divutils.1 drvrun.7
#
# Build the files.
#
divutils.sm: $(DIVUTILS1)
        $(SUPERMAN) -o $@ $(DIVUTILS1)
divutils.lbn: divutils.sm divutils.1
        $(NRAR) -M divutils -A utilsrun divutils.sm divutils.1

drvrun.sm: $(DRVRUN7)
        $(SUPERMAN) -o $@ $(DRVRUN7)
drvrun.lbn: drvrun.sm drvrun.7
        $(NRAR) -M drvrun -A utilsrun drvrun.sm drvrun.7
#
# Build the library.
#
utilsrun.lbn: divutils.lbn drvrun.lbn utilsrun.1
        $(NRAR) -o $@ -M utilsrun -L. -ldivutils \e
                         -ldrvrun utilsrun.1
clean::
        $(RM) divutils.lbn drvrun.lbn utilsrun.lbn
#
# Build the superman file.
#
utilsrun.sm:    divutils.sm drvrun.sm
        $(SUPERMAN) -o $@ divutils.sm drvrun.sm
#
# Build the windows help files.
#

NROPTIONS =     -x -M utilsrun -H jasspa \e
                -tdiagnostics:divutils -tdriver:drvrun
NRLIBS    =     -L. -lutilsrun -lforward

utilsrun.hlp: utilsrun.lbn forward.lbn
        cp $(ROOTDIR)/etc/logo.bmp logo.bmp
        $(NR2RTF) $(NROPTIONS) -o divutils.rtf divutils.1 \e
                                  divutils.sm $(NRLIBS)
        $(NR2RTF) $(NROPTIONS) -o drvrun.rtf drvrun.7 \e
                                  drvrun.sm $(NRLIBS)
        $(NR2RTF) $(NROPTIONS) -o utilsrun.rtf utilsrun.1 \e
                                  $(NRLIBS)
        $(MAKEHPJ) -v base=utilsrun \e
                   -v title=Utilities,_Diagnostics_&_Drivers \e
                   utilsrun.rtf divutils.rtf drvrun.rtf
        $(HC31) utilsrun
        $(RM) logo.bmp utilsrun.hpj utilsrun.rtf \e
              divutils.rtf drvrun.rtf

utilsrun.hts: utilsrun.lbn forward.lbn
        $(NR2HTML) $(NROPTIONS) $(NRLIBS) \e
                divutils.1 divutils.sm \e
                drvrun.7 drvrun.sm \e
                utilsrun.1

utilsrun.pso: utilsrun.sm
        $(NRORDER) -c -s -z -o $@ utilsrun.sm
.CE 0
.SH "SEE ALSO"
.na
.Ht hc 1 ,
.Ht lbn 4 ,
.Ht nr2html 1 ,
.Ht nrar 1 ,
.Ht sm 4 ,
.Ht superman 1 .
.ad
.FH
