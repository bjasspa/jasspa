 "" "\ecCBash Constructs:\ecA"
case "case $\pvar in\r    1) echo 'value is one' ;;\r\B\B\B\B2) echo 'value is 2' ;;\r\B\B\B\B*) echo 'other value' ;;\r\B\B\B\Besac\r\P" "  case"
if "if [[ \p ]] ; then\r  ;\r\B\Bfi\r\P" "  if"
ef "elif [[ \p ]] ; then\r\P" "  ef (elif)"
el "else\r  \p" "  el (else)"  
fo "for \p ((i = 1; i <= $n ; i++)); do\r  echo $i\rdone\r\P" "  fo(r)"
wh "while [[ \p ]]; do\r    ;\r\B\B\B\Bdone\P" "  wh(ile)"
un "until [[ \p ]]; do\r    ;\r\B\B\B\Bdone\P" "  un(til)"
inp "echo 'Enter a value: '\rread \pval\recho $val\r\P" "  input"
fun "function \p () {\r  if [ -z $1 ]; then\r   echo \"Usage: <funcname> arg1\"\rreturn 1\r\B\B\Bfi\r\B\B}\P"  "  fun(ction)"
ifp "if [[ \"\" == \"$(which \p 2> /dev/null)\" ]]; then\r    echo \"Error: program does not exists!\"\r\B\B\B\Bfi\r\P" "  ifp (which prog)"
arr "arr=(\pval1 val2)\P" "  arr(ay)"
dic "declare -A \pdict\rdict[\"key\"]=\"value\"\r\P" "  dic(t)"
foa "for \pvar in \"${arr[@]}\"; do\r    echo $var\r\B\B\B\Bdone\P" "  foa (foreach a)"
fok "for key in \"${!dict[@]}\"; do\r    \pecho \"$key = ${dict[$key]}\"\r\B\B\B\Bdone\P" "  fok (foreach k,v)"
sl  "options=(op1 op2 op3)\rPS3=\"Select your option: \"\rselect option in \"${options[@]}\"; do\r  case\p\rdone\r\P" "  se(lect)"
 "" ""
 "" "\ecCBash File Checks:\ecA"
fexi  "if [[ ! -f $\pfilename ]]; then\r    echo \"Error: File '$filename' does not exists!\"\rreturn 1\r\B\B\B\Bfi\r\P" "  \ecCf\ecA(ile) \ecCexi\ecA(sts)"
fext  "if [[ ! $\pfilename == *.ext ]]; then\r    echo \"Error: File '$filename' does not have the extension .ext!\"\rreturn 1\r\B\B\B\Bfi\r\P" "  \ecCf\ecA(ile) \ecCext\ecA(ension)"
 "" ""
