; -!- emf -!-
; This is part of the JASSPA MicroEmacs macro files
; Copyright (C) 1999-2004 JASSPA (www.jasspa.com)
; See the file me.emf for copying and conditions.
;
; Created:     Thu Mar 25 21:49:50 2004
; Synopsis:    Useful extensions to user.emf file
;              Add to your file ~/.jasspa/$LOGNAME.emf
; Authors:     Jon Green
;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; ; Set up CVS to be compressed.
;; set-variable %cvs-com "cvs -z9 "

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; spotless; Perform a clean and remove any multi-blank lines.
define-macro spotless
    -1 clean
!emacro

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; comment-adjust; Used for comments in electric-c mode (and the other
; electic modes. Moves to the comment fill position, saves having to mess
; around with comments at the end of the line.
0 define-macro comment-adjust
    ; delete all spaces up until the next character
    !while &sin @wc " \t"
        forward-delete-char
    !done
    ; Fill the line to the current $c-margin. We use this as
    ; this is the only variable that tells us where the margin
    ; should be.
    !if &gre $window-acol 0
        backward-char
        !if &sin @wc " \t"
	    forward-delete-char
            !jump -4
        !else
            forward-char
        !endif
    !endif
    ; Now fill to the $c-margin
    &sub $c-margin $window-acol insert-string " "
!emacro
global-bind-key comment-adjust          "esc tab"
global-bind-key comment-adjust          "C-insert"
; Comment margin to adjust to.
set-variable $c-margin 40

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; insert-date; Insert the current date into the text.
define-macro insert-date
    ascii-time
    ; ascii-time returns a formatted string in #l9
    insert-string #l9
!emacro

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Macro to delete the whitespace, or if on a word all of the word until the
; next word is reached.
0 define-macro super-delete
    set-variable #l0 0
    !while &not &sin @wc " \t\n"
        forward-char
        set-variable #l0 &add #l0 1
    !done
    !repeat
        !force forward-char
        !if $status
            set-variable #l0 &add #l0 1
        !endif
    !until &or &seq @wc "" &not &sin @wc " \t\n"
    #l0 backward-delete-char
    !return
!emacro
global-bind-key super-delete            "C-delete"

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Macro to backspace the whitespace, or if on a word all of the word until the
; previous word is reached.
0 define-macro super-backspace
    set-variable #l0 -1
    set-variable #l1 0
    !repeat
        !force backward-char
        !if $status
            set-variable #l0 &add #l0 1
            !if &sin @wc " \t\n"
                set-variable #l1 1
            !endif
        !else
            set-variable #l1 1
        !endif
    !until #l1
    !repeat
        !force backward-char
        !if $status
            set-variable #l0 &add #l0 1
        !else
            &add #l0 1 forward-delete-char
            !return
        !endif
    !until &not &sin @wc " \t\n"
    forward-char
    #l0 forward-delete-char
    !return
!emacro
global-bind-key super-backspace         "C-backspace"

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Command to move to the previous buffer.
define-macro previous-buffer
    &neg @# next-buffer
!emacro

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; ; If you loose the C-k kill-line key then you are miss-typing and unbinding.
;; ; Remove the global-unbind-key binding so this cannot happen.
;; !force global-unbind-key "esc C-k"

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; ; If you can never remember the undo key then bind to a function key.
;; global-bind-key undo                    "f12"
