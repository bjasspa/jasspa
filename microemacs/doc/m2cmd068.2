.\" -*- nroff -*-
.Id $Id: m2cmd068.2,v 2.1 2001-05-14 19:53:36 jon Exp $
.Im MicroEmacs command|buffer
.so me.tni
.TH narrow-buffer 2
.XI narrow-buffer \- "Hide buffer lines"
.SH NAME
narrow-buffer \- Hide buffer lines
.Me $a
.SH SYNOPSIS
.na
.I n
.B narrow-buffer
.ad
.SH DESCRIPTION
The effect of  \fBnarrow-buffer\fR  depends on the argument  given, defined as
follows:-
.IP 1
Removes all narrows in the current buffer (Default).
.IP 2
Removes the current line's narrow.
.IP 3
Narrow to region.  Hides all but the lines of test in the current  buffer from
the
.Hl mark set-mark 2
position to the current cursor position, effectively 'narrowing' the buffer to
the remaining text.
.IP 4
Narrow out region. Hides the lines of test in the current buffer from the
.Hl mark set-mark 2
position to the current cursor position, opposite to argument \fB3\fR.
.PP
When a narrow is created the buffer mode
.Ht narrow 2m
is automatically set, when the last is removed this mode is deleted.
.PP
For example, if the buffer contains the following text:
.CS
1 Richmond 
2 Lafayette 
3 Bloomington
4 Indianapolis 
5 Gary 
6
.CE
If the mark is on line 2 and the current point is on line 4, executing:-
.CS
4 narrow-buffer
.CE
Creates  one  narrow,  narrowing  out line 2 and 3. Line 4 becomes  the narrow
anchor line, when the narrow is removed lines 2 and 3 will be inserted  before
line 4. The buffer will become:- 
.CS
1 Richmond 
4 Indianapolis 
5 Gary 
.CE
If instead the following was executed:-
.CS
3 narrow-buffer
.CE
Two narrows are  created,  the first  narrowing  out line 4 and 5 (line 6, the
last line,  being the  anchor  line) the second  narrowing  out line 1 (line 2
being the anchor line). The buffer will become:-
.CS
2 Lafayette 
3 Bloomington
6
.CE
Executing  \fBnarrow-buffer\fR  with an argument of \fB2\fR  will only work on
the anchor lines, namely 4 in the first example and 2 and 6 in the second.
.SH NOTES
Alpha mark set by
.Ht set-alpha-mark 2
in text  which is  subsequently  narrowed  out will  automatically  remove the
narrow if the user returns to the mark using
.Ht goto-alpha-mark 2 .
.PP
.Ht get-next-line 2
operates  on the  unnarrowed  buffer and will  remove any  narrows  hiding the
\&'next' line.
.SH EXAMPLE
.Ht c-hash-eval 3
macro defined in cmacros.emf uses narrow-buffer to hide regions of source code
which has been #defined out, improving readability.
.PP
.Ht vm 3
defined  in  vm.emf  uses narrow-buffer with appropriate arguments to
.Ht append-buffer 2
and
.Ht write-buffer 2
to write out only parts of the current buffer.
.SH "SEE ALSO"
.na
.Ht narrow 2m ,
.Ht set-mark 2 ,
.Ht set-alpha-mark 2 ,
.Ht get-next-line 2 ,
.Ht c-hash-eval 3 ,
.Ht vm 3 .
.ad
.FH
