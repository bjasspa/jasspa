.\" -*- nroff -*-
.\" This is part of the JASSPA MicroEmacs documentation files.
.\" Copyright (c) 1998-2009 JASSPA (www.jasspa.com)
.\" See the file "me.nrs" for copying and conditions.
.\"
.\"  Created By    : Jon Green
.\"  Created       : Thu Jul 16 23:13:14 1998
.\"
.Id $Id: m2cmd072.2,v 2.7 2009/08/29 17:13:11 jon Exp $
.Im MicroEmacs command|registry
.so me.tni
.TH find-registry 2
.XI find-registry - "Index search of a registry sub-tree"
.SH NAME
find-registry \- Index search of a registry sub-tree.
.SH SYNOPSIS
.na
.B find-registry
"\fIroot\fR"
\fIindex\fR
.ad
.SH DESCRIPTION
.B find-registry
performs  an  indexed  search of a registry  sub-tree  allowing  the caller to
determine  the names of the children  that exist as sub-nodes of the specified
node.  \fIroot\fR  defines  position in the hierarchy whose children are to be
determined.  \fIindex\fR is a value from  \fC0..n\fR and  identifies the index
number of the child node. The name of the child node is returned in
.Ht $result 5
if one exists, otherwise an error status is returned.
.SH EXAMPLE
The   following   example   comes  from   \fCaddrbook.emf\fR   and  shows  how
\fBfind-registry\fR  is used to iterate  through  entries in the address book.
Note that \fBfind-registry\fR is used with
.Ht !force 4
and the
.Ht $status 5
of the call is tested to determine if the invocation succeeded.
.Me $emf-scheme
.CS
!force find-registry "/AddressBook/Names" #l0
!if $status
    set-variable #l1 $result
    76 insert-string "_"
    2 newline
    insert-string &spr "Section: %s" #l1
    newline
    ; Iterate through all of the entries.
    set-variable #l2 0

    !repeat
        !force #l2 ab-buffer
        !if $status
            set-variable #l2 &add #l2 1
        !endif
    !until &not $status
    set-variable #l0 &add #l0 1
    !goto next
!endif
.CE 0
.Me $ehf-scheme
.SH "SEE ALSO"
.na
.Ht copy-registry 3 ,
.Ht delete-registry 2 ,
.Ht list-registry 2 ,
.Ht mark-registry 2 ,
.Ht read-registry 2 ,
.Ht set-registry 2 ,
.Ht &reg 4 ,
.Ht erf 8 .
.ad
.FH
