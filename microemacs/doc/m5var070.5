.\" -*- nroff -*-
.\" This is part of the JASSPA MicroEmacs documentation files.
.\" Copyright (c) 1998-2009 JASSPA (www.jasspa.com)
.\" See the file "me.nrs" for copying and conditions.
.\"
.Id $Id: m5var070.5,v 2.8 2024/10/21 16:35:40 jon Exp $
.Im MicroEmacs variable|buffer|macrodevelop
.so me.tni
.TH $buffer-fmod 5
.XI $buffer-fmod - "Buffer file modes (or attributes)"
.XI $global-fmod - "Global file modes (or attributes)"
.SH NAME
.br
.Me "|$buffer-fmod"
$buffer-fmod \- Buffer file modes (or attributes)
.br
.Me "|$global-fmod"
$global-fmod \- Global file modes (or attributes)
.Me $a
.SH SYNOPSIS
.na
.B $buffer-fmod
.I FileMode
.br
.B $global-fmod
.I FileMode
.ad
.SH DESCRIPTION
.B $buffer-fmod
is bit based variable setting the buffers file system modes or attributes. If the buffer was loaded from an existing
file then the value of \fB$buffer-fmod\fR is taken directly from the file. But if the buffer was created then the
buffer inherits the default file modes, \fB$global-fmod\fR, which is determined from the users umask on \s-1UNIX\s0 or
a default on others.
.PP
Note that the retrieved value of \fB$buffer-fmod\fR can be different to the set value, see the \fBNOTES\fR section 
below.
.PP
The definition of the file mode bits are platform  specific and are considered
independently, as follows:
.SS "UNIX"
The file modes of Unix are the  standard  read, write and execute  permissions
for user, group and global. See
.Hr chmod 1
for a full description of their use and effect. 
.PP
The variable is displayed in octal.
.SS "Microsoft Windows and DOS"
On Microsoft platforms each file attribute (see 
.Hr attrib 1 )
is  assigned  a bit, on  windows  95 and NT the new  file  attributes  such as
compressed are also represented. The bits are assigned as follows
.CS
Bit     Attrib Flag     Attribute
0x001       R           Read Only
0x002       H           Hidden
0x004       S           System
0x010                   Directory
0x020       A           Archive
0x080                   Normal
0x100                   Temporary
0x800                   Compressed
.CE 0
.SH EXAMPLE
The  following  example  changes  the  $buffer-fmod  so that the file  will be
executable (UNIX only), useful when writing a shell script.
.Me $emf-scheme
.CS
set-variable $buffer-fmod 0775
.CE 0
.Me $ehf-scheme
.SH NOTES
When retrieved, the buffer's file flags are also merged into the value of \fB$buffer-fmod\fR. These flags are not 
platform specific and used to store the current properties of the buffer's file. They cannot be set and are defined as 
follows:
.IP \fB0x10000\fR
When set the buffer is a directory listing, created by the
.Ht find-file 2
command when the file name given is a directory. Earlier versions of \*(mS had a \fBdir\fR buffer mode, this mode has
been removed as this property cannot be simply toggled like other modes. Checking the value of this bit should be used
instead.
.IP \fB0x20000\fR
When set the file was found to contain binary data that cannot be safely represented in a buffer, as a result saving 
the buffer will result in data loss and corruption. Note that this is different to
.Ht binary 2m
or 
.Ht rbin 2m
buffer modes which can safely represent any binary data, i.e. a file loaded with binary mode enabled will never have 
this bit set.
.IP \fB0x40000\fR
When set the file was found to contain inconsistent line terminations, i.e. typically some lines terminated with '\fC\\n\fR'
and others with '\fC\\r\\n\fR'. Saving the file will unify/correct the line terminations, but this could be a 
corruption.
.SH "SEE ALSO"
.na
.Ht find-file 2 ,
.Ht cr 2m ,
.Ht lf 2m ,
.Ht binary 2m ,
.Ht ctrlz 2m ,
.Ht auto 2m .
.ad
.FH
