.\" -*- nroff -*-
.\" Copyright (C) 1999-2009 JASSPA (www.jasspa.com)
.\"
.\" This is part of JASSPA's MicroEmacs, see the LICENSE file for licensing and
.\" copying information.
.\"
.\"  Created By    : Jon Green
.\"  Created       : Thu Jun 24 22:02:47 1999
.\"
.Id $Id: m9typ033.9,v 2.6 2025/07/29 22:01:25 jon Exp $
.Im MicroEmacs filetype
.so me.tni
.TH python 9
.XI python - "Python Language File"
.XI py - "Python Language File"
.XI py-doc 3 - "Display Python manual page"
.SH NAME
.Me "|py-doc"
py-doc \- "Display Python manual page"
.Me $a
.SH SYNOPSIS
python \- Python Language File.
.br
\fBpy-doc\fR "\fIman-page\fR"
.SH FILES
.na
.B hkpython.emf
\- Python Language file hook definition and py-doc macro implementation
.br
.B python.eaf
\- Python abbreviation file
.br
.B python.etf
\- Python template file
.ad
.SH EXTENSIONS
.na
\fB.py\fR \- Python file
.ad
.SH "MAGIC STRINGS"
.TP
\fB^#![ \\t]*/.*env[ \\t]+python\fR
.\"
\*(mE recognizes the magic string on the first line of the file used to locate
the  executable.  The  Python  files  may  be  extension-less  and  are  still
recognized.
.SH DESCRIPTION
The  \fBpython\fR  file type  template  provides  simple  hilighting of Python
files, the template provides minimal hilighting.
.PP
File recognition is performed using the standard file extension  \fB.py\fR, or
by the magic string.
.PP
It offers as well folding and support for displaying an outline of the
functions of the Python script for easy navigation using the 
.Ht item-list 3
command.  Further  is is  possible  to expand  abbreviations  either via short
strings using the
.Ht expand-abbrev-handle 3
command and visual inserting abbreviations using the mouse by the
.Ht abbrev-list 3
macro. 
.IP "\fBFolding and Information Hiding\fR"
Generic  folding is enabled  within the Python files. The folds occur about
the \fBdef\fR or \fBclass\fR keywords located
on the left-hand margin at the beginning of the line.
The following commands are supported to show and hide the function bodies.
.Ht collapse-all 3
(un)folds all regions in the file,
.Ht collapse-current 3
(un)folds the current region.
.IP "\fBList Items\fR"
Item listing is available and the key  constructs of the file may be listed in
the \fIitem-list\fR.
.IP "\fBAbbreviations\fR"
The  installation  comes with a default  abbreviation  file for Python code  editing
which  can  be  used  by  writing  short   abbreviations   like   "\fBmain\fR"
for a default Python application outline,"\fBfor\fR",
"\fBif\fR" or "\fBdef\fR" - for a Python function,  "\fBclass\fR" for a Python
class - and then  pressing the key-binding for the 
.Ht expand-abbrev-handle 3
command.  The  list  of  abbreviations  can be used  interactively  in the GUI
version of \*(mE using the 
.Ht abbrev-list 3
command.
.IP "\fBShort Cuts\fR"
The short cut keys used within the buffer are:-
.IP
\fB\*cc \*cc\fR \- Comment out the current line.
.br
\fB\*cc \*cd\fR \- Uncomment the current line.
.br
\fB\*cc \*ce\fR \- Comment to the end of the line with stars (*).
.br
\fB\*a\*ci\fR \- Restyle the current region.
.br
\fBf2\fR \- (un)fold the current region
.br
\fBf3\fR \- (un)fold all regions
.br
\fBf6\fR \- list items
.br
\fB\*e f6\fR \- close list items
.IP "\fBExecuting, Formatting and Linting Python Code\fR"
The Python file hook supports the 
.Ht file-exec 3 ,
the 
.Ht file-format 3
and the 
.Ht file-lint 3
macros. The tools which are currently supported are Python 3 and 2 interpreters, the formatters ruff, yapf and black
and linters ruff and pylint. All of these tools can usually be installed using the default package manager of your system or
using the pip3 package manager of Python. Here an example on how to install the Python linter and formatter ruff using
the pip package manager:
.RS
.CS
pip3 install ruff --user
.CE 0
.RE
.IP "\fBpy-doc macro\fR"
\fBpy-doc\fR provides a mechanism to display a Python manual page within \*(mS. On invoking \fBpy-doc\fR the
user is prompted for the name of the manual page to display:-
.RS
.CS
Python help on ?
.CE
The command invokes
.Hr Python 1
using the \fBpydoc\fR module to generate the requested manual page in a "*py-doc*" buffer. This buffer supports
.Ht item-list 3
to help browse the content generated.
.RE
.SH NOTES
.PP
The  hilightings  or the item-list matches are  typically   extended  using  a
file   \fBmypython.emf\fR.
.SH BUGS
There would  appear to be too much applied  hilighting  in this file, it could
probably do with rationalizing.
.SH "SEE ALSO"
.na
.Ht abbrev-list 3 ,
.Ht collapse-all 3 ,
.Ht collapse-current 3 ,
.Ht expand-abbrev-handle 3 ,
.Ht file-exec 3 ,
.Ht file-format 3 ,
.Ht file-lint 3 ,
.Ht item-list 3 .
.sp 1
.Hl "Supported File Types" FileTypes -
.ad
.FH

