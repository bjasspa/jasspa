.\" -*- nroff -*-
.\" Copyright (C) 1999-2025 JASSPA (www.jasspa.com)
.\"
.\" This is part of JASSPA's MicroEmacs, see the LICENSE file for licensing and
.\" copying information.
.\"
.\"  Created By    : Detlef Groth
.\"  Created       : 2025-07-23
.\"
.Id $Id: m9typ057.9,v 2.6 2025/08/20 17:05:46 jon Exp $
.Im MicroEmacs filetype
.so me.tni
.TH jl 9
.XI jl - "Julia File"
.XI julia - "Julia File"
.SH SYNOPSIS
j, jl \- Julia files
.SH FILES
.na
.B hkjulia.emf
\- Julia hook definition
.br
.B julia.eaf
\- Julia abbreviation file
.br
.B julia.etf
\- Julia template file.
.ad
.SH EXTENSIONS
.na
\fB.jl\fR \- Julia file
.ad
.SH DESCRIPTION
The  \fBJulia\fR  file type  editing provides  simple  hilighting of Julia
files, abbreviations, folding and an item-list.
.IP "\fBAbbreviations\fR"
The  installation  comes with a default  abbreviation  file for Julia file  editing
which  can  be  used  by  writing   short   abbreviations   like   "\fBif\fR",
"\fBel\fR" (else) or "\fBfu\fR" (function) - and then pressing the key-binding for the 
.Ht expand-abbrev-handle 3
command.  
The  list  of  abbreviations  can be used  interactively  in the GUI
version of \*(mE using the 
.Ht abbrev-list 3
command.
.IP "\fBAuto Layout\fR"
The
.Hl "indentation mechanism" indent 2
is enabled which performs automatic layout of the text.
.Ht restyle-region 3
and
.Ht restyle-buffer 3
are available to reformat  (re-layout) selected sections of the buffer, or the
whole buffer, respectively.
.IP "\fBFolding and Information Hiding\fR"
Generic  folding  is  enabled  within  the Julia  file. The folds  occur  about
functions,  macros and structs as long as these declarations are on
one line and ending at a line starting with the \fBend\fR keyword.
.Ht collapse-all 3
(un)folds all regions in the file,
.Ht collapse-current 3
(un)folds the current region.
.IP "\fBNavigation via Item List\fR"
The Julia mode offers beside folding as well support for displaying an outline of the
functions, macros and structs for easy navigation using the 
.Ht item-list 3
command.
.IP "\fBShort Cuts\fR"
The short cut keys used within the buffer are:-
.IP
\fB\*cc \*cc\fR \- Comment out the current line.
.br
\fB\*cc \*cd\fR \- Uncomment the current line.
.br
\fB\*cc \*ce\fR \- Comment to the end of the line with stars (#).
.br
\fB\*a\*ci\fR \- Restyle the current region.
.br
\fB\*eq\fR \- Format a comment.
.br
\fB\*eo\fR \- Format a comment.
.br
\fBf2\fR \- (Un)fold the current region.
.br
\fB\*cf2\fR \- (Un)fold all regions.
.br
\fBf6\fR \- List items.
.br
\fB\*ef6\fR \- Close item list.
.IP "\fBExecuting, Formatting and Linting Julia Code\fR"
The Julia file hook supports the 
.Ht file-exec 3 ,
the 
.Ht file-format 3
and the 
.Ht file-lint 3
macros.   The   Julia    packages   which   are   currently    supported   for
formatting and linting are
"Runic" and "ReLint". The  procedure  to install the "runic" script as a standalone  application  on a Unix
system is  like this:
.RS
.CS
# Download the script into ~/.local/bin
curl -fsSL -o ~/.local/bin/runic https://raw.githubusercontent.com/fredrikekre/Runic.jl/refs/heads/master/bin/runic
# Make the script executable
chmod +x ~/.local/bin/runic
# Verify the installation
runic --version
.CE 0
.RE
The procedure to install the "ReLint" Julia linter in the julia shell is like this:
.RS
.CS
import Pkg 
Pkg.add(url="https://github.com/RelationalAI-oss/ReLint.jl")
.CE 0
.RE
.SH NOTES
.PP
The  hilighting  and other features are  typically   extended  using  a  file   \fBmyjl.emf\fR.
.SH BUGS
None reported so far.
.SH "SEE ALSO"
.na
.Ht abbrev-list 3 ,
.Ht collapse-all 3 ,
.Ht collapse-current 3 ,
.Ht expand-abbrev-handle 3 ,
.Ht file-exec 3 ,
.Ht file-format 3 ,
.Ht file-lint 3 ,
.Ht item-list 3 ,
.Ht restyle-buffer 3 ,
.Ht restyle-region 3 ,
.Ht time 2m .
.sp 1
.Hl "Supported File Types" FileTypes -
.ad
.FH
