.\" -*- nroff -*-
.Id $Id: m2cmd054.2,v 2.0 2001-03-08 21:27:26 jon Exp $
.Im MicroEmacs command|file
.ds C0 "(\fB\*(cX9\fR)\ \&
.so me.tni
.TH find-bfile 2
.XI find-bfile \- "\*(C0Load a file as binary data"
.SH NAME
find-bfile \- Load a file as binary data
.Me $a
.SH SYNOPSIS
.na
.I n
.B find-bfile
"\fIfile-name\fR" \*(C0
.ad
.SH DESCRIPTION
.B find-bfile
loads a file as binary, providing binary editing capabilities.
.PP
The command operates as
.Ht find-file 2
except that it loads the given  file with
.Ht binary 2m
mode set. \s-1binary\s0 mode loads any file and converts every 16 bytes into a
line of text  giving the hex address of the current  position in the file, the
bytes as  hexadecimal  numbers and all printable  characters at the end of the
line (all non-printable characters are displayed as a '\fC.\fR').
.PP
The  extension of a file loaded in binary mode is ignored with respect to file
hooks  (See
.Ht add-file-hook 2 ).
Instead  the  \fBfhook-binary\fR  command  is  always executed if it exists.
.PP
Each line of text may be edited, providing that the basic format of every line
remains the same, the altered file may be written out,  providing  full binary
editing  capabilities.  This  mode has two  draw-backs,  firstly  it is memory
hungry  in  that  every  16 byte of the  file  requires  a 78  character  line
(approximately 5 times more memory!).  Secondly if the  \s-1binary\s0  mode is
added  globally  then  \s-1EVERY\s0  file is loaded in binary mode,  including
macro  files  which  subsequently  will not  execute.  For this  reason, it is
recommended that this mode is not added globally.
.PP
Example, given a single line \s-1MSDOS\s0 file:-
.CS
Live long and prosper.
.CE
When loaded in \s-1binary\s0 mode will produce the following 2 line buffer:-
.CS
00000000: 4C 69 76 65 20 6C 6F 6E 67 20 61 6E 64 20 70 72  |  Live long and pr
00000010: 6F 73 70 65 72 2E 0D 0A 1A                       |  osper....
.CE
Note  the  "\fC0D  0A  1A\fR"  at  the  end,  this  is  due to  \s-1MSDOS\s0's
"\fC\\n\\r\fR"   carriage  returns  and  \fC^Z\fR  file   termination,   these
characters  are  unprintable and are shown as '\fC.\fR' at the end of the line.
The basic form of a binary file is:-
.CS
AAAAAAAA: XX XX XX XX ....  |
.CE
When saving a binary file, only the text  between the  '\fC:\fR' and '\fC|\fR'
is considered and it may contain any number of hexadecimal  numbers. The given
file could be made \s-1UNIX\s0 compatible by editing the buffer to:-
.CS
00000000: 4C 69 76 65 20 6C 6F 6E 67 20 61 6E 64 20 70 72  |  Live long and pr
00000010: 6F 73 70 65 72 2E 0D                       |  osper....
.CE
If the word  "\fBlong\fR"  is required to be removed, the following  would not
work:-
.CS
00000000: 4C 69 76 65 20 6C 6F 6E 67 20 61 6E 64 20 70 72  |  Live and pr
00000010: 6F 73 70 65 72 2E 0D 0A 1A                       |  osper....
.CE
The ASCII end letters are ignored,  instead the  following  operation  must be
performed which removes the characters from the binary representation:-
.CS
00000000: 4C 69 76 65 20 61 6E 64 20 70 72  |  Live long and pr
00000010: 6F 73 70 65 72 2E 0D 0A 1A                       |  osper....
.CE
One could be nasty by doing the following:-
.CS
00000000: 4C 69 76 65 20 73 68 6F 72 74 20 61 6E 64 20 |
00000010: 64 6F 6E 27 74 20 70 72 6F 73 70 65 72 2E 0D 0A 1A           |
.CE
("Live short and don't prosper").
.SH "SEE ALSO"
.na
.Ht find-file 2 ,
.Ht binary 2m .
.ad
.rm C0
.FH
