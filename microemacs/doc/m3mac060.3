.\" -*- nroff -*-
.\" Copyright (C) 1998-2009 JASSPA (www.jasspa.com)
.\"
.\" This is part of JASSPA's MicroEmacs, see the LICENSE file for licensing and
.\" copying information.
.\"
% TODO: Update to include region 
.Id $Id: m3mac060.3,v 1.7 2025/07/14 08:59:28 jon Exp $
.Im MicroEmacs scuts
.so me.tni
.TH comment-line 3
.XI comment-line - "Comment out the current line"
.XI uncomment-line - "Uncomment current line"
.XI comment-to-end-of-line - "Extend comment to end of line"
.XI comment-restyle - "Reformat the current comment"
.XI comment-start - "Start a new comment"
.XI comment-end - "End the current comment"
.SH NAME
.Me "|comment-line"
comment-line \- Comment out the current line
.br
.Me "|uncomment-line"
uncomment-line \- Uncomment current line
.sp
.Me "|comment-to-end-of-line"
comment-to-end-of-line \- Extend comment to end of line
.br
.Me "|comment-restyle"
comment-restyle \- Reformat the current comment
.sp
.Me "|comment-start"
comment-start \- Start a new comment
.br
.Me "|comment-end"
comment-end \- End the current comment
.Me $a
.SH SYNOPSIS
.na
.I n
.B comment-line
.br
.I n
.B uncomment-line
.sp
.B comment-to-end-of-line
.br
.B comment-restyle
.sp
.B comment-start
.br
.B comment-end
.ad
.SH DESCRIPTION
The action of the \fBcomment\fR  commands are file type specific  (comments in
\fBC\fR  are \fC/* ... to ... */\fR where as \*(mS macro file  comments  are
\fC; ... to the end of line\fR) so the commands  must be  configured  for each
file   type   (see  the   NOTES   section   below).   The   configuration   is
automatically  performed by almost all the standard  file  hooks released with
\*(mS by the file hook so these commands should be fully functional.
.PP
\fBcomment-line\fR  comments out the current and next \fIn\fR-1 lines (default
when  \fIn\fR is omitted is to comment out just the current  line). The cursor
is then  moved to the  start of the next  line.  \fBuncomment-line\fR  behaves
differently  depending  on whether the file type  terminates a comment with an
end  token or  simply  by the end of the  line. If an end  token is used  then
\fBuncomment-line\fR removes the current and next \fIn\fR comments. If the end
of line is used \fBuncomment-line\fR  removes the first comment on the current
and next \fIn-1\fR lines.
.PP
\fBcomment-to-end-of-line\fR inserts \fIcomment-pad\fRs (see NOTES) up-to the
.Ht $buffer-fill-col 5
and  then   terminates   the  comment  with  the   \fIcomment-end\fR   string.
\fBcomment-restyle\fR  reformats  the text within the  comment,  filling  text
lines to the  \fB$buffer-fill-col\fR  and  regenerating  any boxing and divide
lines.
.PP
\fBcomment-start\fR  opens a new "\fB*comment*\fR"  buffer which is configured
for writing a text comment, the user can then type in the comment with all the
benefits of \*(mS in a plain text editor. Once the comment is complete use the
\fBcomment-end\fR  command to insert the  comment  into the source  file, this
comment is locally  bounded to "\fBC-c  C-c\fR". The styling of the comment is
controlled by the \fIcomment-flag\fR setting (see NOTES).
.SH NOTES
Consider the structure of a box comment to be as follows:
.CS
<comment-start><comment-pad><comment-pad><comment-pad><comment-box-right>
<comment-box-left> COMMENT TEXT ... COMMENT TEXT      <comment-box-right>
<comment-box-left> COMMENT TEXT ... COMMENT TEXT      <comment-box-right>
<comment-box-left><comment-pad><comment-pad><comment-pad><comment-end>
.CE
The comment  commands are configured by the single file hook command  variable
\fB.fhook-\fR\fI<type>\fR\fB.comment\fR  where  \fI<type>\fR  is the file type
label. The structure of the variable is a
.Hl list &lset 4
with the following format:
.CS
    |<comment-start>|<comment-end>|<comment-pad>|<comment-box-left>|...
        ...<comment-box-right>|<comment-flags>|
.CE
Where \fC|\fR is the list divide  character. The  \fI<comment-flags>\fR  are a
list of character flags which are defined as follows:
.IP \fCb\fR
Box format required, i.e. create right edge using \fI<comment-box-right>\fR.
.IP \fCf\fR
Footer line required.
.IP \fCF\fR
Fill footer line with \fI<comment-pad>\fR strings.
.IP \fCh\fR
Header line required.
.IP \fCH\fR
Fill header line with \fI<comment-pad>\fR strings.
.IP \fCj\fR
Enable Justify mode in *comment* buffer.
.IP \fCr\fR
A restyle  key binding is added to the buffer  "\fC\*eo\fR"  and  "\fC\*eq\fR"
buffer key bindings are added and bound to
.Ht comment-restyle 3 .
.SH EXAMPLE
The following \fBcomment\fR is the standard \fBC\fR setting:
.Me $emf-scheme
.CS
set-variable .fhook-c.comment "|/*| */|*| * | * |f|"
.CE
.Me $ehf-scheme
This can be used to create comments of the form:
.CS
/* comment-line comments out the current and next n-1 lines (default
 * when n is omitted is to comment out just the current line). The
 * cursor is then moved to the start of the next line.
 *
 * uncomment-line behaves differently depending on whether the file
 * type terminates a comment with an end token or simply by the end
 * of the line.
 */
.CE
A box style  comment can be  generated  by changing the  \fI<comment-flags>\fR
form \fCf\fR to \fCbfFhH\fR, producing:
.CS
/*********************************************************************
 * comment-line comments out the current and next n-1 lines (default *
 * when n is omitted is to comment out just the current line). The   *
 * cursor is then moved to the start of the next line.               *
 *                                                                   *
 * uncomment-line behaves differently depending on whether the file  *
 * type terminates a comment with an end token or simply by the end  *
 * of the line.                                                      *
 *********************************************************************/
.CE 0
.SH "SEE ALSO"
.na
.Ht buffer-init 3 ,
.Hl "File Hooks" fileHooks 2 .
.ad
.FH
