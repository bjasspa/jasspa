.\" -*- nroff -*-
.\" Copyright (C) 1998-2009 JASSPA (www.jasspa.com)
.\"
.\" This is part of JASSPA's MicroEmacs, see the LICENSE file for licensing and
.\" copying information.
.\"
.Id $Id: m4fil034.4,v 1.6 2025/01/09 21:40:27 jon Exp $
.Im MicroEmacs macro;variable
.so me.tni
.TH "@fs" 4
.XI "@fs" - "Frame store variable"
.XI "@fss" - "Frame store scheme variable" 
.SH NAME
.Me "|@fs"
@fs \- Frame store variable
.br
.Me "|@fss"
@fss \- Frame store scheme variable
.SH SYNOPSIS
.na
.nf
\fB@fs\fR \fIrow\fR \fIcolumn\fR
\fB@fss\fR \fIrow\fR \fIcolumn\fR
.fi
.ad
.SH DESCRIPTION
The frame store  variable  \fB@fs\fR  permits  macros to obtain the  character
currently  being drawn on the screen at the  specified  location. If the given
value of  \fIrow\fR  or  \fIcolumn\fR  is out  range,  i.e. less  than zero or
greater than or equal to the screen size (see
.Ht $frame-width 5 )
then the value returned is the empty string (i.e. \fC""\fR).
.PP
The  frame  store  scheme  variable  \fB@fss\fR  operates  in the  same way as
\fB@fs\fR  but  returns  the  hilighting  scheme  number  as  opposed  to  the
character.
.PP
These  variables  cannot be set and are only updated  during a screen  update,
this means that macros that change the cursor position need to redraw the
screen before using this variable (see
.Ht screen-update 2 ).
.SH EXAMPLE
The following example gets the word under the current mouse position, this may
not be the current cursor position:
.Me $emf-scheme
.CS
define-macro word-under-mouse
    set-variable #l0 $mouse-y
    set-variable #l1 $mouse-x
    !if &not &inw @fs #l0 #l1
        ml-write "[mouse not over a word]"
        !return
    !endif
    set-variable #l2 @fs #l0 #l1
    set-variable #l1 &sub #l1 1
    !if &inw @fs #l0 #l1
        set-variable #l2 &cat @fs #l0 #l1 #l2
        !jump -3
    !endif
    set-variable #l1 $mouse-x
    set-variable #l1 &add #l1 1
    !if &inw @fs #l0 #l1
        set-variable #l2 &cat #l2 @fs #l0 #l1
        !jump -3
    !endif
    ml-write &spr "[mouse is over the word \\"%s\\"]" #l2
!emacro
.CE
.Me $ehf-scheme
Knowledge of the display scheme as returned by the \fB@fss\fR variable is
a little more obscure than the previous example. This variable is 
currently used to determine if there is a spelling  error under the 
cursor position. When 
.Ht auto-spell 3
is enabled then spelling errors are hilighted in a different colour,
return of the 
.Hl hilighting hilight 2
scheme allows the caller to determine that there is a spelling error at
the current position, this could also be applied to collapsed regions etc.
The following example is taken from \fCmouseosd.emf\fR to determine if
there is a spelling error at the mouse position.
.Me $emf-scheme
.CS
set-variable #l0 &band $mouse-pos 15
!if &equ #l0   0
    ; Text window - must goto the original position or cut etc wont work - must dup the position
    0 show-region
    set-variable #l2 $result
    set-variable #l0 20
    osd 27 5  "D"
    !if &seq $buffer-input "auto-spell-input"
        !if &equ @fss $mouse-y $mouse-x .scheme.spell-error
            auto-spell-test
            !if &seq &lef $result 1 "E"
                set-position "\\x83"
                set-variable .auto-spell-osd.word &rig $result 1
                osd 27 5  "M" "Auto Spell" .osd.spell-auto auto-spell-osd
                set-variable #l0 &add #l0 1
            !endif
        !endif
    !endif
    goto-position "\\x82"
    \....
.CE 0
.Me $ehf-scheme
.SH "SEE ALSO"
.na
.Ht $frame-width 5 ,
.Ht screen-update 2 ,
.Hl MacroArguments MacroArguments 4 ,
.Hl MacroNumericArguments MacroNumericArguments 4 ,
.Ht define-macro 2 .
.ad
.FH
