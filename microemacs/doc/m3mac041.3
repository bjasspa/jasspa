.\" -*- nroff -*-
.\" This is part of the JASSPA MicroEmacs documentation files.
.\" Copyright (c) 1998-2009 JASSPA (www.jasspa.com)
.\" See the file "me.nrs" for copying and conditions.
.\"
.Id $Id: m3mac041.3,v 2.6 2024/09/29 17:13:59 jon Exp $
.Im MicroEmacs command
.so me.tni
.TH change-buffer-charset 3
.XI change-buffer-charset - "Convert buffer between two character sets"
.XI buffer-is-utf8 - "Detect if the current buffer is UTF-8 encoded"
.SH NAME
.Me "|change-buffer-charset"
change-buffer-charset \- Convert buffer; between two character sets
.Me $a
.br
.Me "|buffer-is-utf8"
buffer-is-utf8 \- Detect if the current buffer is UTF-8 encoded
.Me $a
.SH SYNOPSIS
.na
\fBchange-buffer-charset\fR
.br
.I n
\fBchange-buffer-charset\fR "\fIfrom-charset\fR" "\fIfto-charset\fR"
.br
.I n
\fBbuffer-is-utf8\fR \fIvariable\fR
.ad
.SH DESCRIPTION
\fBchange-buffer-charset\fR opens a dialog allowing the user to select a \fBFrom\fR and \fBTo\fR character set. If the
\fIConvert\fR button is selected the current buffer is converted to the destination character set. The command assumes
that the current buffer is written in the \fBFrom\fR character set, no attempt is made to verify this.
.PP
The command also provides the ability to convert to and from UTF-8. \*(mS cannot directly support Unicode, UTF-8 or 
any multi-byte code pages, for various reasons (insert FAQ ref here) \*(mS only supports a single byte code page 
restricting the user to working with 255 characters at any one time. However, \fBchange-buffer-charset\fR does provide 
the user with the ability to load a UTF-8 file, losslessly convert the loaded file to the current code-page, edit the 
file and then convert it back to UTF-8 before saving.
.PP
The lossless conversion makes use of 2 special prefix characters, \fB0x01\fR and \fB0x02\fR, followed by 3 or 5
hexadecimal digits respectively. It is important to understand that these 4 or 6 character strings are just that to
the rest of the system, as a result operations like
.Ht kill-rectangle 2
could split the character strings and invalidate them in any later conversion process. This is not an ideal solution
but better than losing the characters entirely. The prefix characters are rendered as \fC[u]\fR and \fC[U]\fR if
extended character rendering is enabled, see bit \fB0x10000\fR of
.Ht $system 5
for more information.
.PP
\fBchange-buffer-charset\fR also allows unsupported characters to be changed to the unsupported character (\fB0x07\fR) 
or the characters can be removed.
.PP
The current character set is configured using the
.Ht user-setup 3
dialog (see
.Hl "Display Font Set" user-setup 3 ).
This in turn uses the command
.Ht set-char-mask 2
to create the low level character conversion tables.
.PP
The \fBchange-buffer-charset\fR dialog is not opened if both \fIfrom-charset\fR and \fIfto-charset\fR are given on the
command-line,  the  argument  \fIn\fR is used to set the  options  of the  conversion,  where the bits are  defined as
follows:
.IP \fB0x01\fR
When set the command prints the results of the conversion, when clear the command runs silently.
.IP \fB0x02\fR
When set, unsupported characters that cannot be preserved, or bit \fB0x04\fR is set, are simply removed. When this bit
is clear they are changed to the unsupported character (\fB0x07\fR).
.IP \fB0x04\fR
When set, unsupported characters are not preserved, when clear they are preserved, see lossless conversion above.
.PP
A value of  "\fCdisplay\fR"  can be given for either of the  \fIfrom-charset\fR  or  \fIfto-charset\fR  to indicate the
user's current display character set, see
.Ht user-setup 3 .
.PP
The  \fBbuffer-is-utf8\fR  command  attempts to determine if the current  buffer is UTF-8  encoded or not, setting the
given \fIvariable\fR to either:
.IP \fB0\fR
If the buffer contains no character whose ASCII number is greater or equal to \fC0x80\fR, i.e. there are no characters
that would need encoding.
.IP \fB1\fR
If the buffer contains  characters that would need encoding and all are encoded correctly for UTF-8. Note that this is
not foolproof, the characters all being correctly encoded could be a fluke.
.IP \fB-1\fR
If the buffer contains  characters that would need encoding and at least one is not encoded correctly for UTF-8.
.SH NOTES
\fBchange-buffer-charset\fR and \fBbuffer-is-utf8\fR are macros defined in \fCcharsutl.emf\fR.
.SH "SEE ALSO"
.na
.Ht user-setup 3 ,
.Ht set-char-mask 2 ,
.Ht &uni 4 ,
.Hl "Locale Support" localeSupport 2 .
.ad
.FH
