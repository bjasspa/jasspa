.\" -*- nroff -*-
.\" This is part of the JASSPA MicroEmacs documentation files.
.\" Copyright (c) 1998-2002 JASSPA (www.jasspa.com)
.\" See the file "me.nrs" for copying and conditions.
.\"
.Id $Id: m5var011.5,v 2.7 2005-07-11 21:56:39 jon Exp $
.Im MicroEmacs variable|macrodevelop|macro
.so me.tni
.TH $debug 5
.XI $debug - "Macro debugging flag"
.SH NAME
$debug \- Macro debugging flag
.Me $a
.SH SYNOPSIS
\fB$debug\fR \fIdebugLevel\fR; Default is \fC0\fR
.sp
-3 <= \fIdebugLevel\fR <= 3
.SH DESCRIPTION
.B $debug
is a flag to  trigger  macro  debugging.  The flag  settings  are  defined  as
follows:
.IP "\fC0\fR"
Disables debugging, this is the default.
.IP "\fC1\fR"
Invokes the debugger when there are un-handled  exceptions,  this is useful to
locate problems in the macro code i.e. missing arguments etc. This setting may
be used in  normal  running  and macro  execution  is halted  when an error is
encountered,  it is  non-intrusive  up until  the point of  failure.  Enabling
slightly slows execution but is not typically noticeable on modern processors.
.IP "\fC2\fR"
Debugs all executed macro lines, i.e. if a false \fB!if\fR was encountered the
lines  within  the  \fB!if\fR  would  not  be  printed.  Problems  arise  with
\fB!elif\fR  and  \fB!else\fR  and  a  \fIdebugLevel\fR  setting  of 1 as  the
\fB!elif\fR and \fB!else\fR lines are never printed.
.IP "\fC3\fR"
Debugs all macro lines encountered, including those that are not executed.
.PP
A \-ve setting disables debugging and has no immediate effect. However as soon
as the  bell is rung  the  value  is  inverted  (\-1 to 1, \-2 to 2, \-3 to 3)
enabling  debugging. This can be invaluable when tracing problems, for example
the following macro code will loop infinitely:-
.Me $emf-scheme
.CS
!repeat
    beginning-of-line
    backward-char
    !force forward-line
!until &not $status
.CE
.Me $ehf-scheme
This is a fairly  obvious bug, but if buried in a thousand lines of macro code
it could be very  difficult to spot and to find it during  execution  would be
very tedious if not  impossible. But by setting  \fB$debug\fR to \-1 the macro
can be  executed  as  normal  and as soon as the  macro is stuck  the user can
simply press "\fCC-g\fR" (\fBabort-command\fR) which rings the bell and starts
macro debugging at the current execution point.
.SH "SEE ALSO"
.na
.Ht execute-file 2 .
.sp
.Hl "Writing MicroEmacs Macros" macroWriting 4
.br
.Hl "Macro Glossary" MacroGlossary -
.br
.Hl "Macro Debugging - A Crash Course" macroDebugging 4 
.br
.Hl "MicroEmacs Macro Language at a Glance" macroOverview 4 
.ad
.FH
