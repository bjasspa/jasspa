.\" -*- nroff -*-
.\" This is part of the JASSPA MicroEmacs documentation files.
.\" Copyright (c) 1999-2009 JASSPA (www.jasspa.com)
.\" See the file "me.nrs" for copying and conditions.
.\"
.\"  Created By    : Jon Green
.\"  Created       : Mon Jul 5 18:16:21 1999
.\"
.Id $Id: m3mac086.3,v 2.2 2024/11/23 19:41:40 jon Exp $
.Im MicroEmacs command|scuts
.so me.tni
.TH generate-password 3
.XI generate-password - "Generate a password with given criteria"
.XI insert-password - "Create and insert a new password string"
.XI password-to-phonic - "Convert a password to phonic string"
.SH NAME
.Me "|generate-password"
generate-password \- Generate a password with given criteria
.br
.Me "|insert-password"
insert-password \- Create and insert a new password string
.br
.Me "|password-to-phonic"
password-to-phonic \- Convert a password to phonic string
.Me $a
.SH SYNOPSIS
.na
.I n
.B generate-password
.br
.I n
.B generate-password 
"\fIflags\fR"
.br
.B generate-password 
"\fIlength\fR" "\fIflags\fR"
.sp
.I n
.B insert-password 
"\fIlength\fR"
"\fIflags\fR"
.sp
.B password-to-phonic
"\fIpassword\fR"
.ad
.SH DESCRIPTION
The password  commands are typically used by a system  administrator to generate new random passwords or to phonically
unambiguously describe a password.
.PP
.B generate-password
is a low level  macro for setting the
.Ht $result 5
variable to a new password meeting the criteria defined by combinations of argument \fIn\fR and optionally passed
arguments "\fIlength\fR" and "\fIflags\fR".
.PP
If argument \fIn\fR is given then the lower byte (0x0ff) defines the password length, otherwise the "\fIlength\fR"
must be given. When a word base password is generated the length is the number of words, if a character based password 
is to be generated the length is the number of characters. The maximum length of the password is 255 bytes/words.
.PP
If the argument \fIn\fR is given and its value is greater than 255 then the bits above 255 are used to determine the
flags, see list below. Otherwise the \fIflags\fR must get given and are defined as follows:
.IP \fBw\fR
Generate a random word(s) based password, the given length is used to define the total number of letters to be used by
one or more words selected randomly using the spelling dictionaries. If flag \fBu\fR is also given then the first or
last letter of each word may randomly be turned to uppercase, if flag \fB!\fR and/or \fBb\fR are given then each word
will be separated by a 'special' character (see flags below) otherwise each word is separated by a '-' for clarity.
Finally if flag \fBd\fR is given then a random two digit number is appended to the password. This can be specified by
bit 0x0100 in argument \fBn\fR. 
.IP \fBh\fR
Generate a random password using hexadecimal characters, i.e. 0-9 and a-f. If the \fBu\fR flag is given then uppercase
letters are used instead. No other flag apart from \fBN\fR can be used. This can be specified by bit 0x0200 in
argument \fBn\fR. 
.IP \fBd\fR
The 10 digit characters, 0-9, are added to the character class used when not generating a word or hex based password.
This can be specified by bit 0x0400 in argument \fBn\fR. 
.IP \fBl\fR
The 26 lowercase letters, a-z, are added to the character class used when not generating a word or hex based password.
This can be specified by bit 0x0800 in argument \fBn\fR. 
.IP \fBu\fR
The 26 uppercase letters, A-Z, are added to the character class used when not generating a word or hex based password.
This can be specified by bit 0x1000 in argument \fBn\fR. 
.IP \fB!\fR
24 'special' characters are added to the character class used when not generating a word or hex based password, these
characters include !, $, % & ... but not brackets or white spaces. This can be specified by bit 0x2000 in argument
\fBn\fR. 
.IP \fBb\fR
8 bracket characters ([, ], {, }, (, ), <, >) are added to the character class used when not generating a word or hex
based password. This can be specified by bit 0x4000 in argument \fBn\fR. 
.IP \fBs\fR
The space character is added to the character class used when not generating a word or hex based password. This can be
specified by bit 0x8000 in argument \fBn\fR. 
.IP \fBe\fR
When the \fBe\fR flag is given then at least one character from each of the main requested character classes, i.e.
digits, lowercase letters, uppercase letters and specials, must be present in the generated password, if not another
password is generated until it does. This can be specified by bit 0x10000 in argument \fBn\fR. 
.IP \fBD\fR
When generating a word based password and this flag is given the current spelling dictionary is used, when not given a 
fixed dictionary of 7776 English words is used. Caution should be used when using a general \*(mS dictionary as the 
words can be rude, hard to spell and have accents, the alternative password word list contains only relatively 
unambiguous, easy to spell non-expletive words. This can be specified by bit 0x20000 in argument \fBn\fR.
.IP \fBN\fR
When given, flag \fBN\fR does not update the user's last or default password criteria, this flag can be used by macros
to avoid affecting the user experience. This can be specified by bit 0x40000 in argument \fBn\fR.
.PP
.B insert-password
uses \fBgenerate-password\fR to generates a new random password and insert it into the current buffer with the phonic
form. The \fIlength\fR and \fIflags\fR arguments are the same as \fBgenerate-password\fR, see above, however argument
\fBn\fR can be used to modify the default behavior of the command, where the bits are defined as follows:
.IP \fB0x01\fR
When set the user is prompted for the \fIlength\fR and the \fIflags\fR, however when not set the default or last
values will be reused.
.IP \fB0x02\fR
When set the phonic form will not be inserted, however when not set a phonic form will be inserted in brackets after
the password if the password is not word of hex based and contains something other than digits.
.PP
.B password-to-phonic
converts a string of characters to the phonic alphabet, the command requires a single argument \fIpassword\fR which is
converted to a phonic string. The command \fBpassword-to-phonic\fR "\fIy5Ck\fR" inserts the phonic string into the
buffer:
.CS
yankee - Five - CHARLIE - kilo
.CE 0
.SH NOTES
The password commands are macros defined in \fCpassword.emf\fR.
.PP
generate-password can be used to generate a large random number sequence by reducing the character class to just
\fBd\fR, for example:
.CS
insert-password 30 "d"
.CE
Will insert a 30 digit random sequence. Similarly the \fBh\fR flag can be used instead to create a random byte
sequence in hex format.
.SH "SEE ALSO"
.na
.Ht $random 5 ,
.Ht $result 5 ,
.Ht insert-string 2 .
.ad
.FH
