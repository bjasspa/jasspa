; -!- emf -!-
; This is part of the JASSPA MicroEmacs macro files
; Copyright (C) 1997-2004 JASSPA (www.jasspa.com)
; See the file me.emf for copying and conditions.
;
; Synopsis:    C++ mode hook
; Authors:     Steven Phillips & Jon Green
;
; Notes:
;       There is a distinction between C++ and C because of problems with
;       hilighting. ".cpp", ".cc" and ".hpp" are assumed to be C++ files.
;       Also recognise magic-string for C++ as:- "-!- cmode; c++ -!-" in
;       the first line.
;
define-macro fhook-cpp
    ; Is it an include h file or a c file?
    set-variable #l0 &con &isin ".h" $buffer-bname "hpp" "cpp"
    set-variable $buffer-mask "luh1"
    @# buffer-init "cpp" #l0
    buffer-init-hooks
!emacro

; buffer-init variables
set-variable .fhook-cpp.name "C++"
set-variable .fhook-cpp.setup &reg "/history" "fhook/cpp" "bdfghnopx"
set-variable .fhook-cpp.setup-mask "abdefghikmnoptux"
set-variable .fhook-cpp.tags "ctags"

; Comments
set-variable .fhook-cpp.comment "|//||/|// | //|r|"
; Doxygen comment - //!< ... member detailed text ...
;                   //!< ... member detailed text ...
set-variable .fhook-cpp.comment-1 "|//!<|||//!< |||"
; Doxygen comment - //! ... text ...
;                   //! ... text ...
set-variable .fhook-cpp.comment-2 "|//!|||//! |||" 
; Doxygen comment - ///< ... text ...
;                   ///< ... text ...
set-variable .fhook-cpp.comment-3 "|///<||/|///< | ///||"
; Doxygen comment - /// ... text ...
;                   /// ... text ...
set-variable .fhook-cpp.comment-4 "|///||/|/// | ///||"
; Doxygen comment - /**< ... member detailed text ...
;                    *   ... member detailed text ... */
set-variable .fhook-cpp.comment-5 "|/**<| */|*| *   | * |f|"
; Doxygen comment - /*!< ... member detailed text ...
;                    *   ... member detailed text ... */
set-variable .fhook-cpp.comment-6 "|/*!<| */|*| *   | * |f|"
; Doxygen comment - /** ... detailed text ...
;                    *  ... detailed text ... */
set-variable .fhook-cpp.comment-7 "|/**| */|*| * | * |f|"
; Fancy C - /*
;           ** Comment
;           */
set-variable .fhook-cpp.comment-8 "|/*|*/|*|** | * |f|"
; Fancy C - /*
;           ** Comment
;            */
set-variable .fhook-cpp.comment-9 "|/*| */|*|** | * |f|"
; Fancy C - /*\
;            * Comment
;           \*/
set-variable .fhook-cpp.comment-10 "|/*\\|\\*/|*| * | * |f|"
; Standard comment - We repeat here incase the default comment style is
; over-ridden. 
; Standard C - /*
;               * ... comment ... 
;               */
set-variable .fhook-cpp.comment-11 "|/*| */|*| * | * |f|"
; Standard C++ comment.
set-variable .fhook-cpp.comment-12 "|//||/|// | //||"

; Commands
set-variable .fhook-cpp.command-flag  "|th|th|t|t|t|t|t|t|"
set-variable .fhook-cpp.command-name  "|c-slashify|c-deslashify||c-hash-set-define|c-hash-unset-define|c-hash-eval|c-hash-eval|c-hash-del|"
set-variable .fhook-cpp.command-nbind "|||||||1||"
set-variable .fhook-cpp.command-kbind "|||||||||"
set-variable .fhook-cpp.command-desc  "|Slashify region|Deslashify region||\HSet #define|\HUnset #define|Evaluate \H#'s|Evaluate #'s use \HNarrow|\HRemove # evaluation|"

; Set up the collaspe for C++
set-variable .fhook-cpp.collapse-open  "^{"
set-variable .fhook-cpp.collapse-close "^}"
set-variable .fhook-cpp.collapse-mopen  "-1"
set-variable .fhook-cpp.collapse-mclose "1"
set-variable .fhook-cpp.collapse-mnext "-1"

; setup item-list
set-variable .fhook-cpp.item-list-s1 "^\\(static[ \t]+\\|extern[ \t]+\\)?\\(const[ \t]+\\)?\\(union[ \t]+\\)?\\(struct[ \t]+\\)?\\(\\w+[\\* \\t]+\\)?\\(\\w+\\(::~?\\w+\\)?\\)[ \t]*("
set-variable .fhook-cpp.item-list-r1 "Func \ecB\\6\ecA"
set-variable .fhook-cpp.item-list-s2 "^[ \t]*#[ \t]*define[ \t]+\\(\\w+\\)"
set-variable .fhook-cpp.item-list-r2 "Defn \ecB\\1\ecA"
set-variable .fhook-cpp.item-list-s3 "^[ \t]*typedef[ \t]+\\w+[ \t]+\\(\\w+\\)[ \t];"
set-variable .fhook-cpp.item-list-r3 "Type \ecB\\1\ecA"
set-variable .fhook-cpp.item-list-s4 "^[ \t]*typedef[ \t]+struct[ \t]+\\(\\w+\\)[ \t]*{"
set-variable .fhook-cpp.item-list-r4 "Type \ecB\\1\ecA"
set-variable .fhook-cpp.item-list-s5 "^}[ \t]*\\(\\w+\\)\\([ \t]*,.*\\)?[ \t]*;"
set-variable .fhook-cpp.item-list-r5 "Type \ecB\\1\ecA"
set-variable .fhook-cpp.item-list-s6 "^[ \t]*class[ \t]+\\(\\w+\\)\\([ \t]+:\\|[ \t]*{\\|[ \t]*$\\)"
set-variable .fhook-cpp.item-list-r6 "Clss \ecB\\1\ecA"

!if &not &exist .hilight.cpp
    set-variable .hilight.cpp &pinc .hilight.next 1
!endif
!if &and &sin "h" .fhook-cpp.setup &band .hilight.flags 0x02 
    ; High-light C++ Mode
    0 hilight .hilight.cpp  2 50             $global-scheme
    hilight .hilight.cpp 0x3a "#" "\\"       .scheme.prepro
    hilight .hilight.cpp   18 "//"           .scheme.comment
    hilight .hilight.cpp   20 "/\\*" "*/" "" .scheme.comment
    hilight .hilight.cpp    4 "\"" "\"" "\\" .scheme.string
    hilight .hilight.cpp    0 "'.'"          .scheme.quote
    hilight .hilight.cpp    0 "'\\\\.'"      .scheme.quote
    hilight .hilight.cpp    0 "'\\\\'"       .scheme.error
    hilight .hilight.cpp    0 "'\\\\''"      .scheme.quote
    !if &band .hilight.flags 0x04
        hilight .hilight.cpp    0 "^[[:alpha:]][0-9a-zA-Z_:~]*\\}\\s (" .scheme.function
        hilight .hilight.cpp    0 "^[[:alpha:]][0-9a-zA-Z_:~]*\\}(" .scheme.function
    !endif
    hilight .hilight.cpp    0 "^\\w+\\}:"    .scheme.link
    ; keywords
    hilight .hilight.cpp    1 "asm"          .scheme.keyword
    hilight .hilight.cpp    1 "break"        .scheme.keyword
    hilight .hilight.cpp    1 "case"         .scheme.keyword
    hilight .hilight.cpp    1 "catch"        .scheme.keyword
    hilight .hilight.cpp    1 "continue"     .scheme.keyword
    hilight .hilight.cpp    1 "default"      .scheme.keyword
    hilight .hilight.cpp    1 "delete"       .scheme.keyword
    hilight .hilight.cpp    1 "do"           .scheme.keyword
    hilight .hilight.cpp    1 "else"         .scheme.keyword
    hilight .hilight.cpp    1 "for"          .scheme.keyword
    hilight .hilight.cpp    1 "goto"         .scheme.keyword
    hilight .hilight.cpp    1 "if"           .scheme.keyword
    hilight .hilight.cpp    1 "new"          .scheme.keyword
    hilight .hilight.cpp    1 "operator"     .scheme.keyword
    hilight .hilight.cpp    1 "private"      .scheme.keyword
    hilight .hilight.cpp    1 "protected"    .scheme.keyword
    hilight .hilight.cpp    1 "public"       .scheme.keyword
    hilight .hilight.cpp    1 "return"       .scheme.keyword
    hilight .hilight.cpp    1 "sizeof"       .scheme.keyword
    hilight .hilight.cpp    1 "switch"       .scheme.keyword
    hilight .hilight.cpp    1 "this"         .scheme.keyword
    hilight .hilight.cpp    1 "throw"        .scheme.keyword
    hilight .hilight.cpp    1 "try"          .scheme.keyword
    hilight .hilight.cpp    1 "while"        .scheme.keyword
    ; types
    hilight .hilight.cpp    1 "auto"         .scheme.type
    hilight .hilight.cpp    1 "bool"         .scheme.type
    hilight .hilight.cpp    1 "char"         .scheme.type
    hilight .hilight.cpp    1 "class"        .scheme.type
    hilight .hilight.cpp    1 "complex"      .scheme.type
    hilight .hilight.cpp    1 "const"        .scheme.type
    hilight .hilight.cpp    1 "double"       .scheme.type
    hilight .hilight.cpp    1 "enum"         .scheme.type
    hilight .hilight.cpp    1 "extern"       .scheme.type
    hilight .hilight.cpp    1 "float"        .scheme.type
    hilight .hilight.cpp    1 "friend"       .scheme.type
    hilight .hilight.cpp    1 "inline"       .scheme.type
    hilight .hilight.cpp    1 "int"          .scheme.type
    hilight .hilight.cpp    1 "long"         .scheme.type
    hilight .hilight.cpp    1 "namespace"    .scheme.type
    hilight .hilight.cpp    1 "register"     .scheme.type
    hilight .hilight.cpp    1 "short"        .scheme.type
    hilight .hilight.cpp    1 "signed"       .scheme.type
    hilight .hilight.cpp    1 "size_t"       .scheme.type
    hilight .hilight.cpp    1 "static"       .scheme.type
    hilight .hilight.cpp    1 "struct"       .scheme.type
    hilight .hilight.cpp    1 "template"     .scheme.type
    hilight .hilight.cpp    1 "typedef"      .scheme.type
    hilight .hilight.cpp    1 "union"        .scheme.type
    hilight .hilight.cpp    1 "unsigned"     .scheme.type
    hilight .hilight.cpp    1 "virtual"      .scheme.type
    hilight .hilight.cpp    1 "void"         .scheme.type
    hilight .hilight.cpp    1 "volatile"     .scheme.type
    ;
    hilight .hilight.cpp    1 "static_cast"      .scheme.type
    hilight .hilight.cpp    1 "dynamic_cast"     .scheme.type
    hilight .hilight.cpp    1 "const_cast"       .scheme.type
    hilight .hilight.cpp    1 "reinterpret_cast" .scheme.type
    ; Type qualifiers.
    hilight .hilight.cpp    1 "__restrict"   .scheme.type
    hilight .hilight.cpp    1 "__unaligned"  .scheme.type
    ; Add some system types
    hilight .hilight.cpp    1 "FILE"         .scheme.type
    ; Pre-processor directives
    hilight .hilight.cpp    0 "__DATE__"     .scheme.prepro
    hilight .hilight.cpp    0 "__FILE__"     .scheme.prepro
    hilight .hilight.cpp    0 "__LINE__"     .scheme.prepro
    hilight .hilight.cpp    0 "__STDC__"     .scheme.prepro
    hilight .hilight.cpp    0 "__TIME__"     .scheme.prepro
    hilight .hilight.cpp    0 "NULL"         .scheme.prepro
    !if &band .hilight.flags 0x08
        ; hilight constants, e.g. numbers
        hilight .hilight.cpp 1 "[[:digit:]]+"       .scheme.constant
        hilight .hilight.cpp 1 "-[[:digit:]]+"      .scheme.constant
        hilight .hilight.cpp 1 "0[xX][[:xdigit:]]+" .scheme.constant
        hilight .hilight.cpp 1 "[[:digit:]]+\\.[[:digit:]]+"  .scheme.constant
        hilight .hilight.cpp 1 "-[[:digit:]]+\\.[[:digit:]]+" .scheme.constant
    !endif
!endif
!if &sin "d" .fhook-cpp.setup
    0 indent .hilight.cpp 28 t 3/2t 0 -t 0 -t 1 -1 " * "
!endif
;
; setup fuctions to auto-load from cmacros
define-macro-file cmacros c-slashify c-deslashify c-hash-eval c-hash-set-define c-hash-unset-define c-hash-del

buffer-init-fhook "cpp"
