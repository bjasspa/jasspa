;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;  Java mode hook
;
;  Copyright (c) 1999-2001 JASSPA
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

define-macro fhook-java
    ; if arg is 0 this is a new file so add template 
    !if &not @#
        etfinsrt "java"
    !endif
    set-variable $buffer-mask "luh1"
    buffer-initialize
    ; execute user extensions if enabled
    !if &exist my-fhook-java
        my-fhook-java
    !endif
!emacro

; buffer-initialize variables
set-variable .fhook-java.setup &reg "/history" "fhook/java" "bdfhnopx"
set-variable .fhook-java.setup-mask "abdefhikmnoptux>"
set-variable .fhook-java.tags "javatags"
set-variable .fhook-java.comment "|/*|*/|*|"
set-variable .fhook-java.command-flag  "|thb|thbo|thbo|bo|"
set-variable .fhook-java.command-name  "|normal-tab|c-start-comment|c-box|c-box|"
set-variable .fhook-java.command-nbind "|||||"
set-variable .fhook-java.command-kbind "|A-tab|esc C-c|esc q|esc o|"
set-variable .fhook-java.command-desc  "|&Insert tab|Start co&mment|Restyle c&omment||"

; Set up the folding of functions
set-variable .fhook-java.fold-open  "^[a-zA-Z].*{$"
set-variable .fhook-java.fold-mopen "1"
set-variable .fhook-java.fold-close "^}"

!if &and &sin "h" .fhook-java.setup &band .hilight.flags 0x02 
    ; High-light Java Mode
    !if &not &exist .hilight.java
        set-variable .hilight.java &pinc .hilight.next 1
    !endif
    0 hilight    .hilight.java 2 50             $global-scheme
    hilight   .hilight.java 2  "//"            .scheme.comment
    hilight   .hilight.java 20 "/\\*" "*/" ""  .scheme.comment
    hilight   .hilight.java 4 "\"" "\"" "\\"   .scheme.string
    hilight   .hilight.java 0 "'.'"            .scheme.quote
    hilight   .hilight.java 0 "'\\\\.'"        .scheme.quote
    hilight   .hilight.java 0 "'\\\\'"         .scheme.error
    hilight   .hilight.java 0 "'\\\\''"        .scheme.quote
    ;
    hilight   .hilight.java 0x12 "import"      .scheme.prepro
    hilight   .hilight.java 0x12 "package"     .scheme.prepro
    ;
    hilight   .hilight.java 1 "break"        .scheme.keyword
    hilight   .hilight.java 1 "case"         .scheme.keyword
    hilight   .hilight.java 1 "catch"        .scheme.keyword
    hilight   .hilight.java 1 "continue"     .scheme.keyword
    hilight   .hilight.java 1 "default"      .scheme.keyword
    hilight   .hilight.java 1 "do"           .scheme.keyword
    hilight   .hilight.java 1 "else"         .scheme.keyword
    hilight   .hilight.java 1 "for"          .scheme.keyword
    hilight   .hilight.java 1 "goto"         .scheme.keyword
    hilight   .hilight.java 1 "if"           .scheme.keyword
    hilight   .hilight.java 1 "return"       .scheme.keyword
    hilight   .hilight.java 1 "super"        .scheme.keyword
    hilight   .hilight.java 1 "switch"       .scheme.keyword
    hilight   .hilight.java 1 "throw"        .scheme.keyword
    hilight   .hilight.java 1 "try"          .scheme.keyword
    hilight   .hilight.java 1 "while"        .scheme.keyword
    ;
    hilight   .hilight.java 1 "asm"          .scheme.type
    hilight   .hilight.java 1 "char"         .scheme.type
    hilight   .hilight.java 1 "const"        .scheme.type
    hilight   .hilight.java 1 "double"       .scheme.type
    hilight   .hilight.java 1 "enum"         .scheme.type
    hilight   .hilight.java 1 "extends"      .scheme.type
    hilight   .hilight.java 1 "extern"       .scheme.type
    hilight   .hilight.java 1 "float"        .scheme.type
    hilight   .hilight.java 1 "final"        .scheme.type
    hilight   .hilight.java 1 "int"          .scheme.type
    hilight   .hilight.java 1 "long"         .scheme.type
    hilight   .hilight.java 1 "register"     .scheme.type
    hilight   .hilight.java 1 "short"        .scheme.type
    hilight   .hilight.java 1 "signed"       .scheme.type
    hilight   .hilight.java 1 "size_t"       .scheme.type
    hilight   .hilight.java 1 "static"       .scheme.type
    hilight   .hilight.java 1 "struct"       .scheme.type
    hilight   .hilight.java 1 "synchronized" .scheme.type
    hilight   .hilight.java 1 "throws"       .scheme.type
    hilight   .hilight.java 1 "typedef"      .scheme.type
    hilight   .hilight.java 1 "unsigned"     .scheme.type
    hilight   .hilight.java 1 "void"         .scheme.type
    hilight   .hilight.java 1 "volatile"     .scheme.type
    ; Add some system types
    hilight   .hilight.java 1 "FILE"         .scheme.type
    ; Pre-processor directives
    hilight   .hilight.java 0 "__DATE__"     .scheme.prepro
    hilight   .hilight.java 0 "__FILE__"     .scheme.prepro
    hilight   .hilight.java 0 "__LINE__"     .scheme.prepro
    hilight   .hilight.java 0 "__STDC__"     .scheme.prepro
    hilight   .hilight.java 0 "__TIME__"     .scheme.prepro
    
    hilight   .hilight.java 1 "Character"    .scheme.prepro
    hilight   .hilight.java 1 "Color"        .scheme.prepro
    hilight   .hilight.java 1 "Integer"      .scheme.prepro
    hilight   .hilight.java 1 "Object"       .scheme.prepro
    hilight   .hilight.java 1 "String"       .scheme.prepro
    
    hilight   .hilight.java 1 "delete"       .scheme.keyword
    hilight   .hilight.java 1 "new"          .scheme.keyword
    
    hilight   .hilight.java 1 "this"         .scheme.variable
    hilight   .hilight.java 1 "null"         .scheme.variable
    
    hilight   .hilight.java 1 "auto"         .scheme.type
    hilight   .hilight.java 1 "class"        .scheme.type
    hilight   .hilight.java 1 "friend"       .scheme.type
    hilight   .hilight.java 1 "inline"       .scheme.type
    hilight   .hilight.java 1 "operator"     .scheme.type
    hilight   .hilight.java 1 "private"      .scheme.type
    hilight   .hilight.java 1 "protected"    .scheme.type
    hilight   .hilight.java 1 "public"       .scheme.type
    hilight   .hilight.java 1 "virtual"      .scheme.type
!endif
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Bunch of Java macros we may need.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; use C's commenting commands
define-macro-file cmacros c-start-comment
define-macro-file cbox c-box

; Begin hook - entering the buffer - save the current fill-ignore characters
define-macro bhook-java
    !if &exi .fhook-java.fill-ignore
        set-variable .fhook-java.ofill-ignore $fill-ignore
        set-variable $fill-ignore .fhook-java.fill-ignore
    !endif
!emacro

; End hook - leaving the buffer - restore the fill-ignore characters
define-macro ehook-java
    !if &exi .fhook-java.fill-ignore
        set-variable $fill-ignore .fhook-java.ofill-ignore
    !endif
!emacro    

; Fix up the $fill-mode so that we wrap java
; doc parameters. Do this by removing the "@"
; from the $fill-ignore variable.
!if &sin "@" $fill-ignore
    set-variable .fhook-java.fill-ignore $fill-ignore
    var-str-sub .fhook-java.fill-ignore "@" ""
!endif

ml-write "[Java file hook loaded]"

; load in user extensions if found
!force execute-file "myjava"

