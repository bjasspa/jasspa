;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
;  Created By    : Pedro Gomes
;  Created       : Thu Mar 8 22:15:50 2001
;  Last Modified : <010308.2231>
;
;  Description   : S-Lang hook - This file is invoked when a S-Lang file is
;                  loaded.
;  Notes
;
;  History
;
;  Copyright (c) Pedro Gomes 2000-2001.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

define-macro fhook-slang
    ; if arg is 0 this is a new file so add template
    !if &not @#
        ; Is it an include h file or a c file?
        !if &iseq &mid $buffer-bname &rsin "." $buffer-bname 1 "h"
            etfinsrt "h"
        !else
            etfinsrt "c"
        !endif
    !endif
    set-variable $buffer-mask "luh1"
    buffer-initialize
    ; execute user extensions if defined
    !if &exist my-fhook-slang
        my-fhook-slang
    !endif
!emacro

; buffer-initialize variables
set-variable .fhook-slang.name "Slang"
set-variable .fhook-slang.setup &reg "/history" "fhook/slang" "bdfhnopx"
set-variable .fhook-slang.setup-mask "abdefhikmnoptux>"
set-variable .fhook-slang.tags "ctags"
set-variable .fhook-slang.comment "|/*|*/|*|"
set-variable .fhook-slang.command-flag  "|thb|thbo|thbo|bo|th|th|th|t|t|t|t|t|t|"
set-variable .fhook-slang.command-name  "|normal-tab|c-start-comment|c-box|c-box||c-slashify|c-deslashify||c-hash-set-define|c-hash-unset-define|c-hash-eval|c-hash-eval|c-hash-del|"
set-variable .fhook-slang.command-nbind "||||||||||||1||"
set-variable .fhook-slang.command-kbind "|A-tab|esc C-c|esc q|esc o||||||||||"
set-variable .fhook-slang.command-desc  "|&Insert tab|Start co&mment|Restyle c&omment|||Slashify region|Deslashify region||&Set #define|&Unset #define|Evaluate &#'s|Evaluate #'s use &Narrow|&Remove # evaluation|"

; Set up the folds for slang
set-variable .fhook-slang.fold-open  "^{"
set-variable .fhook-slang.fold-close "^}"

!if &and &sin "h" .fhook-slang.setup &band .hilight.flags 0x02
    ; High-light C++ Mode
    !if &not &exist .hilight.slang
        set-variable .hilight.slang &pinc .hilight.next 1
    !endif
    0 hilight .hilight.slang  2 50                       $global-scheme
    ; comments, strings and quotes
    hilight .hilight.slang 0x3a "#" "\\"                 .scheme.prepro
    hilight .hilight.slang   18 "%"                      .scheme.comment
    hilight .hilight.slang    4 "\"" "\"" "\\"           .scheme.string
    hilight .hilight.slang    0 "'.'"                    .scheme.quote
    hilight .hilight.slang    0 "'\\\\.'"                .scheme.quote
    hilight .hilight.slang    0 "'\\\\'"                 .scheme.error
    hilight .hilight.slang    0 "'\\\\''"                .scheme.quote
    ; Function names and goto labels
    !if &band .hilight.flags 0x04
        hilight .hilight.slang    0 "^\\w+\\}\\s ("      .scheme.function
        hilight .hilight.slang    0 "^\\w+\\}("          .scheme.function
    !endif
    hilight .hilight.slang    0 "^\\w+\\}:"              .scheme.link
    ; keywords
    hilight .hilight.slang    1 "break"                  .scheme.keyword
    hilight .hilight.slang    1 "return"                 .scheme.keyword
    hilight .hilight.slang    1 "continue"               .scheme.keyword
    hilight .hilight.slang    1 "EXECUTE_ERROR_BLOCK"    .scheme.keyword
    hilight .hilight.slang    1 "\<USER_BLOCK[0-4]\>"    .scheme.keyword
    hilight .hilight.slang    1 "EXIT_BLOCK ERROR_BLOCK" .scheme.keyword
    hilight .hilight.slang    1 "\<X_USER_BLOCK[0-4]\>"  .scheme.keyword
    hilight .hilight.slang    1 "NULL"                   .scheme.keyword
    hilight .hilight.slang    1 "case"                   .scheme.keyword

    hilight .hilight.slang    1 "do"                     .scheme.keyword
    hilight .hilight.slang    1 "forever"                .scheme.keyword
    hilight .hilight.slang    1 "else"                   .scheme.keyword
    hilight .hilight.slang    1 "for"                    .scheme.keyword
    hilight .hilight.slang    1 "_for"                   .scheme.keyword
    hilight .hilight.slang    1 "goto"                   .scheme.keyword
    hilight .hilight.slang    1 "if"                     .scheme.keyword
    hilight .hilight.slang    1 "!if"                    .scheme.keyword
    hilight .hilight.slang    1 "return"                 .scheme.keyword
    hilight .hilight.slang    1 "switch"                 .scheme.keyword
    hilight .hilight.slang    1 "while"                  .scheme.keyword

    hilight .hilight.slang    1 "sizeof"                 .scheme.operator
    hilight .hilight.slang    1 "or"                     .scheme.operator
    hilight .hilight.slang    1 "and"                    .scheme.operator
    hilight .hilight.slang    1 "andelse"                .scheme.operator
    hilight .hilight.slang    1 "orelse"                 .scheme.operator
    hilight .hilight.slang    1 "shr"                    .scheme.operator
    hilight .hilight.slang    1 "shl"                    .scheme.operator
    hilight .hilight.slang    1 "xor"                    .scheme.operator
    hilight .hilight.slang    1 "not"                    .scheme.operator
    hilight .hilight.slang    1 "[-%+/&*=<>|!~^@]"       .scheme.operator

    hilight .hilight.slang    1 "define"                 .scheme.type
    hilight .hilight.slang    1 "struct"                 .scheme.type
    hilight .hilight.slang    1 "typedef"                .scheme.type
    hilight .hilight.slang    1 "variable"               .scheme.type
    ; Pre-processor directives
    !if &band .hilight.flags 0x08
        ; hilight constants, e.g. numbers
        hilight .hilight.slang 1 "[[:digit:]]+"                  .scheme.constant
        hilight .hilight.slang 1 "-[[:digit:]]+"                 .scheme.constant
        hilight .hilight.slang 1 "0[xX][[:xdigit:]]+"            .scheme.constant
        hilight .hilight.slang 1 "[[:digit:]]+\\.[[:digit:]]+"   .scheme.constant
        hilight .hilight.slang 1 "-[[:digit:]]+\\.[[:digit:]]+"  .scheme.constant
        hilight .hilight.slang 1 "[[:digit:]]+\\.[[:digit:]]+f"  .scheme.constant
        hilight .hilight.slang 1 "-[[:digit:]]+\\.[[:digit:]]+f" .scheme.constant
    !endif
!endif

; setup fuctions to auto-load from cmacros & cbox
define-macro-file cmacros c-slashify c-deslashify c-start-comment c-hash-eval c-hash-set-define c-hash-unset-define c-hash-del
define-macro-file cbox c-box

ml-write "[Slang file hook loaded]"

; load in user extensions if found
!force execute-file "myslang"
