; -!- emf -!-
; This is part of the JASSPA MicroEmacs macro files
; Copyright (C) 1997-2009 JASSPA (www.jasspa.com)
; See the file me.emf for copying and conditions.
;
; Created:     Mon Dec 15 1997
; Synopsis:    Finds, inserts & edits the magic variables in a template file.
; Authors:     Jon Green & Steven Phillips
;
; Usage:       n insert-template [ "<template-name>" ]
;
; The <template-name> is typically the fhook label, i.e. emf or c etc, the template file <template-name>.etf is found and inserted.
;
;  0 insert-template  : Inserts the default template for the current file hook (<fhook-label>.etf)
;  # insert-template  : Inserts the template matching #_<name>.etf with the user's $user-path/<fhook-label>/ directory (# can be prefixed with '0's)
;  insert-template "<template-name> : Inserts the given template, first checking for $user-path/<fhook-label>/<template-name>.etf, then using &find
;  0 insert-template "<template-name> : Same except only &find is used to locate it (used by system to insert the main hook template)
;  insert-template    : Prompt user to select template from list made up of the default and any templates in $user-path/<fhook-label>/, if only one found it is automatically inserted.
;

define-macro insert-template
  !force set-variable #l4 @1
  !if &seq "" &set #l0 &rig $buffer-fhook 6
    -8 ml-write "[Error: Invalid $buffer-fhook]"
  !elif $status
    set-variable #l2 &con &seq ".etf" &rig #l4 -4 &lef #l4 -4 #l4
    !iif @#  set-variable @# &seq "R" &stat t &set #l1 &spr "%s%s/%s.etf" $user-path #l0 #l2
    !if @#
    !elif &seq "ERROR" &set #l1 &find #l2 ".etf"
      -8 ml-write &spr "[Error: Failed to locate template file: %s.etf]" #l2
    !endif
  !elif &not @?
    set-variable $file-names &spr "%s%s/.*\.etf" $user-path #l0
    set-variable #l2 $result
    set-variable #l3 "|"
    !while &len &set #l5 $file-names
      set-variable #l3 &lins #l3 -1 &rep &lef #l5 -4 "_" " "
    !done
    set-variable #l6 0
    !if &lfin #l3 #l0
    !elif &set #l6 &seq "R" &stat t &set #l1 &spr "%s%s.etf" $user-path #l2
      set-variable #l3 &lins #l3 0 &cat "0 " #l0
    !endif
    !iif #l2 "|"  -8 ml-write &spr "[Error: No %s templates found]" &ind &spr ".fhook-%s.name"
    !if &seq "" &lget #l3 2
      set-variable #l4 &lget #l3 1
    !else
      set-variable #l4 @ml09 "Select template to insert" #l3
    !endif
    !iif &not &and #l6 &seq #l4 &cat "0 " #l0  set-variable #l1 &spr "%s%s.etf" #l2 &rep #l4 " " "_"
  !elif @#
    set-variable $file-names &spr "%s%s/0*%d_.+\\.etf" $user-path #l0 @#
    !iif &seq "" &set #l1 $file-names  -8 ml-write &spr "[Error: %s template %d not found in: %s%s/]" &ind &spr ".fhook-%s.name" #l0 @# $user-path #l0
    set-variable #l1 &cat $result #l1
  !elif &seq "ERROR" &set #l1 &find #l0 ".etf"
    -8 ml-write &spr "[Error: %s default template not found]" &ind &spr ".fhook-%s.name" #l0
  !endif
  ; Remember if new buffer & current magic mode then add it if not set
  set-variable #l3 &sub $window-eline 1
  set-variable #l0 &bmod magic
  ; Insert the template file
  set-variable #l8 $window-line
  !force insert-file #l1
  !if &not $status
    ; Warn and return if the template file was not located.
    ml-write &spr "[Could not insert template file: %s]" #l1
    !return
  !endif
  set-variable #l7 &sub #l8 $window-line
  1 buffer-mode "magic"
  set-variable $window-line #l8
  ; Change the user name $USER_NAME$.
  set-variable #l1 &reg "/history/user-name" "<unknown>"
  set-variable $window-line #l8
  !force #l7 replace-string "\\$USER_NAME\\$" #l1
  ; Change to the company name $COMPANY_NAME$.
  !iif &not &seq %company-name "ERROR"  set-variable #l1 %company-name
  set-variable $window-line #l8
  !force #l7 replace-string "\\$COMPANY_NAME\\$" #l1
  ; Change the year $YEAR$
  set-variable $window-line #l8
  !force #l7 replace-string "\\$YEAR\\$" &lef $time 4
  ; Change the create date $ASCII_TIME$. - Get ascii time in #l9
  ascii-time
  set-variable $window-line #l8
  !force #l7 replace-string "\\$ASCII_TIME\\$" #l9
  ; Change the file name variables, use the $buffer-bname, must remove the trailing <#> if present.
  set-variable #l1 &xrep $buffer-bname "<[0-9]+>$" ""
  set-variable $window-line #l8
  !force #l7 replace-string "\\$FILE_NAME\\$" #l1
  set-variable #l2 &xrep #l1 "\\.[^.]*$" ""
  set-variable $window-line #l8
  !force #l7 replace-string "\\$FILE_BASENAME\\$" #l2
  ; For C header files a define with the file name in upper-case and '.'s -> '_'
  ; is used to stop double inclusion
  set-variable #l2 &sup &rep #l1 "." "_"
  set-variable $window-line #l8
  !force #l7 replace-string "\\$FILE_NAME_UD\\$" #l2
  ; And for backward compatibility
  set-variable $window-line #l8
  !force #l7 replace-string "\\$BUFFER_NAME\\$" #l2
  ; set the cursor position
  set-variable $window-line #l8
  !force #l7 search-forward "\\$CURSOR\\$" ""
  !if $status
    set-mark
    8 backward-char
    -1 kill-region
  !else
    set-variable $window-line &sub #l8 #l7
  !endif
  ; Reset magic mode if we added it, flag buffer as unedited and goto end
  &cond #l0 1 -1 buffer-mode "magic"
  &cond #l3 1 -1 buffer-mode "edit"
!emacro
