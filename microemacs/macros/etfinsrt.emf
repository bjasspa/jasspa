; -!- emf -!-
;
; Copyright (C) 1997-2024 JASSPA (www.jasspa.com)
;
; This is part of JASSPA's MicroEmacs, see the LICENSE file for licensing and
; copying information.
;
; Synopsis:    Finds, inserts & edits the magic variables in a template file.
; Authors:     Jon Green & Steven Phillips
;
; Usage:       n insert-template [ "<template-name>" ]
;
; The <template-name> is typically the fhook label, i.e. emf or c etc, the template file <template-name>.etf is found and inserted.
;
;  0 insert-template  : Inserts the default template for the current file hook (<fhook-label>.etf)
;  # insert-template  : Inserts the template matching #_<name>.etf with the user's $user-path/<fhook-label>/ directory (# can be prefixed with '0's)
;  insert-template "<template-name>" : Inserts the given template, first checking for $user-path/<fhook-label>/<template-name>.etf, then using &find
;  0 insert-template "<template-name>" : Same except only &find is used to locate it (used by system to insert the main hook template)
;  insert-template    : Prompt user to select template from list made up of the default and any templates in $user-path/<fhook-label>/, if only one found it is automatically inserted.
;

0 define-macro insert-template-rt
  set-variable #l0 $window-line
  set-variable #l1 &llen .tl
  !repeat
    set-variable $window-line #l0
    !force @# replace-string &spr "$%s$" &lget .tl #l1 &lget #p9 #l1
  !until &not &dec #l1 1
!emacro
set-variable .insert-template-rt.tl "\bFILE_NAME\bFILE_BASENAME\bFILE_NAME_UD\bASCII_TIME\bYEAR\bUSER_NAME\bCOMPANY_NAME\bCOMPANY_URL\bCOMPANY_REF\b"

define-macro insert-template
  !iif &seq "" &set #l0 &rig $buffer-fhook 6  -8 ml-write "[Error: Invalid $buffer-fhook]"
  !iif &seq &set #l8 &ind &spr ".fhook-%s.name" #l0 "ERROR"  set-variable #l8 #l0
  !force set-variable #l4 @1
  !if $status
    set-variable #l2 &con &seq ".etf" &rig #l4 -4 &lef #l4 -4 #l4
    !iif @#  set-variable @# &seq "R" &stat t &set #l9 &spr "%s%s/%s.etf" $user-path #l0 #l2
    !if @#
    !elif &seq "ERROR" &set #l9 &find #l2 ".etf"
      -8 ml-write &spr "[Error: Failed to locate template file: %s.etf]" #l2
    !endif
  !elif &not @?
    set-variable $file-names &spr "%s%s/.*\.etf" $user-path #l0
    set-variable #l2 $result
    set-variable #l3 "|"
    !while &len &set #l5 $file-names
      set-variable #l3 &lins #l3 -1 &rep &lef #l5 -4 "_" " "
    !done
    set-variable #l6 0
    !if &lfin #l3 #l0
    !elif &set #l6 &seq "R" &stat t &set #l9 &spr "%s%s.etf" $user-path #l2
      set-variable #l3 &lins #l3 0 &cat "0 " #l0
    !endif
    !iif &seq #l3 "|"  -8 ml-write &spr "[Error: No %s templates found in: %s%s]" #l8 $user-path #l0
    !if &seq "" &lget #l3 2
      set-variable #l4 &lget #l3 1
    !else
      set-variable #l4 @ml09 "Select template to insert" #l3
    !endif
    !iif &not &and #l6 &seq #l4 &cat "0 " #l0  set-variable #l9 &spr "%s%s.etf" #l2 &rep #l4 " " "_"
  !elif @#
    set-variable $file-names &spr "%s%s/0*%d_.+\\.etf" $user-path #l0 @#
    !iif &seq "" &set #l9 $file-names  -8 ml-write &spr "[Error: %s template %d not found in: %s%s/]" #l8 @# $user-path #l0
    set-variable #l9 &cat $result #l9
  !elif &seq "ERROR" &set #l9 &find #l0 ".etf"
    -8 ml-write &spr "[Error: %s default template not found]" #l8
  !endif
  ; Remember if new buffer & current magic mode then add it if not set
  set-variable #l1 &cat &con &gre $window-eline 1 1 0 &bmod magic
  ; Insert the template file
  set-variable #l8 $window-line
  !force insert-file #l9
  !if &not $status
    ; Warn and return if the template file was not located.
    ml-write &spr "[Could not insert template file: %s]" #l9
    !return
  !endif
  set-variable #l7 &sub #l8 $window-line
  -1 buffer-mode "magic"
  ascii-time
  set-variable #l3 &xrep &set #l0 $buffer-bname "<[0-9]+>$" ""
  set-variable #l9 &spr "\b%s\b%s\b%s\b%s\b%s\b%s\b%s\b%s\b%s\b" #l3 &xrep #l3 "\\.[^.]*$" "" &sup &rep #l3 "." "_" #l9 &lef $time 4 &reg "/history/user-name" "<unknown>" &con &exi %company-name %company-name "$USER_NAME$" &con &exi %company-url %company-url "" &con &exi %company-url "$COMPANY_NAME$ ($COMPANY_URL$)" "$COMPANY_NAME$"
  set-variable $window-line #l8
  #l7 insert-template-rt
  set-variable $window-line &sub #l8 #l7
  !repeat
    !force search-buffer "meb" "^\\(.*\\)\\$COMPANY_LICENSE\\(:\\d+\\)\\$\\(.*\\)$"
    !iif &not $status  !break
    !iif &les &set #l2 $window-line #l8  !break
    set-variable #l3 @s2
    set-variable #l4 &spr "\b%s\b%s\b" @s1 @s3
    !force 0 delete-buffer "*ittmp1*"
    find-buffer "*ittmp1*"
    !if &exi %company-license
      insert-string %company-license
      -1 buffer-mode "magic"
      set-variable $window-line 1
      &sub 1 $window-eline insert-template-rt
    !else
      insert-string "All rights reserved."
    !endif
    1 buffer-mode "magic"
    !if &set #l3 &rig #l3 1
      set-variable #l5 &spr "^.\\{%d\\}" #l3
      !repeat
        !force search-buffer "me" #l5
        !iif &not $status  !break
        !force set-variable $window-acol &add #l3 1
        !if $status
          set-variable #l6 $window-col
          !force -1 search-buffer "bme" "[^ ] "
          !if $status
            forward-char
            !while &seq @wc " "
              forward-delete-char
            !done
            insert-newline
          !else
            set-variable $window-col &sub #l6 2
            insert-string "-\n"
          !endif
          backward-char
        !endif
      !done
      !if &len &lget #l4 2
        set-variable $window-line 1
        &sub 1 $window-eline replace-string "$" &spr "%n" #l3 " "
        set-variable $window-line 1
        &sub 1 $window-eline replace-string &spr "^\\(.\\{%d\\}\\).*$" #l3 "\\1"
      !endif
    !endif
    set-variable $window-line 1
    !iif &len &lget #l4 1  &sub $window-eline 1 replace-string "^" &rep &lget #l4 1 "\\" "\\\\"
    set-variable $window-line 1
    !iif &len &lget #l4 2  &sub $window-eline 1 replace-string "$" &rep &lget #l4 2 "\\" "\\\\"
    set-variable $window-line 1
    set-mark
    end-of-buffer
    backward-char
    copy-region
    set-variable #l3 &sub $window-line 1
    find-buffer #l0
    set-variable $window-line #l2
    yank
    -1 yank
    set-mark
    end-of-line
    -1 kill-region
    set-variable $window-line #l2
    set-variable #l7 &sub #l7 #l3
  !done
  !force 0 delete-buffer "*ittmp1*"
  set-variable $window-line #l8
  !force #l7 replace-string "$CURSOR$" ""
  !iif &not &lget $result 1  set-variable $window-line &sub #l8 #l7
  ; Reset magic mode if we added it, flag buffer as unedited and goto end
  &cond &rig #l1 1 1 -1 buffer-mode "magic"
  &cond &lef #l1 1 1 -1 buffer-mode "edit"
;  !iif &len #l6  ml-write &spr "[Template may be improved if you defined:%s]" &rig #l6 1
!emacro
