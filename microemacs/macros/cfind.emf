; -!- emf -!-
; This is part of the JASSPA MicroEmacs macro files
; Copyright (C) 2007 JASSPA (www.jasspa.com)
; See the file me.emf for copying and conditions.
;
; Created:     2007-10-17
; Synopsis:    Command-line wrapper for ME based find and grep commands
; Authors:     Steven Phillips
;
; Notes:
;
;    The following vars must be set (.arg0...argn via option -f):
;        .about.argn   - Numeric argument to give the command
;        .about.arg0   - Must be set to find, grep or replace-string-in-files           
;        .about.arg1   - first argument for the command
;        .about.arg2   - second argument for the command (if required)
;        .about.arg3   - second argument for the command (if required etc)
;
;    -p option not currently supported, cd to path first.
;
; Examples:
;
;    mecw32 -n -p @cfind.emf -f find -rxD *file-mask*
;
;    mecw32 -n -p @cfind.emf -f grep -i searchStr *.txt
;
!if &not &exi .about.arg0
  -2 ml-write "Error: Find command not set"
  0 exit-emacs
!elif &seq .about.arg1 "ERROR"
  -2 ml-write &spr "Error: Arguments for the %s command not given" .about.arg0
  0 exit-emacs
!elif &seq &find $user-name ".erf" "ERROR"
  -2 ml-write &spr "Error: Failed to find ME registry for \"%s\"" $user-name
  0 exit-emacs
!endif
!force read-registry "/history" $user-name "c"
set-variable $kept-versions &reg &spr "/history/%s/kept-vers" $platform "0"
; This check allows the ME '-v $file-ignore=...' command-line option to be used to define required value   
!if &seq $file-ignore ""
  set-variable $file-ignore &reg &spr "/history/%s/file-ignore" $platform ""
!endif

0 define-macro-file buffinit buffer-init buffer-init-fhook buffer-bind-create fhook-default
0 define-macro-file utils frame-handle ascii-time var-str-sub str-to-regex filemask-to-regex copy-registry create-file-path
set-variable .osd.tmp 40
set-variable .osd.next &cond &exi .osd.next .osd.next &add .osd.tmp 1
0 execute-file "find"

define-macro start-up
  set-variable $buffer-fname &stat a "."
  set-variable #l2 ""
  set-variable #l0 0
  !while &exi &set #l1 &cat ".about.arg" &inc #l0 1
    ml-write &spr "Got [%s] [%s]" #l1 &ind #l1
    !if &sin " " &set #l3 &ind #l1
      set-variable #l2 &spr "%s \"%s\"" #l2 &rep &rep #l3 "\\" "\\\\" "\"" "\\\""
    !else
      set-variable #l2 &spr "%s %s" #l2 #l3
    !endif
  !done
  ml-write &cat "From dir: " $buffer-fname
  ml-write &spr "Exec: %s [%s]" .about.arg0 #l2
  !if 0
  !elif &exi .about.argn
    !force .about.argn execute-named-command .about.arg0 #l2 "."
  !else
    !force execute-named-command .about.arg0 #l2 "."
  !endif
  set-variable #l9 $result
  4 exit-emacs #l9
!emacro
