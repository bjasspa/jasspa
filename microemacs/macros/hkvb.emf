;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
;  Created By    : Dave Yip & Steven Phillips
;  Created       : Mon Sep 21 18:10:34 1998
;  Last Modified : <000719.0012>
;
;  Description : Visual Basic Hook File
;
;  Notes
;
;  History
;
;  Copyright (c) 1998-99 JASSPA
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
!if &not &exist .hilight.vb
    set-variable .hilight.vb &pinc .hilight.next 1
!endif
    
!if &band .hilight.flags 0x02
    ; Comments, strings & goto labels
    0 hilight .hilight.vb 3 100          $global-scheme
    hilight .hilight.vb 4 "\"" "\"" ""   .scheme.string
    hilight .hilight.vb 2 "^#"           .scheme.prepro
    hilight .hilight.vb 18 "'"           .scheme.comment
    hilight .hilight.vb 0 "^\\w+:"       .scheme.link
    hilight .hilight.vb 1 "GoTo \\w+"    .scheme.link
    
    ; Constants
    hilight .hilight.vb 1 "True"         .scheme.operator
    hilight .hilight.vb 1 "False"        .scheme.operator
    hilight .hilight.vb 1 "Nothing"      .scheme.operator
    hilight .hilight.vb 1 "Binary"       .scheme.operator
    hilight .hilight.vb 1 "Access"       .scheme.operator
    hilight .hilight.vb 1 "Read"         .scheme.operator
    hilight .hilight.vb 1 "Write"        .scheme.operator
    hilight .hilight.vb 1 "Not"          .scheme.operator
    hilight .hilight.vb 1 "Is"           .scheme.operator
    ; Keywords
    hilight .hilight.vb 1 "As"           .scheme.keyword
    hilight .hilight.vb 1 "Option"       .scheme.keyword
    hilight .hilight.vb 1 "If"           .scheme.keyword
    hilight .hilight.vb 1 "Else"         .scheme.keyword
    hilight .hilight.vb 1 "ElseIf"       .scheme.keyword
    hilight .hilight.vb 1 "Then"         .scheme.keyword
    hilight .hilight.vb 1 "Case"         .scheme.keyword
    hilight .hilight.vb 1 "LCase"        .scheme.keyword
    hilight .hilight.vb 1 "Select"       .scheme.keyword
    hilight .hilight.vb 1 "begin"        .scheme.keyword
    hilight .hilight.vb 1 "End"          .scheme.keyword
    hilight .hilight.vb 1 "Exit"         .scheme.keyword
    hilight .hilight.vb 1 "Function"     .scheme.keyword
    hilight .hilight.vb 1 "While"        .scheme.keyword
    hilight .hilight.vb 1 "Wend"         .scheme.keyword
    hilight .hilight.vb 1 "Loop"         .scheme.keyword
    hilight .hilight.vb 1 "On"           .scheme.keyword
    hilight .hilight.vb 1 "Open"         .scheme.keyword
    hilight .hilight.vb 1 "Do"           .scheme.keyword
    hilight .hilight.vb 1 "Sub"          .scheme.keyword
    hilight .hilight.vb 1 "Set"          .scheme.keyword
    hilight .hilight.vb 1 "For"          .scheme.keyword
    hilight .hilight.vb 1 "To"           .scheme.keyword
    hilight .hilight.vb 1 "Next"         .scheme.keyword
    hilight .hilight.vb 1 "Property"     .scheme.keyword
    hilight .hilight.vb 1 "Error"        .scheme.keyword
    hilight .hilight.vb 1 "ReDim"        .scheme.keyword
    ; Types
    hilight .hilight.vb 1 "Attribute"    .scheme.type
    hilight .hilight.vb 1 "Boolean"      .scheme.type
    hilight .hilight.vb 1 "ByVal"        .scheme.type
    hilight .hilight.vb 1 "Collection"   .scheme.type
    hilight .hilight.vb 1 "Const"        .scheme.type
    hilight .hilight.vb 1 "Declare"      .scheme.type
    hilight .hilight.vb 1 "Dim"          .scheme.type
    hilight .hilight.vb 1 "End\\s +Type" .scheme.type
    hilight .hilight.vb 1 "Explicit"     .scheme.type
    hilight .hilight.vb 1 "Explicit"     .scheme.type
    hilight .hilight.vb 1 "Global"       .scheme.type
    hilight .hilight.vb 1 "Integer"      .scheme.type
    hilight .hilight.vb 1 "Long"         .scheme.type
    hilight .hilight.vb 1 "New"          .scheme.type
    hilight .hilight.vb 1 "Object"       .scheme.type
    hilight .hilight.vb 1 "Private"      .scheme.type
    hilight .hilight.vb 1 "Public"       .scheme.type
    hilight .hilight.vb 1 "String"       .scheme.type
    hilight .hilight.vb 1 "Type"         .scheme.type
    !if &band .hilight.flags 0x04
        ; function definitions
        hilight .hilight.vb 0 "\\s \\{Function\\s +\\w+\\s ?\\}(" .scheme.function
        hilight .hilight.vb 1 "End\\s +Function" .scheme.function
        hilight .hilight.vb 0 "\\s \\{Sub\\s +\\w+\\}(" .scheme.function
        hilight .hilight.vb 1 "End\\s +Sub"  .scheme.function
        hilight .hilight.vb 0 "\\s \\{Property\\s +Get\\s +\\w+\\}(" .scheme.function
        hilight .hilight.vb 0 "\\s \\{Property\\s +Let\\s +\\w+\\}(" .scheme.function
        hilight .hilight.vb 1 "End\\s +Property" .scheme.function
    !endif
!endif
; Define the indentation tokens
0 indent .hilight.vb 1 20
indent .hilight.vb i "'"
indent .hilight.vb i "^#"
indent .hilight.vb e "\"" "\"" "\\"
indent .hilight.vb N "Declare" -2
indent .hilight.vb N "Function" 2
indent .hilight.vb N "Property" 2
indent .hilight.vb N "Sub" 2
; A Then at the end of the line, then indent + 2; otherwise this is
; a single line 'if ... then' and no indenation is required.
indent .hilight.vb N "Then" 2
indent .hilight.vb N "Then\\s +\\w+" 0
indent .hilight.vb N "Begin" 2
indent .hilight.vb S "Else" -2
indent .hilight.vb S "Case" -2
indent .hilight.vb N "Select\\s +Case" 4
indent .hilight.vb O "ElseIf" -2
indent .hilight.vb O "End" -2
indent .hilight.vb N "Type" 2
indent .hilight.vb S "Resume\\s +Next" 0
indent .hilight.vb O "End\\s +Select" -4
indent .hilight.vb O "End\\s +Function" -2
indent .hilight.vb O "End\\s +Property" -2
indent .hilight.vb O "End\\s +Sub" -2
indent .hilight.vb O "End\\s +Type" -2
indent .hilight.vb O "Exit\\s +Function" 0
indent .hilight.vb O "Exit\\s +Property" 0
indent .hilight.vb O "Exit\\s +Sub" 0
indent .hilight.vb N "While" 2
indent .hilight.vb O "Wend" -2
indent .hilight.vb N "For" 2
indent .hilight.vb O "Next" -2
indent .hilight.vb f "^\\w+:" 0
; ignore the rest of an open line as it may contain a For
indent .hilight.vb I "Open" 2
;indent .hilight.vb c "\_" 2

-1 add-file-hook "-!-[ \t]*msvb.*-!-"           fhook-vb  ; -!- msvb -!-

define-macro fhook-vb
    !if &band .hilight.flags 0x02
        set-variable $buffer-hilight .hilight.vb
    !endif
    set-variable $buffer-indent  .hilight.vb
    set-variable $buffer-mask "luh1"
    buffer-bind-unbound-key restyle-region "A-C-i"
    ; execute user extensions if enabled
    !if &exist my-fhook-vb
        my-fhook-vb
    !endif
!emacro

ml-write "[VB file hook loaded]"

; load in user extensions if found
!force execute-file "myvb"
