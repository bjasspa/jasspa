; -!- emf -!-
;
; Copyright (C) 1998-2024 JASSPA (www.jasspa.com)
;
; This is part of JASSPA's MicroEmacs, see the LICENSE file for licensing and
; copying information.
;
; Synopsis:    On-line help macros.
; Authors:     Steven Phillips
;
0 define-macro-file utils ascii-time str-to-regex
define-macro-file htmltool html-to-ehf
define-macro-file format clean

define-macro ehf-process-buffer
  ; Carry on as normal
  set-variable #l1 &rig $buffer-fname &rsin "/" $buffer-fname
  set-variable #l1 &lef #l1 &sub &sin ".htm" #l1 1
  ml-write &spr "[Processing %s]" #l1
  set-variable #l3 ""
  end-of-buffer
  set-mark
  !force search-backward "<HR>"
  -1 kill-region
*start
  ; collect all the <!-- XI: buffer-mode(2) --> references
  beginning-of-buffer
  !force search-forward "<!-- XI: "
  !while $status
    set-mark
    search-forward " -->"
    set-alpha-mark "T"
    4 backward-char
    copy-region
    !if &seq #l3 ""
      set-variable #l3 @y
    !endif
    beginning-of-buffer
    search-forward "^[^!]"
    backward-char
    yank
    -1 yank
    insert-newline
    2 backward-char
    !if &seq @wc ")"
      forward-delete-char
      !repeat
        backward-char
      !until &seq @wc "("
      forward-delete-char
      1 kill-line
      set-variable #l0 @y
      -1 yank
    !else
      forward-char
      set-variable #l0 ""
    !endif
    set-variable #l2 $window-col
    beginning-of-line
    insert-string "!"
    !if &and &sin @wc "!&" &gre #l2 4
      insert-string "4"
    !else
      insert-string " "
    !endif
    insert-string #l0
    &sub 2 &len #l0 insert-space
    goto-alpha-mark "T"
    !force search-forward "<!-- XI: "
  !done
  !if &seq #l3 ""
    ; Create the <!-- XI: references from the title
    beginning-of-buffer
    search-forward "<TITLE>"
    set-mark
    search-forward "</TITLE>"
    8 backward-char
    copy-region
    set-variable #l0 @y
    -1 yank
    beginning-of-buffer
    forward-line
    insert-string &spr "<!-- XI: %s -->\n" #l0
    !goto start
  !endif
  beginning-of-buffer
  search-forward "^[^!]"
  backward-char
  set-mark
  !force search-forward "<HR>"
  -1 kill-region
  set-variable $buffer-fill-col 10000
  2 html-to-ehf
  beginning-of-buffer
  !force replace-string "\CJ\CJ\CJ\CJ" "\CJ\CJ\CJ"
  beginning-of-buffer
  !force search-forward "\CEs"
  !while $status
    set-mark
    !force search-forward "\CEm"
    2 backward-char
    kill-region
    set-variable #l0 @y
    -1 yank
    set-variable #l0 &rig #l0 &rsin "/" #l0
    set-variable #l0 &lef #l0 &sub &sin ".htm" #l0 1
    insert-string #l0
    !force search-forward "\CEs"
  !done
  beginning-of-buffer
  insert-string &spr "#%s#%s\n" #l1 #l3
  1 buffer-mode "magic"
  beginning-of-buffer
  !force search-forward "^|"
  !while $status
    forward-line
    !if &seq @wl ""
      ; usually only one blank line, if two or more
      ; then one is the wrong side of the ^| line
      forward-delete-char
      !if &seq @wl ""
        delete-blank-lines
        backward-line
        insert-newline
        forward-char
      !endif
    !endif
    !force search-forward "^|"
  !done
  beginning-of-buffer
  !force replace-string "^\\$emf-scheme\CJ" "\CDB"
  beginning-of-buffer
  !force replace-string "^\\$ehf-scheme\CJ" "\CDA"
  ; strip blank lines at the top and bottom
  end-of-buffer
  backward-line
  !while &seq @wc "\n"
    1 kill-line
    -1 yank
    backward-line
  !done
  beginning-of-buffer
  search-forward "^[^!#]"
  backward-char
  !while &seq @wc "\n"
    1 kill-line
    -1 yank
  !done
!emacro

define-macro ehf-process-all
  !force 0 delete-buffer "*scratch*"
  delete-other-windows
  split-window-vertically
  find-file "me.ehf"
  beginning-of-buffer
  set-mark
  end-of-buffer
  -1 kill-region
  next-window
  !while &not &seq $buffer-bname "me.ehf"
    ehf-process-buffer
    beginning-of-buffer
    set-mark
    !while &seq @wc "#"
      forward-line
    !done
    copy-region
    next-window
    beginning-of-buffer
    yank
    -1 yank
    next-window
    set-mark
    end-of-buffer
    copy-region
    next-window
    end-of-buffer
    yank
    -1 yank
    next-window
    0 delete-buffer $buffer-bname
  !done
  ; now convert all the page names to something sensible
  ml-write "[Processing links - this could take some time]" 
  beginning-of-buffer
  1 buffer-mode "magic"
  !repeat
    !force search-forward "\CEs"
    !if &not $status  !break
    set-alpha-mark "T"
    set-mark
    search-forward "\CEm"
    2 backward-char
    kill-region
    set-variable #l3 @y
    -1 yank
    2 forward-char
    set-mark
    search-forward "\CE"
    backward-char
    copy-region
    set-variable #l0 @y
    -1 yank
    !if &set #l1 &rsin "(" #l0
      set-variable #l2 &rig #l0 #l1
      !if &equ &len #l2 2
        set-variable #l2 &spr "^!.%s " &lef #l2 1
      !else
        set-variable #l2 &cat "^!." &lef #l2 2
      !endif
      set-variable #l0 &lef #l0 &sub #l1 1
    !else
      set-variable #l2 "^!.  "
    !endif
    str-to-regex #l0
    set-variable #l0 &cat #l2 #l0
    beginning-of-buffer
    !force search-forward #l0
    !if $status
      goto-alpha-mark "T"
    !else
      !force search-forward &spr "^#%s#" #l3
      !if $status
        set-variable #l0 &rig @wl $window-col
        goto-alpha-mark "T"
        insert-string #l0
      !else
        goto-alpha-mark "T"
      !endif
    !endif
  !done
  beginning-of-buffer
  set-mark
  search-forward "^!"
  beginning-of-line
  kill-region
  ; Apply special fixes
  ml-write "[Fixing @hash]" 
  beginning-of-buffer
  !force replace-string "@hash" "@#"
  ml-write "[Fixing esc backslash]" 
  beginning-of-buffer
  !force replace-string "esc backslash" "esc \\\\"
  ml-write "[Fixing http: links]" 
  ; Move the http and email address curior hilighting start string (\CCG) out
  ; of the way so cut and paste gets the right thing
  beginning-of-buffer
  !force replace-string " \CCGhttp:" "\CCG http:"
  beginning-of-buffer
  !force replace-string " \CCDEmail:\CCA\CCGsupport" "\CCG Email:support"
  beginning-of-buffer
  !force replace-string " \CCGjasspa-subscribe@" "\CCG jasspa-subscribe@"
  beginning-of-buffer
  !force replace-string " \CCGjasspa-unsubscribe@" "\CCG jasspa-unsubscribe@"
  ; find and fix all split underlines
  beginning-of-buffer
  !force replace-string "\\(\CC\\(\\m\\)[^\CC\n]*\\)\n\\( *\\)" "\\1\CCA\n\\3\CC\\2"
  ; find and fix all split links
  beginning-of-buffer
  !force replace-string "\\(\CEm[^\CE\n]*\\)\n\\( *\\)" "\\1\CEn\n\\2\CEn"
  beginning-of-buffer
  ; TODO: SSP this looks a little loose
  !force replace-string "\CCE\\(\CCE.+?\\)\CCE" "\\1"
  ; clean the buffer
  clean
!emacro

; don't advertise the definition of start-up
0 define-macro start-up
  ehf-process-all
  quick-exit
!emacro
