; -!- emf -!-
; This is part of the JASSPA MicroEmacs macro files
; Copyright (C) 1998-2009 JASSPA (www.jasspa.com)
; See the file me.emf for copying and conditions.
;
; Synopsis:    Install Shield rul file hook
; Authors:     Jon Green
;
set-char-mask "3" "@"

define-macro fhook-rul
    set-variable $buffer-mask "luh13"
    @# buffer-init "rul"
    buffer-init-hooks
!emacro
set-variable .fhook-rul.name "Install Shield Rul"
set-variable .fhook-rul.setup &reg "/history/fhook/rul" "bdfghnopx"
set-variable .fhook-rul.setup-mask "abdefghikmnoptux"
set-variable .fhook-rul.comment "|/*| */|*| * | * |fr|"
set-variable .fhook-rul.comment-1 "|//||/|// | //||"
set-variable .fhook-rul.exact -1

set-variable .fhook-rul.collapse-open  "^function"
set-variable .fhook-rul.collapse-close "^end"
set-variable .fhook-rul.collapse-mclose "1"
set-variable .fhook-rul.collapse-mnext "-1"


!if &not &exist .hilight.rul
    set-variable .hilight.rul &pinc .hilight.next 1
!endif

!if &and &sin "h" .fhook-rul.setup &band .hilight.flags 0x02 
    0 hilight .hilight.rul 3 20            $global-scheme
    hilight .hilight.rul 0x1a "#" "\\"     .scheme.prepro
    hilight .hilight.rul 2  "//"           .scheme.comment
    hilight .hilight.rul 20 "/\\*" "*/" "" .scheme.comment
    hilight .hilight.rul 4 "\"" "\"" "\\"  .scheme.string
    hilight .hilight.rul 0 "'.'"           .scheme.string
    hilight .hilight.rul 0 "'\\\\.'"       .scheme.quote
    hilight .hilight.rul 0 "'\\\\'"        .scheme.error
    hilight .hilight.rul 0 "'\\\\''"       .scheme.quote
    hilight .hilight.rul 4 "@" "\\}\\W" "" .scheme.variable
    ;
    hilight .hilight.rul 1 "abort"        .scheme.keyword
    hilight .hilight.rul 1 "begin"        .scheme.keyword
    hilight .hilight.rul 1 "case"         .scheme.keyword
    hilight .hilight.rul 1 "declare"      .scheme.keyword
    hilight .hilight.rul 1 "default"      .scheme.keyword
    hilight .hilight.rul 1 "downto"       .scheme.keyword
    hilight .hilight.rul 1 "else"         .scheme.keyword
    hilight .hilight.rul 1 "elseif"       .scheme.keyword
    hilight .hilight.rul 1 "end"          .scheme.keyword
    hilight .hilight.rul 1 "endif"        .scheme.keyword
    hilight .hilight.rul 1 "endswitch"    .scheme.keyword
    hilight .hilight.rul 1 "endwhile"     .scheme.keyword
    hilight .hilight.rul 1 "exit"         .scheme.keyword
    hilight .hilight.rul 1 "for"          .scheme.keyword
    hilight .hilight.rul 1 "function"     .scheme.keyword
    hilight .hilight.rul 1 "goto"         .scheme.keyword
    hilight .hilight.rul 1 "if"           .scheme.keyword
    hilight .hilight.rul 1 "program"      .scheme.keyword
    hilight .hilight.rul 1 "prototype"    .scheme.keyword
    hilight .hilight.rul 1 "repeat"       .scheme.keyword
    hilight .hilight.rul 1 "return"       .scheme.keyword
    hilight .hilight.rul 1 "step"         .scheme.keyword
    hilight .hilight.rul 1 "switch"       .scheme.keyword
    hilight .hilight.rul 1 "then"         .scheme.keyword
    hilight .hilight.rul 1 "to"           .scheme.keyword
    hilight .hilight.rul 1 "typedef"      .scheme.keyword
    hilight .hilight.rul 1 "until"        .scheme.keyword
    hilight .hilight.rul 1 "while"        .scheme.keyword
    
    hilight .hilight.rul 1 "after"        .scheme.operator
    hilight .hilight.rul 1 "append"       .scheme.operator
    hilight .hilight.rul 1 "before"       .scheme.operator
    hilight .hilight.rul 1 "back"         .scheme.operator
    hilight .hilight.rul 1 "cancel"       .scheme.operator
    hilight .hilight.rul 1 "command"      .scheme.operator
    hilight .hilight.rul 1 "continue"     .scheme.operator
    hilight .hilight.rul 1 "disable"      .scheme.operator
    hilight .hilight.rul 1 "dlg_err"      .scheme.operator
    hilight .hilight.rul 1 "enable"       .scheme.operator
    hilight .hilight.rul 1 "exclusive"    .scheme.operator
    hilight .hilight.rul 1 "exist"        .scheme.operator
    hilight .hilight.rul 1 "failifexists" .scheme.operator
    hilight .hilight.rul 1 "false"        .scheme.operator
    hilight .hilight.rul 1 "no"           .scheme.operator
    hilight .hilight.rul 1 "nonexclusive" .scheme.operator
    hilight .hilight.rul 1 "noset"        .scheme.operator
    hilight .hilight.rul 1 "notexists"    .scheme.operator
    hilight .hilight.rul 1 "notreset"     .scheme.operator
    hilight .hilight.rul 1 "null"         .scheme.operator
    hilight .hilight.rul 1 "off"          .scheme.operator
    hilight .hilight.rul 1 "ok"           .scheme.operator
    hilight .hilight.rul 1 "on"           .scheme.operator
    hilight .hilight.rul 1 "partial"      .scheme.operator
    hilight .hilight.rul 1 "replace"      .scheme.operator
    hilight .hilight.rul 1 "replace_item" .scheme.operator
    hilight .hilight.rul 1 "reset"        .scheme.operator
    hilight .hilight.rul 1 "set"          .scheme.operator
    hilight .hilight.rul 1 "true"         .scheme.operator
    hilight .hilight.rul 1 "yes"          .scheme.operator
    ;
    hilight .hilight.rul 1 "bool"         .scheme.type
    hilight .hilight.rul 1 "char"         .scheme.type
    hilight .hilight.rul 1 "hwnd"         .scheme.type
    hilight .hilight.rul 1 "int"          .scheme.type
    hilight .hilight.rul 1 "list"         .scheme.type
    hilight .hilight.rul 1 "long"         .scheme.type
    hilight .hilight.rul 1 "number"       .scheme.type
    hilight .hilight.rul 1 "short"        .scheme.type
    hilight .hilight.rul 1 "string"       .scheme.type
!endif
!if &sin "d" .fhook-rul.setup
    ; Initialise the indentation
    0 indent  .hilight.rul 1 30
    indent .hilight.rul N "then"       t
    indent .hilight.rul S "else"      -t
    indent .hilight.rul O "elseif"    -t
    indent .hilight.rul O "end"       -t
    indent .hilight.rul O "endif"     -t
    indent .hilight.rul N "begin"      t
    indent .hilight.rul N "repeat"     t
    indent .hilight.rul O "until"     -t
    indent .hilight.rul N "for"        t
    indent .hilight.rul O "endfor"    -t
    indent .hilight.rul N "while"      t
    indent .hilight.rul O "endwhile"  -t
    indent .hilight.rul N "switch"     t
    indent .hilight.rul S "case"      -t
    indent .hilight.rul S "default"   -t
    indent .hilight.rul O "endswitch" -t
    indent .hilight.rul b "(" ")"
    indent .hilight.rul i "//"
    indent .hilight.rul e "\"" "\"" "\\"
    indent .hilight.rul e "/\\*" "*/" ""
!endif

buffer-init-fhook "rul"

