; -!- emf -!-
; This is part of the JASSPA MicroEmacs macro files
; Copyright (C) 2002 JASSPA (www.jasspa.com)
; See the file me.emf for copying and conditions.
;
; Created:     Tue Apr 16 2002
; Synopsis:    Toolbar creation and management routines
; Authors:     Steven Phillips
; Notes:
;     The toolbar is configured by the following 6 variables:
;
;     .toolbar.width - Sets the default width of the left hand vertical toolbar
;     .toolbar.depth - Sets the default depth of the top horizontal toolbar
;     .toolbar.tool-flag - A list defining the flags of each tool
;           the order of the list must be the same for this and the following variables,
;           the flag is bitwise defined as follows:
;           0x001 - Call the update command on toolbar creation
;           0x002 - Call the update command on recenter
;           0x004 - Call the update command if the current buffer type changes 
;           0x008 - Call the update command if the current buffer changes
;           0x010 - Call the update command if the current buffer is modified/saved
;           0x080 - Update the mode-lines
;           0x100 - Restore window location after an update
;           0x200 - Lock the depth/width as well
;           0x400 - The tool is hidden (not active sub-page)
;           0x800 - The tool is a sub page of the window
;          0x1000 - position in the left toolbar
;          0x2000 - position in the top toolbar
;          0x4000 - position in the right toolbar
;          0x8000 - position in the bottom toolbar
;     .toolbar.tool-name - A list defining the name of each tool
;     .toolbar.tool-buff - A list defining the name of each tool's buffer
;     .toolbar.tool-file - A list defining the macro file containing the tool command
;     .toolbar.tool-size - A list defining the relative sizes of each tool
;     .toolbar.tool-cmd  - A list defining the command to be called when the
;                             tool buffer needs updating - NOTE this command must
;                             restore the window state and great care must be taken
;                             if deleting the tool buffer as the window displaying
;                             the tool buffer will swap to another window.
;
;     These variables are defined at the bottom of this file and can be over-ridden
;     by setting them in your <user>.emf file.
;
;     The update command is always called when the toolbar is opened, from then on
;     the command is only called when required (determined by the 0x02 & 0x04 bits
;     of the flag. 
;                             
0 define-macro-file toolstp toolbar-setup

0 define-macro toolbar-redraw-mode
    set-variable #l0 &sub $window-width &add 3 &band $scroll-bar 0x01
    set-variable #l1 &lget .toolbar.tool-name @#
    set-variable #l2 &cond &band &lget .toolbar.tool-flag @# 0x800 &mid $window-chars 27 1 &mid $box-chars 3 1
    set-variable #l3 &cond &band &lget .toolbar.tool-flag &add @# 1 0x800 &mid $window-chars 31 1 &mid $box-chars 4 1
    set-variable $buffer-mode-line &spr "%s %s%n%s" #l2 &lef #l1 &add #l0 1 &sub #l0 &len #l1 " " #l3
    set-variable :tool-width $window-width
!emacro

0 define-macro toolbar-redraw
    !if .toolbar.disable
        @# screen-update
        !return
    !elif &band $window-flags 0x1000
        @# screen-update
        !return
    !elif &seq @cl "recenter"
        set-variable .bc &bor .bc 0x002
    !elif &les @# 1
        @# screen-update
        !return
    !elif &gre @# 2
        @# screen-update
        !return
    !elif &seq $buffer-bname "*complete*"
        ; ignore the completion window
        @# screen-update
        !return
    !endif
    set-variable .bc &bor .bc &cond &seq .bn $buffer-bname 0 0x008
    !if &bxor &bmod "edit" &bmod "usr8"
        set-variable .bc &bor .bc 0x010
        &cond &bmod "edit" 1 -1 buffer-mode "usr8"
    !elif &not .bc
        ; no change!
        @# screen-update
        !return
    !endif
    !if &not &seq .bt $buffer-fhook
        set-variable .bc &bor .bc 0x004
        set-variable .bt $buffer-fhook
    !endif
    set-variable .bn $buffer-bname
    set-variable #l5 $system
    set-variable $system &bor $system 0x800000
    set-position "\x84"
    set-variable #l1 0
    !while &not &seq "" &set #l2 &lget .toolbar.tool-flag &inc #l1 1
        !if &not &band #l2 0x400
            !force 0 popup-window &lget .toolbar.tool-buff #l1
            !if $status
                !if &not &exi :mouse-pick-all
                    ; install dummy mouse handler to avoid modifying problems
                    set-variable :mouse-pick-all "toolbar-mouse-void"
                    set-variable :mouse-drop-all "toolbar-mouse-void"
                    1 buffer-mode "hide"
                !endif
                !if &band #l2 .bc
                    0xdf set-position "\x85"
                    1 goto-position "\x84"
                    !force !force execute-line &lget .toolbar.tool-cmd #l1
                    !force &cond &band #l2 0x100 0xdf 1 goto-position "\x85"
                !endif
                !if &sub :tool-width $window-width
                    ; the width of the tool window has changed - update modeline
                    #l1 toolbar-redraw-mode
                !endif
            !endif
        !endif
    !done
    set-variable .bc 0
    goto-position "\x84"
    set-variable $system #l5
    !if @?
        @# screen-update
    !else
        screen-update
    !endif
!emacro

0 define-macro toolbar-make-tool-visible
    !if &not .toolbar.open
        !abort
    !elif &not &set #l0 &lfind .toolbar.tool-buff @1
        !abort
    !endif
    !if &band &lget .toolbar.tool-flag #l0 0x400
        ; tool is hidden - find the one currently shown
        set-variable #l1 #l0
        !if &band &lget .toolbar.tool-flag #l1 0x800
            set-variable #l1 &sub #l1 1
            !jump -2
        !endif
        !if &band &lget .toolbar.tool-flag #l1 0x400
            set-variable #l1 &add #l1 1
            !jump -2
        !endif
        ; make tool #l0 visible, making #l1 invisible
        set-position "\x84"
        popup-window &lget .toolbar.tool-buff #l1
        set-variable .toolbar.tool-flag &lset .toolbar.tool-flag #l1 &bxor &lget .toolbar.tool-flag #l1 0x400
        set-variable .toolbar.tool-flag &lset .toolbar.tool-flag #l0 &bxor &lget .toolbar.tool-flag #l0 0x400
        set-variable .toolbar-redraw.bc &bor .toolbar-redraw.bc 0x002
        find-buffer &lget .toolbar.tool-buff #l0
        ; install dummy mouse handler to avoid modifying problems
        set-variable :mouse-pick-all "toolbar-mouse-void"
        set-variable :mouse-drop-all "toolbar-mouse-void"
        1 buffer-mode "hide"
        #l0 toolbar-redraw-mode
        goto-position "\x84"
    !endif
!emacro

0 define-macro toolbar-mode-line
    !if &set #l1 &lfind .toolbar.tool-buff $buffer-bname
        set-variable #l0 @fs $mouse-y $mouse-x
        !if &seq #l0 &mid $window-chars 27 1
            !if &band &lget .toolbar.tool-flag #l1 0x800
                set-variable #l2 &sub #l1 1
                !goto page-tool
            !endif
        !elif &seq #l0 &mid $window-chars 31 1
            !if &band &lget .toolbar.tool-flag &set #l2 &add #l1 1 0x800
*page-tool
                set-variable .toolbar.tool-flag &lset .toolbar.tool-flag #l1 &bxor &lget .toolbar.tool-flag #l1 0x400
                set-variable .toolbar.tool-flag &lset .toolbar.tool-flag #l2 &bxor &lget .toolbar.tool-flag #l2 0x400
                set-variable .toolbar-redraw.bc &bor .toolbar-redraw.bc 0x002
                find-buffer &lget .toolbar.tool-buff #l2
                ; install dummy mouse handler to avoid modifying problems
                set-variable :mouse-pick-all "toolbar-mouse-void"
                set-variable :mouse-drop-all "toolbar-mouse-void"
                1 buffer-mode "hide"
                #l2 toolbar-redraw-mode
                ; fully handled this event, abort
                !abort
            !endif
        !endif
    !endif
!emacro

define-macro toolbar-close
    1 set-position "\x84"
    !force global-unbind-key "redraw"
    set-variable #l0 0
    !while &not &seq "" &set #l1 &lget .toolbar.tool-buff &inc #l0 1
        !force 0 popup-window #l1
        !if $status
            delete-window
            -1 find-buffer #l1
        !endif
    !done
    set-variable .toolbar.open 0
    goto-position "\x84"
!emacro

define-macro toolbar
    set-variable .size &reg "/history" "toolbar/size" "|20|15|20|15|"
    set-variable .tool-name &reg "/history" "toolbar/tool-name" "\CHToolbar\CH"
    set-variable .tool-buff &reg "/history" "toolbar/tool-buff" "\CH*toolbar-left*\CH"
    set-variable .tool-file &reg "/history" "toolbar/tool-file" "\CHtooldef\CH"
    set-variable .tool-size &reg "/history" "toolbar/tool-size" "\CH100\CH"
    set-variable .tool-flag &reg "/history" "toolbar/tool-flag" "\CH0x1001\CH"
    set-variable .tool-cmd  &reg "/history" "toolbar/tool-cmd"  "\CH1 toolbar-default\CH"
    !if &seq "" &lget .toolbar.tool-flag 1
        ml-write "[Error: No registered tools]"
        !abort
    !endif
    3 delete-other-windows
    set-variable .flag "||||||"
    set-variable #l9 "|||||"
    set-variable #l0 0
    !while &not &seq "" &set #l1 &lget .toolbar.tool-flag &inc #l0 1
        set-variable #l2 &xrep &lget .toolbar.tool-cmd #l0 "^[ \t]*[0-9]*[ \t]*\\([A-Za-z]\\w*\\)\\([ \t].*\\)?" "\\1"
        !if &not &exi &ind #l2
            0 define-macro-file &lget .toolbar.tool-file #l0 #l2
        !endif
        !if &set #l2 &lfind .conv &band #l1 0xf000
            set-variable .flag &lset .flag #l2 &add &lget .flag #l2 1
            !if &not &band #l1 0x400
                set-variable #l9 &lset #l9 #l2 &add &lget #l9 #l2 &lget .toolbar.tool-size #l0
            !endif
        !endif
    !done
    set-variable #l8 "|||||"
    set-variable #l7 "|||||"
    set-variable #l6 "|||||"
    set-variable #l0 0
    !while &not &seq "" &set #l1 &lget .toolbar.tool-flag &inc #l0 1
        !if &not &band #l1 0x400
            !if &set #l2 &lfind .conv &band #l1 0xf000
                !if &seq &set #l3 &lget #l6 #l2 ""
                    ; first tool on this tool bar
                    set-variable .flag &lset .flag 5 &add &lget .flag 5 1
                    5 next-window
                    !if &band #l2 1
                        &cond &band #l2 2 2 1 split-window-horizontally
                        change-window-width &lget .size #l2
                        set-variable #l7 &lset #l7 #l2 $window-depth
                    !else
                        &cond &band #l2 4 2 1 split-window-vertically
                        change-window-depth  &lget .size #l2
                        set-variable #l7 &lset #l7 #l2 $window-width
                    !endif
                !else
                    0 popup-window #l3
                    !if &band #l2 1
                        ; vertical toolbar
                        set-variable #l4 $window-flags
                        split-window-vertically
                        change-window-depth &div &mul &lget #l7 #l2 &lget #l8 #l2 &lget #l9 #l2
                        set-variable $window-flags #l4
                    !else
                        set-variable #l4 $window-flags
                        split-window-horizontally
                        change-window-width &div &mul &lget #l7 #l2 &lget #l8 #l2 &lget #l9 #l2
                        set-variable $window-flags #l4
                    !endif
                    next-window
                !endif
                set-variable $window-flags &cond &band #l1 0x200 0x103f &sub 0x103e &band #l2 1 
                find-buffer &lget .toolbar.tool-buff #l0
                ; install dummy mouse handler to avoid modifying problems
                set-variable :mouse-pick-all "toolbar-mouse-void"
                set-variable :mouse-drop-all "toolbar-mouse-void"
                1 buffer-mode "hide"
                set-variable #l8 &lset #l8 #l2 &lget .toolbar.tool-size #l0
                set-variable #l6 &lset #l6 #l2 $buffer-bname
            !endif
        !endif
    !done
    5 next-window
    set-variable .toolbar-redraw.bn "\CH"
    set-variable .toolbar-redraw.bt "\CH"
    set-variable .toolbar-redraw.bc 0x001
    set-variable .toolbar.open 1
    global-bind-key toolbar-redraw "redraw"
!emacro
set-variable .toolbar.conv "|4096|8192|16384|32768|"

0 define-macro toolbar-mouse-void
    goto-position "\x82"
!emacro

