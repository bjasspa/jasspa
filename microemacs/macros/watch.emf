; -!- emf -!-
; This is part of the JASSPA MicroEmacs macro files
; Copyright (C) 2000-2004 JASSPA (www.jasspa.com)
; See the file me.emf for copying and conditions.
;
; Created:     Tue May 9 2000
; Synopsis:    Sets up a watch on the current buffer's file and auto-reloads
; Authors:     Steven Phillips
; Description: Run watch in any file buffer and ME will automatically check
;              for updates to this file every 10sec.
; Notes:
;   * If a watch file has been changed it will be automatically re-loaded.
;   * A watched buffer is only checked if it is currently visible, i.e. it
;     is shown in a window.
;   * You can stop a watch on a buffer by going to the buffer and running watch
;     again, i.e. running watch toggles its watch state
;   * You can force a buffer to be watch by giving watch an argument of 1, i.e.:
;         find-buffer "buffer-to-be-watched"
;         1 watch
;   * And ensure the watch is stopped by giving watch an argument of -1, i.e.:
;         find-buffer "watched-buffer"
;         -1 watch
;   * The default 10sec delay between watch cycles can be altered by executing
;     watch with an argument of 0, i.e.:
;         0 watch
;   * Watch keeps a count of the number of buffers being watch and if this gets
;     back to zero it stops watching, but it is easily confused by users simply
;     deleting a watched buffer. If this happens watch will continue to be called
;     but should have no effect.
;   * Use the watch-reset command to stop all watch, which also fixes the above
;     problem
;
0 define-macro watch-callback
    set-variable #l0 $window-id
    set-variable #l9 0
    !repeat
        !if &exi :watch
            set-variable #l2 &stat d $buffer-fname
            !if &gre #l2 :watch
                ml-write &spr "[Watch rereading %s]" $buffer-bname
                !force !force reread-file
                set-variable :watch #l2
                set-variable #l9 1
            !endif
        !endif
        ; visit EVERY window otherwise we might not get back to the starting one (toolbar!)
        3 next-window
    !until &equ $window-id #l0
    !if #l9
        ml-clear
        screen-update
    !endif
    .watch.time create-callback watch-callback
!emacro

define-macro watch
    !if @#
        !if &les @# 0
            !jump 2
        !elif &and &not @? &exi :watch
            !if &exi :watch
                unset-variable :watch
                !if &not &dec .count 1
                    -1 create-callback watch-callback
                !endif
            !endif
        !elif &not &exi :watch
            set-variable #l0 &stat d $buffer-fname
            !if &equ #l0 -1
                ml-write "[Invalid buffer for watch]"
                !bell
                !abort
            !endif
            set-variable :watch #l0
            !if &not &pinc .count 1
                .time create-callback watch-callback
            !endif
        !endif
        ml-write &spr "[Watch %sabled]" &cond &exi :watch "en" "dis"
    !else
        set-variable #l0 @ml1 "Watch time (s)" &div .time 1000
        set-variable .time &mul 1000 &cond &les #l0 1 1 #l0
    !endif
!emacro

define-macro watch-reset
    -1 create-callback watch-callback
    set-variable .watch.count 0
    set-variable #l1 $buffer-bname
    set-variable $buffer-names ".*"
    !while &not &seq &set #l0 $buffer-names ""
        !if &not &nbmod #l0 "nact"
            find-buffer #l0
            !force unset-variable :watch
        !endif
    !done
    find-buffer #l1
!emacro

!if &not &exi .watch.time
    set-variable .watch.time 10000
    set-variable .watch.count 0
!endif

