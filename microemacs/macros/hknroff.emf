; -!- emf -!-
; This is part of the JASSPA MicroEmacs macro files
; Copyright (C) 1993-2009 JASSPA (www.jasspa.com)
; See the file me.emf for copying and conditions.
;
; Synopsis:    Highlight mode NROFF
; Authors:     Jon Green & Steven Phillips
;
; Notes:
;     This file contains some JASSPA extensions for their Nroff documentation.
;
define-macro fhook-nroff
    @# buffer-init "nroff"
    buffer-init-hooks
!emacro

; buffer-init variables
set-variable .fhook-nroff.setup &reg "/history/fhook/nroff" "bfghijnopswx"
set-variable .fhook-nroff.setup-mask "abefghijkmnopstuwx"
set-variable .fhook-nroff.tags "ntags"
set-variable .fhook-nroff.comment "|.\\\"||*|.\\\" | \"/||"

; Define the buffer commands.
set-variable .fhook-nroff.command-0  "|thbo||nroff-para|esc q|\HFill paragraph|"
set-variable .fhook-nroff.command-1  "|bo||nroff-para|esc o||"
set-variable .fhook-nroff.command-2  "|thb||nroff-add-padding|C-c &|\HAdd Padding|"
set-variable .fhook-nroff.command-3  "|thb||nroff-remove-padding|C-x &|Remove \HPadding|"
set-variable .fhook-nroff.command-4  "|thb||nroff-bold|C-c C-b|Change to \HBold|"
set-variable .fhook-nroff.command-5  "|thb||nroff-italic|C-c C-i|Change to \HItalic|"
set-variable .fhook-nroff.command-6  "|thb||nroff-mono|C-c C-m|Change to \HMono (Courier)|"
set-variable .fhook-nroff.command-7  "|thb||nroff-roman|C-c C-n|Change to \HNormal (Roman)|"
set-variable .fhook-nroff.command-8  "|thb||nroff-size|C-c +|Change \HSize|"
set-variable .fhook-nroff.command-9  "|thb||nroff-bold-region|C-c b|R\Hegion to Bold|"
set-variable .fhook-nroff.command-10 "|thb||nroff-mono-region|C-c m|Region to Mono|"
set-variable .fhook-nroff.command-11 "|thb||nroff-italic-region|C-c i|Re\Hgion to Italic|"
set-variable .fhook-nroff.command-12 "|th|||||"
set-variable .fhook-nroff.command-13 "|thbH||nroff-swap-hilight|C-c C-h|T\Hoggle hilighting|"
set-variable .fhook-nroff.command-14 "|t||tex2nr||Convert Tex to Nroff|"

; setup nroff collapsing
set-variable .fhook-nroff.collapse-open  "^\\.S[SH]"
set-variable .fhook-nroff.collapse-close "^\\.S[SH]\\|\\'"
set-variable .fhook-nroff.collapse-mnext "-1"

; setup item-list
set-variable .fhook-nroff.item-list-s1 "^\\.\\(S[SH]\\)[ \t]+\"?\\([^\"\n]*\\)"
set-variable .fhook-nroff.item-list-r1 "\\1  \ecB\\2\ecA"

!if &and &sin "h" .fhook-nroff.setup &band .hilight.flags 0x02
    !if &not &exist .hilight.nroff
        set-variable .hilight.nroff &pinc .hilight.next 1
        set-variable .hilight.roffR &pinc .hilight.next 1
        set-variable .hilight.roffB &pinc .hilight.next 1
        set-variable .hilight.roffI &pinc .hilight.next 1
        set-variable .hilight.roffC &pinc .hilight.next 1
        set-variable .hilight.roffM &pinc .hilight.next 1
    !endif
    ; hilight-nroff-common; Common hilighting modifiers
    0 define-macro hilight-nroff-common
        ; Get the arguments into the local registers for speed.
        set-variable #l1 @1
        set-variable #l2 @2
        ; Comments
        hilight #l1 2 "^%"                          .scheme.comment
        ;symbols
        hilight #l1 0x040 "\\\\\\\\"  "\\\\"        #l2
        hilight #l1 0x040 "\\\\." "\\1"             #l2
        hilight #l1 0x040 "\\\\&"  ""               #l2
        hilight #l1 0x040 "\\\\|"  ""               #l2
        hilight #l1 0x040 "\\\\s0" ""               #l2
        hilight #l1 0x040 "\\\\ " " "               #l2
        hilight #l1 0x040 "\\\\-" "-"               #l2
        hilight #l1 0x040 "\\\\s[-+][[:digit:]]" "" #l2
        hilight #l1 0     "\\\\\\*\\w"              .scheme.variable
        hilight #l1 0     "\\\\\\*(\\w\\w"          .scheme.variable
    !emacro
    0 hilight  .hilight.nroff 4                        $global-scheme
    hilight .hilight.nroff 0   "\\\\s0"                .scheme.variable
    hilight .hilight.nroff 0   "\\\\s[-+][[:digit:]]"  .scheme.variable
    hilight .hilight.nroff 0   "\\\\fP"                .scheme.variable
    hilight .hilight.nroff 0   "\\\\fI"                .scheme.variable
    hilight .hilight.nroff 0   "\\\\f2"                .scheme.variable
    hilight .hilight.nroff 0   "\\\\fR"                .scheme.variable
    hilight .hilight.nroff 0   "\\\\f1"                .scheme.variable
    hilight .hilight.nroff 0   "\\\\fB"                .scheme.variable
    hilight .hilight.nroff 0   "\\\\f3"                .scheme.variable
    hilight .hilight.nroff 0   "\\\\fC"                .scheme.variable
    hilight .hilight.nroff 0   "\\\\-"                 .scheme.variable
    hilight .hilight.nroff 0   "\\\\&"                 .scheme.variable
    hilight .hilight.nroff 0   "\\\\|"                 .scheme.variable
    hilight .hilight.nroff 0   "\\\\\\\\"              .scheme.variable
    hilight .hilight.nroff 0   "\\\\ "                 .scheme.variable
    hilight .hilight.nroff 0   "\\\\\\*\\w"            .scheme.variable
    hilight .hilight.nroff 0   "\\\\\\*(\\w\\w"        .scheme.variable
    hilight .hilight.nroff 0x200 "[.']"
    hilight .hilight.nroff 2   "^[.']\\\\\""           .scheme.comment
    hilight .hilight.nroff 1   "^[.']B"                .scheme.keyword
    hilight .hilight.nroff 1   "^[.']BE"               .scheme.keyword
    hilight .hilight.nroff 1   "^[.']BI"               .scheme.keyword
    hilight .hilight.nroff 1   "^[.']BP"               .scheme.keyword
    hilight .hilight.nroff 1   "^[.']bp"               .scheme.keyword
    hilight .hilight.nroff 1   "^[.']BR"               .scheme.keyword
    hilight .hilight.nroff 1   "^[.']br"               .scheme.keyword
    hilight .hilight.nroff 1   "^[.']BS"               .scheme.keyword
    hilight .hilight.nroff 1   "^[.']BU"               .scheme.keyword
    hilight .hilight.nroff 1   "^[.']C"                .scheme.keyword
    hilight .hilight.nroff 1   "^[.']CE"               .scheme.keyword
    hilight .hilight.nroff 1   "^[.']CS"               .scheme.keyword
    hilight .hilight.nroff 1   "^[.']ds"               .scheme.keyword
    hilight .hilight.nroff 1   "^[.']rm"               .scheme.keyword
    hilight .hilight.nroff 1   "^[.']FH"               .scheme.keyword
    hilight .hilight.nroff 1   "^[.']ft"               .scheme.keyword
    hilight .hilight.nroff 1   "^[.']Hg"               .scheme.prepro
    hilight .hilight.nroff 1   "^[.']Hh"               .scheme.prepro
    hilight .hilight.nroff 1   "^[.']Hl"               .scheme.prepro
    hilight .hilight.nroff 1   "^[.']Hr"               .scheme.prepro
    hilight .hilight.nroff 1   "^[.']Ht"               .scheme.prepro
    hilight .hilight.nroff 1   "^[.']I"                .scheme.keyword
    hilight .hilight.nroff 1   "^[.']IB"               .scheme.keyword
    hilight .hilight.nroff 1   "^[.']Id"               .scheme.keyword
    hilight .hilight.nroff 1   "^[.']Im"               .scheme.keyword
    hilight .hilight.nroff 1   "^[.']IP"               .scheme.keyword
    hilight .hilight.nroff 1   "^[.']IR"               .scheme.keyword
    hilight .hilight.nroff 1   "^[.']Kw"               .scheme.keyword
    hilight .hilight.nroff 1   "^[.']Le"               .scheme.prepro
    hilight .hilight.nroff 1   "^[.']Li"               .scheme.prepro
    hilight .hilight.nroff 1   "^[.']Lj"               .scheme.prepro
    hilight .hilight.nroff 1   "^[.']LP"               .scheme.keyword
    hilight .hilight.nroff 1   "^[.']Ls"               .scheme.prepro
    hilight .hilight.nroff 1   "^[.']PP"               .scheme.keyword
    hilight .hilight.nroff 1   "^[.']R"                .scheme.keyword
    hilight .hilight.nroff 1   "^[.']RB"               .scheme.keyword
    hilight .hilight.nroff 1   "^[.']RE"               .scheme.keyword
    hilight .hilight.nroff 1   "^[.']RI"               .scheme.keyword
    hilight .hilight.nroff 1   "^[.']RS"               .scheme.keyword
    hilight .hilight.nroff 1   "^[.']Se"               .scheme.keyword
    hilight .hilight.nroff 1   "^[.']Ss"               .scheme.keyword
    hilight .hilight.nroff 1   "^[.']TP"               .scheme.keyword
    hilight .hilight.nroff 3   "^[.']TH"               .scheme.function
    hilight .hilight.nroff 3   "^[.']XI"               .scheme.prepro
    hilight .hilight.nroff 3   "^[.']XJ"               .scheme.prepro
    hilight .hilight.nroff 3   "^[.']ad"               .scheme.keyword
    hilight .hilight.nroff 3   "^[.']fi"               .scheme.keyword
    hilight .hilight.nroff 3   "^[.']ll"               .scheme.keyword
    hilight .hilight.nroff 3   "^[.']na"               .scheme.keyword
    hilight .hilight.nroff 3   "^[.']ne"               .scheme.keyword
    hilight .hilight.nroff 3   "^[.']nf"               .scheme.keyword
    hilight .hilight.nroff 3   "^[.']sp"               .scheme.keyword
    hilight .hilight.nroff 3   "^[.']NH"               .scheme.prepro
    hilight .hilight.nroff 3   "^[.']pl"               .scheme.keyword
    hilight .hilight.nroff 3   "^[.']ps"               .scheme.keyword
    hilight .hilight.nroff 3   "^[.']SH"               .scheme.header
    hilight .hilight.nroff 3   "^[.']so"               .scheme.prepro
    hilight .hilight.nroff 3   "^[.']SS"               .scheme.header
    hilight .hilight.nroff 3   "^[.']Me"               .scheme.prepro
    hilight .hilight.nroff 3   "^[.']vs"               .scheme.keyword

    0 hilight  .hilight.roffR 2 40                     $global-scheme
    hilight-nroff-common                    .hilight.roffR $global-scheme
    hilight .hilight.roffR 0x040 "\\\\fP" ""           $global-scheme
    hilight .hilight.roffR 0x040 "\\\\fR" ""           $global-scheme
    hilight .hilight.roffR 0x040 "\\\\f1" ""           $global-scheme
    hilight .hilight.roffR 0x0c0 "\\\\fI" ""  .hilight.roffI  .scheme.italic
    hilight .hilight.roffR 0x0c0 "\\\\f2" ""  .hilight.roffI  .scheme.italic
    hilight .hilight.roffR 0x0c0 "\\\\fB" ""  .hilight.roffB  .scheme.bold
    hilight .hilight.roffR 0x0c0 "\\\\f3" ""  .hilight.roffB  .scheme.bold
    hilight .hilight.roffR 0x0c0 "\\\\fC" ""  .hilight.roffM  .scheme.string
    hilight .hilight.roffR 0x0c0 "\\\\f4" ""  .hilight.roffM  .scheme.string
    hilight .hilight.roffR 0x200 "^[.']"
    hilight .hilight.roffR 2     "^[.']\\\\\""         .scheme.comment
    hilight .hilight.roffR 1     "^[.']BE"             .scheme.bold
    hilight .hilight.roffR 1     "^[.']BS"             .scheme.bold
    hilight .hilight.roffR 1     "^[.']BU"             .scheme.bold
    hilight .hilight.roffR 1     "^[.']CE"             .scheme.bold
    hilight .hilight.roffR 1     "^[.']ds"             .scheme.hide
    hilight .hilight.roffR 1     "^[.']FH"             .scheme.bold
    hilight .hilight.roffR 1     "^[.']Hg"             .scheme.hide
    hilight .hilight.roffR 1     "^[.']Id"             .scheme.link
    hilight .hilight.roffR 1     "^[.']Im"             .scheme.link
    hilight .hilight.roffR 1     "^[.']Kw"             .scheme.hide
    hilight .hilight.roffR 1     "^[.']Le"             .scheme.hide
    hilight .hilight.roffR 1     "^[.']Li"             .scheme.hide
    hilight .hilight.roffR 1     "^[.']Lj"             .scheme.hide
    hilight .hilight.roffR 1     "^[.']LP"             .scheme.bold
    hilight .hilight.roffR 1     "^[.']Ls"             .scheme.hide
    hilight .hilight.roffR 1     "^[.']R"              .scheme.bold
    hilight .hilight.roffR 1     "^[.']RB"             .scheme.bold
    hilight .hilight.roffR 1     "^[.']RE"             .scheme.bold
    hilight .hilight.roffR 1     "^[.']RI"             .scheme.bold
    hilight .hilight.roffR 1     "^[.']RS"             .scheme.bold
    hilight .hilight.roffR 1     "^[.']Se"             .scheme.bold
    hilight .hilight.roffR 1     "^[.']Ss"             .scheme.bold
    hilight .hilight.roffR 1     "^[.']TH"             .scheme.bold
    hilight .hilight.roffR 3     "^[.']XI"             .scheme.link
    hilight .hilight.roffR 3     "^[.']XJ"             .scheme.link
    hilight .hilight.roffR 3     "^[.']ad"             .scheme.hide
    hilight .hilight.roffR 3     "^[.']bp"             .scheme.hide
    hilight .hilight.roffR 3     "^[.']br"             .scheme.hide
    hilight .hilight.roffR 3     "^[.']fi"             .scheme.hide
    hilight .hilight.roffR 3     "^[.']ft"             .scheme.hide
    hilight .hilight.roffR 3     "^[.']ll"             .scheme.hide
    hilight .hilight.roffR 3     "^[.']na"             .scheme.hide
    hilight .hilight.roffR 3     "^[.']nf"             .scheme.hide
    hilight .hilight.roffR 3     "^[.']NH"             .scheme.bold
    hilight .hilight.roffR 3     "^[.']pl"             .scheme.hide
    hilight .hilight.roffR 3     "^[.']ps"             .scheme.hide
    hilight .hilight.roffR 3     "^[.']so"             .scheme.bold
    hilight .hilight.roffR 3     "^[.']vs"             .scheme.hide
    hilight .hilight.roffR 0x42  "^[.']B "  ""         .scheme.bold
    hilight .hilight.roffR 0x42  "^[.']BI " ""         .scheme.bold
    hilight .hilight.roffR 0x42  "^[.']BP " "    "     .scheme.bold
    hilight .hilight.roffR 0x42  "^[.']BR " ""         .scheme.bold
    hilight .hilight.roffR 0x42  "^[.']C "  ""         .scheme.bold
    hilight .hilight.roffR 0x42  "^[.']I "  ""         .scheme.italic
    hilight .hilight.roffR 0x42  "^[.']IB " ""         .scheme.italic
    hilight .hilight.roffR 0x42  "^[.']PP"  ""         $global-scheme
    hilight .hilight.roffR 0x42  "^[.']IP " "    "     $global-scheme
    hilight .hilight.roffR 0x42  "^[.']IR " ""         .scheme.italic
    hilight .hilight.roffR 0x42  "^[.']Hh " ""         .scheme.link
    hilight .hilight.roffR 0x42  "^[.']Hl " ""         .scheme.link
    hilight .hilight.roffR 0x42  "^[.']Hr " ""         .scheme.link
    hilight .hilight.roffR 0x42  "^[.']Ht " ""         .scheme.link
    hilight .hilight.roffR 0x42  "^[.']SH " ""         .scheme.header
    hilight .hilight.roffR 0x42  "^[.']SS " ""         .scheme.header
    hilight .hilight.roffR 0xc3  "^[.']CS" "" .hilight.roffC .scheme.string

    0 hilight .hilight.roffB 0                             .scheme.bold
    hilight-nroff-common                    .hilight.roffB .scheme.bold
    hilight .hilight.roffB 0x080 "\\}\\\\f" .hilight.roffR $global-scheme

    0 hilight .hilight.roffI 0                             .scheme.italic
    hilight-nroff-common                    .hilight.roffI .scheme.italic
    hilight .hilight.roffI 0x080 "\\}\\\\f" .hilight.roffR $global-scheme

    0 hilight .hilight.roffM 0                             .scheme.string
    hilight-nroff-common                    .hilight.roffM .scheme.string
    hilight .hilight.roffM 0x080 "\\}\\\\f" .hilight.roffR $global-scheme

    0 hilight .hilight.roffC 0                              .scheme.string
    hilight .hilight.roffC 0x040 "\\\\." "\\1"              .scheme.string
    hilight .hilight.roffC 0x0c0 "[.']CE" "" .hilight.roffR .scheme.string

    0 define-macro nroff-swap-hilight
        !if &equal $buffer-hilight .hilight.nroff
            set-variable $buffer-hilight .hilight.roffR
            1 buffer-mode "view"
        !else
            set-variable $buffer-hilight .hilight.nroff
            -1 buffer-mode "view"
        !endif
    !emacro
    ; redefine to free memory
    0 define-macro hilight-nroff-common
    !emacro
!endif
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Nroff specific macros
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0 define-macro nroff-italic
    ; If it is a region then italic the region, otherwise insert a italic
    ; character.
    0 show-region
    set-variable #l0 $result
    !if &equ &band #l0 5 5
        ; a region is hilighted
        !if &not &band $result 2
            3 show-region
        !endif
        ; Find start/end of region.
        -2 show-region
        set-variable #l0 $window-line
        set-variable #l1 $window-col
        set-position "\x82"
        2 show-region
        set-position "\x83"
        set-variable #l2 $window-line
        ; Determine start of region.
        !if &or &gre #l0 #l2 &gre $window-col $window-col
            set-variable #l3 1
        !else
            set-variable #l3 0
        !endif
        ; italic the region.
        goto-position &cond #l3 "\x83" "\x82"
        insert-string "\\fI"
        goto-position &cond #l3 "\x82" "\x83"
        insert-string "\\fP"
    !else
        ; No region hilighted, insert italic.
        insert-string "\\fI"
    !endif
!emacro

0 define-macro nroff-size
    ; If it is a region then size the region, otherwise insert a size
    ; character.
    0 show-region
    set-variable #l0 $result
    !if &equ &band #l0 5 5
        ; a region is hilighted
        !if &not &band $result 2
            3 show-region
        !endif
        ; Find start/end of region.
        -2 show-region
        set-variable #l0 $window-line
        set-variable #l1 $window-col
        set-position "\x82"
        2 show-region
        set-position "\x83"
        set-variable #l2 $window-line
        ; Determine start of region.
        !if &or &gre #l0 #l2 &gre $window-col $window-col
            set-variable #l3 1
        !else
            set-variable #l3 0
        !endif
        ; size the region.
        goto-position &cond #l3 "\x83" "\x82"
        insert-string "\\s-1"
        goto-position &cond #l3 "\x82" "\x83"
        insert-string "\\s0"
    !else
        ; No region hilighted, insert size
        insert-string "\\s0"
    !endif
!emacro

0 define-macro nroff-roman
    ; If it is a region then roman the region, otherwise insert a roman
    ; character.
    0 show-region
    set-variable #l0 $result
    !if &equ &band #l0 5 5
        ; a region is hilighted
        !if &not &band $result 2
            3 show-region
        !endif
        ; Find start/end of region.
        -2 show-region
        set-variable #l0 $window-line
        set-variable #l1 $window-col
        set-position "\x82"
        2 show-region
        set-position "\x83"
        set-variable #l2 $window-line
        ; Determine start of region.
        !if &or &gre #l0 #l2 &gre $window-col $window-col
            set-variable #l3 1
        !else
            set-variable #l3 0
        !endif
        ; roman the region.
        goto-position &cond #l3 "\x83" "\x82"
        insert-string "\\fR"
        goto-position &cond #l3 "\x82" "\x83"
        insert-string "\\fP"
    !else
        ; No region hilighted, insert roman.
        insert-string "\\fR"
    !endif
!emacro

0 define-macro nroff-bold
    ; If it is a region then roman the region, otherwise insert a roman
    ; character.
    0 show-region
    set-variable #l0 $result
    !if &equ &band #l0 5 5
        ; a region is hilighted
        !if &not &band $result 2
            3 show-region
        !endif
        ; Find start/end of region.
        -2 show-region
        set-variable #l0 $window-line
        set-variable #l1 $window-col
        set-position "\x82"
        2 show-region
        set-position "\x83"
        set-variable #l2 $window-line
        ; Determine start of region.
        !if &or &gre #l0 #l2 &gre $window-col $window-col
            set-variable #l3 1
        !else
            set-variable #l3 0
        !endif
        ; bold the region.
        goto-position &cond #l3 "\x83" "\x82"
        insert-string "\\fB"
        goto-position &cond #l3 "\x82" "\x83"
        insert-string "\\fP"
    !else
        ; No region hilighted, insert bold
        insert-string "\\fB"
    !endif
!emacro

0 define-macro nroff-mono
    ; If it is a region then mono the region, otherwise insert a mono
    ; character.
    0 show-region
    set-variable #l0 $result
    !if &equ &band #l0 5 5
        ; a region is hilighted
        !if &not &band $result 2
            3 show-region
        !endif
        ; Find start/end of region.
        -2 show-region
        set-variable #l0 $window-line
        set-variable #l1 $window-col
        set-position "\x82"
        2 show-region
        set-position "\x83"
        set-variable #l2 $window-line
        ; Determine start of region.
        !if &or &gre #l0 #l2 &gre $window-col $window-col
            set-variable #l3 1
        !else
            set-variable #l3 0
        !endif
        ; mono the region.
        goto-position &cond #l3 "\x83" "\x82"
        insert-string "\\fC"
        goto-position &cond #l3 "\x82" "\x83"
        insert-string "\\fP"
    !else
        ; No region hilighted, insert mono.
        insert-string "\\fC"
    !endif
!emacro

0 define-macro nroff-prev
    ; If it is a region then prev the region, otherwise insert a prev
    ; character.
    0 show-region
    set-variable #l0 $result
    !if &equ &band #l0 5 5
        ; a region is hilighted
        !if &not &band $result 2
            3 show-region
        !endif
        ; Find start/end of region.
        -2 show-region
        set-variable #l0 $window-line
        set-variable #l1 $window-col
        set-position "\x82"
        2 show-region
        set-position "\x83"
        set-variable #l2 $window-line
        ; Determine start of region.
        !if &or &gre #l0 #l2 &gre $window-col $window-col
            set-variable #l3 1
        !else
            set-variable #l3 0
        !endif
        ; prev the region.
        goto-position &cond #l3 "\x83" "\x82"
        insert-string "\\fP"
        goto-position &cond #l3 "\x82" "\x83"
        insert-string "\\fP"
    !else
        ; No region hilighted, insert prev.
        insert-string "\\fP"
    !endif
!emacro

0 define-macro nroff-para
    ; Save mark at point.
    !if &not @?
        set-mark
    !endif
    beginning-of-line
    !while &gre &pdec @# 1 0
        !if &not &sequal @wc "."
            !force search-buffer "em" "^\\."
            !if &not $status
                end-of-buffer
                ; Force an ending !!
                set-variable @# 1
            !endif
            beginning-of-line
            insert-newline
            !force search-buffer "bem" "^\\."
            !if $status
                forward-line
            !else
                beginning-of-buffer
            !endif
            insert-newline
            -1 fill-paragraph
            forward-delete-char
            search-buffer "bem" "^\\."
            forward-line
            forward-delete-char
            search-buffer "em" "^\\."
            beginning-of-line
        !endif
        forward-line
    !done
    ; If no arguments specified then restore the cursor position.
    !if &not @?
        exchange-point-and-mark
    !endif
!emacro

0 define-macro nroff-italic-region
    ; insert the \fR first so that if undone the cursor is in the current pos
    exchange-point-and-mark
    exchange-point-and-mark
    insert-string "\\fR"
    exchange-point-and-mark
    insert-string "\\fI"
    exchange-point-and-mark
!emacro

0 define-macro nroff-mono-region
    ; insert the \fR first so that if undone the cursor is in the current pos
    exchange-point-and-mark
    exchange-point-and-mark
    insert-string "\\fR"
    exchange-point-and-mark
    insert-string "\\fC"
    exchange-point-and-mark
!emacro

0 define-macro nroff-bold-region
    ; insert the \fR first so that if undone the cursor is in the current pos
    exchange-point-and-mark
    exchange-point-and-mark
    insert-string "\\fR"
    exchange-point-and-mark
    insert-string "\\fB"
    exchange-point-and-mark
!emacro

0 define-macro nroff-add-padding
; #l0 - %curline
; #l1 - %off-magic
    set-variable #l0 $window-line        ; Remember line
    set-variable #l1 &not &bmode "magic"
    !if #l1
        1 buffer-mode "magic"                ; Add magic
    !endif
    beginning-of-buffer
    replace-string "\\(\\\\f[CBIRP]\\)" "\\1\\\\&"
    beginning-of-buffer
    replace-string "\\(\\\\s[+-]?[0-9]\\)" "\\1\\\\&"
    goto-line #l0
    !if #l1
        -1 buffer-mode "magic"
    !endif
    screen-update
    ml-write "Added nroff padding."
!emacro

0 define-macro nroff-remove-padding
; #l0 - %curline
; #l1 - %off-magic
    set-variable #l0 $window-line        ; Remember line
    set-variable #l1 &not &bmode "magic"
    !if #l1
        1 buffer-mode "magic"                ; Add magic
    !endif
    beginning-of-buffer
    replace-string "\\(\\\\f[CBIRP]\\)\\\\&" "\\1"
    beginning-of-buffer
    replace-string "\\(\\\\s[+-]?[0-9]\\)\\\\&" "\\1"
    goto-line #l0
    !if #l1
        -1 buffer-mode "magic"
    !endif
    screen-update
    ml-write "Removed nroff padding."
!emacro
;
; Convert TEX to nroff.
;
define-macro tex2nr
    ;
    ; Prepare to clean up file.
    ;
    set-variable #l0 &bmod "magic"              ; Remember we have set magic
    1 buffer-mode "magic"                       ; Add magic
    set-variable #l1 $window-line               ; Remember line
    ;
    ; Get rid of trailing white space on EOL
    ;
    beginning-of-buffer
    replace-string "[\t ]+$" ""
    beginning-of-buffer
    replace-string "[ ]+\t" "\t"
    ;
    ; Strip trailing blank lines.
    ;
    end-of-buffer
    backward-line
    !while &and &gre $window-line 1 &sequal @wc "\n"
        1 kill-line
        backward-line
    !done
    ;
    ; Convert the comments.
    ;
    ml-write "Converting comments"
    beginning-of-buffer
    replace-string "^%" ".\\\\\" "
    ml-write "Converting margin paragraphs"
    beginning-of-buffer
    replace-string "^\\\\marginpar{\\(.+\\)}" ".BP \"\\1\"\n"
    beginning-of-buffer
    replace-string "^\\(.+\\)\\\\marginpar{\\(.+\\)}" ".BP \"\\2\"\n\\1"
    ml-write "Converting section headers"
    beginning-of-buffer
    replace-string "\\\\section{\\(.+\\)}" ".SH \"\\1\""
    beginning-of-buffer
    replace-string "\\\\subsection{\\(.+\\)}" ".SS \"\\1\""
    ml-write "Converting Embedded strings"
    beginning-of-buffer
    replace-string "\\\\ve" "\\\\*(ve"
    ml-write "Converting page formatting"
    beginning-of-buffer
    replace-string "\\\\pagebreak" ".bp"
    ml-write "Converting character formatting"
    beginning-of-buffer
    replace-string "\\\\\\^{o}" "o"
    ml-write "Converting courier character fonts"
    beginning-of-buffer
    replace-string "\\\\texttt{\\(.+\\)}" "\\\\fC\\1\\\\fR"
    ml-write "Converting italic character fonts"
    beginning-of-buffer
    replace-string "\\\\textit{\\(.+\\)}" "\\\\fI\\1\\\\fR"
    beginning-of-buffer
    replace-string "{\\\\it \\(.+\\)}" "\\\\fI\\1\\\\fR"
    ml-write "Converting bold character fonts"
    beginning-of-buffer
    replace-string "\\\\textbf{\\(.+\\)}" "\\\\fB\\1\\\\fR"
    beginning-of-buffer
    replace-string "{\\\\bf \\(.+\\)}" "\\\\fB\\1\\\\fR"
    ml-write "Converting slash bold character fonts"
    beginning-of-buffer
    replace-string "\\\\textbf{\\(.+\\)}" "\\\\fB\\1\\\\fR"
    beginning-of-buffer
    replace-string "{\\\\ssbf \\(.+\\)}" "\\\\fB\\1\\\\fR"
    ml-write "Converting labels and indices"
    beginning-of-buffer
    replace-string "\\\\label{\\(.+\\)}" ".XI \\1"
    beginning-of-buffer
    replace-string "\\\\index{\\(.+\\)}" ".XI \\1"
    ml-write "Converting cross references"
    beginning-of-buffer
    replace-string "[sS]ection~" ""
    beginning-of-buffer
    replace-string "\\\\ref{\\(.+\\)}" "\n.Hl \"\\1\",\\1,-\n"
    ml-write "Converting Coureir cross references (form2)"
    beginning-of-buffer
    replace-string "{\\\\tt \\(.+\\)}" "\\\\fC\\1\\\\fR"
    ml-write "Converting bullet lists"
    beginning-of-buffer
    replace-string "\\\\begin{itemize}" ".BS"
    beginning-of-buffer
    replace-string "\\\\item" ".BU\n"
    beginning-of-buffer
    replace-string "\\\\end{itemize}" ".BE"
    ml-write "Converting code blocks"
    beginning-of-buffer
    replace-string "\\\\begin{verbatim}" ".CS"
    beginning-of-buffer
    replace-string "\\\\end{verbatim}" ".CE"
    ml-write "Converting courier code blocks (form 3)"
    beginning-of-buffer
    replace-string "\\\\begin{alltt}" ".C"
    beginning-of-buffer
    replace-string "\\\\end{alltt}" ".R"
    ml-write "Converting tables"
    beginning-of-buffer
    replace-string "\\\\begin{tabular}.*" ".CS"
    beginning-of-buffer
    replace-string "\\\\end{tabular}" ".CE"
    ml-write "Cleaning up the footnotes"
    beginning-of-buffer
    replace-string "{\\\\footnotesize" ".ps 8\n.vs 10"
    ml-write "Converting text for verbatum"
    beginning-of-buffer
    replace-string "\\\\vbi{\\(.+\\)}" "\\\\fC\\1\\\\fR"
    ml-write "Converting symbols"
    beginning-of-buffer
    replace-string "\\$\\^\\\\circ\\$" "\\\\(de"
    beginning-of-buffer
    replace-string "\\$\\^{2}\\$" "^2"
    beginning-of-buffer
    replace-string "\\$\\^{-1}\\$" "-1"
    beginning-of-buffer
    replace-string "\\$\\infty\\$" "\\\\(fi"
    beginning-of-buffer
    replace-string "\\\\@" ""
    beginning-of-buffer
    replace-string "\\\\{" "{"
    beginning-of-buffer
    replace-string "\\\\}" "}"
    ;
    ; Clean up - restore buffer modes etc.
    ;
    !force goto-line #l1
    ; Remove magic as we added it
    !if &not #l0
        -1 buffer-mode "magic"
    !endif
    screen-update
    ml-write "Cleaned up file."
!emacro

0 define-macro nroff-spell-word
    set-variable #l0 $window-col
    -2 show-region
    !if $window-col
        !if &les &set #l1 &sub #l0 $window-col 2
            2 show-region
            !abort
        !endif
        backward-char
        !if &seq @wc "\\"
            forward-char
            !if &seq @wc "f"
                ; nroff font change
                2 forward-char
            !elif &seq @wc "s"
                ; nroff \s0, \s+1 command
                forward-char
                !if &sin @wc "+-"
                    forward-char
                !endif
                forward-char
            !else
                2 show-region
                !abort
            !endif
*ret-fix
            set-variable .spell.check-word &mid @wl $window-col &sub #l0 $window-col
            -3 show-region
            set-variable $window-col #l0
            3 show-region
            !return
        !elif &seq @wc "("
            backward-char
            !if &seq @wc "*"
                ; nroff double letter variable name \*(mS
                4 forward-char
                !goto ret-fix
            !endif
        !elif &seq @wc "*"
            backward-char
            !if &seq @wc "\\"
                ; nroff single letter variable name \*c
                3 forward-char
                !goto ret-fix
            !endif
        !elif &not $window-col
            !if &and &seq @wc "'" &les #l0 4
                ; this is a ^'SH type nroff command, skip all
                set-variable $window-col #l0
                set-variable .spell.check-word ""
                !return
            !endif
        !endif
    !elif &and &seq @wc "." &les #l0 4
        ; this is a ^.SH type nroff command, skip all
        set-variable $window-col #l0
        set-variable .spell.check-word ""
        !return
    !endif
    2 show-region
    !abort
!emacro

define-macro-file hkman aman

!if &sin "x" .fhook-nroff.setup
    ; only define the b & e hooks if time mode is enabled
    0 define-macro bhook-nroff
        set-variable .timestamp $timestamp
        set-variable $timestamp "%Y/%M/%D %h:%m:%s"
    !emacro
    0 define-macro ehook-nroff
        set-variable $timestamp .bhook-nroff.timestamp
    !emacro
!endif

buffer-init-fhook "nroff"
