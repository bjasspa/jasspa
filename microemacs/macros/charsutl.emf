; -!- emf -!-
; This is part of the JASSPA MicroEmacs macro files
; Copyright (C) 1999-2009 JASSPA (www.jasspa.com)
; See the file me.emf for copying and conditions.
;
; Created:     Sat Feb 13 1999
; Synopsis:    Buffer character set changing utility
; Authors:     Steven Phillips
;
; change-buffer-charset iso8859-7 cp1253
!iif &not &exi .osd.charset  set-variable .osd.charset &pinc .osd.next 1

define-macro buffer-is-utf8
  ; UTF8 - 2 byte: \xc2\x80 - \xdf\xbf  3: \xe0\x80\x80 - \xef\xbf\xbf 4: \xf0\x80\x80\x80 - \xf4\x8f\xbf\xbf
  set-alpha-mark "\x84"
  beginning-of-buffer
  !force search-buffer "me" "[\x80-\xff]"
  !if $status
    !force 2 backward-char
    ; search for a standalone trail byte or bad leader byte OR a leader with too many trail bytes OR a leader with not enough trail bytes
    !force search-buffer "me" "\\(^\\|[\x01-\x09\x0b-\x7f]\\)[\x80-\xbf\xf5-\xff]\\|\\([\xc2-\xdf][\x80-\xbf]\\|[\xe0-\xef][\x80-\xbf][\x80-\xbf]\\|[\xf0-\xf4][\x80-\xbf][\x80-\xbf][\x80-\xbf]\\)[\x80-\xbf]\\|\\([\xc2-\xdf]\\|[\xe0-\xef][\x80-\xbf]?\\|[\xf0-\xf4][\x80-\xbf]?[\x80-\xbf]?\\)\\([\x01-\x09\x0b-\x7f]\\|$\\)"
    set-variable @1 &con $status -1 1
  !else
    set-variable @1 0
  !endif
  goto-alpha-mark "\x84"
!emacro
define-macro change-buffer-charset
  !force set-variable #l1 @2
  !if $status
    set-variable #l0 @1
    !iif &seq #l0 "display"  set-variable #l0 &reg &spr "/history/%s/char-set" %platform "iso8859-1"
    !iif &seq #l1 "display"  set-variable #l1 &reg &spr "/history/%s/char-set" %platform "iso8859-1"
  !else
    .osd.charset osd
    set-variable #l0 .change-charset-set.from
    set-variable #l1 .change-charset-set.to
    set-variable @# &bor &band @# 1 &mul .change-charset-us.n 2
  !endif    
  !if &seq #l0 #l1
    ml-write "[From & To are the same - nothing to do!]"
    !return
  !endif
  set-alpha-mark "\x82"
  set-variable #l3 13
  !repeat
    !if &gre #l3 127
      goto-alpha-mark "\x82"
      -8 ml-write "[ERROR: Failed to find padding char for change-buffer-charset]"
    !endif
    beginning-of-buffer
    !force search-buffer "Me" &set #l4 &itoa #l3
  !until &not $status
  ; don't assume/default a char-set
  set-variable #l2 &reg &spr "/history/%s/char-set" %platform ""
  !if &not &set #l9 &con &seq #l0 "utf8" 1 0
    !if &not &seq #l0 #l2
      set-registry &spr "/history/%s/char-set" %platform #l0
      !force !force execute-file "charset"
      !iif &not $status  !goto abort
    !endif
    ; get list of unicode values for chars 0x80 - 0xff
    0 set-char-mask "c"
    set-variable #l3 $result
  !endif
  !if &seq #l1 "utf8"
    set-variable #l9 2
  !else
    ; load charset to convert too
    set-registry &spr "/history/%s/char-set" %platform #l1
    !force !force execute-file "charset"
    !iif &not $status  !goto abort
  !endif
  set-variable #l8 &cond &bmod magic 1 -1
  set-variable .result "|||||||"
  1 buffer-mode "magic"
  beginning-of-buffer
  !repeat
    !force search-buffer "me" &spr "[\x80-\xff][^%s]" #l4
    !iif &not $status  !break
    2 backward-char
    set-alpha-mark "\x83"
    !if &band #l9 1
      set-variable #l0 &ufi &mid @wl $window-col 4
      set-variable #l5 &spr "%s" &lget #l0 5
      !if &equ &lget #l0 1 3
        set-variable #l6 &spr "%s%s" &lget #l0 3 #l4
      !elif &and &lget #l0 1 &not &band @# 4
        !if &seq "0x000" &lef &lget #l0 2 5
          set-variable #l6 &cat "" &rig &lget #l0 2 -3
        !else
          set-variable #l6 &cat "" &rig &lget #l0 2 -5
        !endif
      !elif &band @# 2
        set-variable #l6 ""
      !else
        set-variable #l6 &spr "%s%s" &lget #l0 3 #l4
      !endif
    !else
      set-variable #l5 &spr "%s\\([^%s]\\)" @wc #l4
      set-variable #l0 &uni &cat "0x" &mid #l3 &mul &sub &atoi @wc 128 4 4
      !if &band #l9 2
        set-variable #l6 &cat &xre &lget #l0 5 "." &cat "\\0" #l4 "\\1"
      !elif &equ &lget #l0 1 3
        set-variable #l6 &spr "%s%s\\1" &lget #l0 3 #l4
      !elif &and &lget #l0 1 &not &band @# 4
        !if &seq "0x000" &lef &lget #l0 2 5
          set-variable #l6 &spr "%s\\1" &rig &lget #l0 2 -3
        !else
          set-variable #l6 &spr "%s\\1" &rig &lget #l0 2 -5
        !endif
      !elif &band @# 2
        set-variable #l6 "\\1"
      !else
        set-variable #l6 &spr "%s%s\\1" &lget #l0 3 #l4
      !endif
    !endif
    replace-string #l5 #l6
    set-variable #l7 &lget $result 1
    goto-alpha-mark "\x83"
    replace-string #l5 #l6
    set-variable #l7 &add #l7 &lget $result 1
    !if &les &lget #l0 1 3
      set-variable .result &lset &lset .result 1 &add &lget .result 1 1 4 &add &lget .result 4 #l7
    !elif &seq #l5 &lget #l0 3
      set-variable .result &lset &lset .result 3 &add &lget .result 3 1 6 &add &lget .result 6 #l7
    !else
      set-variable .result &lset &lset .result 2 &add &lget .result 2 1 5 &add &lget .result 5 #l7
    !endif
    goto-alpha-mark "\x83"
  !done
  beginning-of-buffer
  replace-string &spr "[%s]" #l4 ""
  !if &band @# 4
  !elif &band #l9 2
    beginning-of-buffer
    !repeat
      !force search-buffer "me" &spr "\\h\\h\\h\\|\\h\\{5\\}"
      !iif &not $status  !break
      set-variable #l0 &uni &cat "0x" &rig &set #l4 @s0 1
      &len #l4 backward-char
      set-alpha-mark "\x83"
      replace-string #l4 &lget #l0 5
      set-variable #l7 &lget $result 1
      goto-alpha-mark "\x83"
    !done
  !endif
  #l8 buffer-mode "magic"
  goto-alpha-mark "\x82"
  ; is the charset different from when we started? if so change back
  !if &not &seq #l2 &reg &spr "/history/%s/char-set" %platform ""
    set-registry &spr "/history/%s/char-set" %platform #l2
    !force !force execute-file "charset"
  !endif
  ; must also reset the language
  !force !force execute-file "language"
  !if &not &band @# 1
  !elif &lget .result 1
    ml-write &spr "[buffer converted to \"%s\" - Warning no conversion for %d chars (%d) converted %d (%d)]" #l1 &lget .result 4 &lget .result 1 &lget .result 5 &lget .result 2
  !else
    ml-write &spr "[buffer converted to \"%s\" - converted %d chars (%d)]" #l1 &lget .result 5 &lget .result 2
  !endif
  !return
*abort
  !if &not &seq #l2 &reg &spr "/history/%s/char-set" %platform ""
    set-registry &spr "/history/%s/char-set" %platform #l2
    !force !force execute-file "charset"
  !endif
  !force !force execute-file "language"
  -8 ml-write "[Command Aborted!]"
!emacro
  
0 define-macro change-charset-set
  !if &band @# 0x8000
    set-variable #l0 "utf8"
    set-variable #l1 "Unicode - UTF-8"
  !else
    set-variable #l0 &lget .change-font.cs-id &band @# 0xffff
    set-variable #l1 &lget .change-font.cs-name &band @# 0xffff
  !endif
  !if &band @# 0x10000
    set-variable .to #l0
    osd .osd.charset 60  "RMdtxmshfHzi" .scheme.osd-entry 32 1 #l1 .osd.tmp "change-charset-setup 0x10000"
  !else
    set-variable .from #l0
    osd .osd.charset 30  "RMdtxmshfHzi" .scheme.osd-entry 32 1 #l1 .osd.tmp "change-charset-setup 0x0"
  !endif
!emacro

0 define-macro change-charset-setup
  set-variable #l9 @1
  -1 osd .osd.tmp
  osd .osd.tmp 0 "bs" 35 0 0 0
  osd .osd.tmp 1 "" "Unicode - UTF-8" &bor #l9 0x8000 change-charset-set
  set-variable #l0 0
  !while &not &seq "" &set #l1 &lget .change-font.cs-name &inc #l0 1
    osd .osd.tmp &add #l0 1 "" #l1 &bor #l9 #l0 change-charset-set
  !done
!emacro

0 define-macro change-charset-us
  !if &les @# 0
    -1 osd .osd.tmp
    osd .osd.tmp 0 "bs" 35 0 0 0
    set-variable #l0 0
    !while &not &seq "" &set #l1 &lget .list &inc #l0 1
      osd .osd.tmp #l0 "i" #l1 &sub #l0 1 "set-variable .change-charset-us.n @#"
    !done
  !else
    set-variable $result &rep &lget .list &add .n 1 "\H" ""
  !endif
!emacro
set-variable .change-charset-us.list "|Preser\Hve or change to |\HPreserve or remove|\HChange to |\HRemove|"

-1 osd .osd.charset
osd .osd.charset 0   "batcDIHs" 3 6 52 0 -1 -1 620 630 .scheme.osd-title "Character Set Change"
osd .osd.charset 10  ""
osd .osd.charset 20  "Sfh" "  Change \HFrom: " 30
osd .osd.charset 32  "BdxfHR" .scheme.osd-ebtt &mid $window-chars 10 1 30
osd .osd.charset 40  ""
osd .osd.charset 50  "Sfh" "           \HTo: " 60
osd .osd.charset 62  "BdxfHR" .scheme.osd-ebtt &mid $window-chars 10 1 60
osd .osd.charset 70  ""
osd .osd.charset 80  "Sfh" "  \HUnsupported: " 90
osd .osd.charset 90  "OtxmsfhHzR" .scheme.osd-entry 32 1 "" .osd.tmp change-charset-us
osd .osd.charset 92  "BdxfHR" .scheme.osd-ebtt &mid $window-chars 10 1 90
osd .osd.charset 600 ""
osd .osd.charset 610 ""
osd .osd.charset 620 "BthrfH" .scheme.osd-ebtt " C\Honvert " f void
osd .osd.charset 625 "hf" "  "
osd .osd.charset 630 "BthrfH" .scheme.osd-ebtt " \HCancel "  0 void
osd .osd.charset 640 "f" "  "

; Get a list of display char sets
0 execute-file "charset"
set-variable #l0 &lfind .change-font.cs-id &reg &spr "/history/%s/char-set" %platform "iso8859-1"
#l0 change-charset-set
&bor 0x10000 #l0 change-charset-set
