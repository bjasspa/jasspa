; -!- emf -!-
; This is part of the JASSPA MicroEmacs macro files
; Copyright (C) 1995-2023 JASSPA (www.jasspa.com)
; See the file me.emf for copying and conditions.
;
; Synopsis:    Password & random string utilites
; Authors:     Jon Green & Steven Phillips
;
; Convert a string of characters to the phonic alphabet.
; Typically used to convert a password into a unambiguous string.
define-macro password-to-phonic
  !force set-variable #l0 @1
  !iif &not $status  set-variable #l0 @ml0 "Enter password"
  set-variable #l1 0
  !while &set #l2 &atoi &mid #l0 &pinc #l1 1 1
    !iif &gre #l1 1 insert-string " - "
    !if &les #l2 32
      insert-string &cat "Control-" &itoa &add #l2 64
    !elif &les #l2 127
      insert-string &lget "|Space|Exclamation-mark|Quotation-mark|Hash-mark|Dollar-sign|Percent-sign|Ampersand|Apostrophe|Left-parenthesis|Right-paranthesis|Astrisk|Plus-sign|Comma|Hyphen|Period|Forward-slash|Zero|One|Two|Three|Four|Five|Six|Seven|Eight|Nine|Colon|Semicolon|Less-than|Equals-sign|Greater-than|Question-mark|Commercial-at-sign|ALPHA|BRAVO|CHARLIE|DELTA|ECHO|FOXTROT|GOLF|HOTEL|INDIA|JULIET|KILO|LIMA|MIKE|NOVEMBER|OSCAR|PAPA|QUEBEC|ROMEO|SIERRA|TANGO|UNIFORM|VICTOR|WHISKY|X-RAY|YANKEE|ZULU|Left-square-bracket|Backslash|Right-square-bracket|Caret|Underscore|Grave-accent|alpha|bravo|charlie|delta|echo|foxtrot|golf|hotel|india|juliet|kilo|lima|mike|november|oscar|papa|quebec|romeo|sierra|tango|uniform|victor|whisky|x-ray|yankee|zulu|Left-curly-brace|Vertical-bar|Right-curly-brace|Tilde|" &sub #l2 31
    !else
      insert-string &spr "UNKNOWN-CHAR-0x%x" #l2
    !endif
  !done
!emacro

define-macro generate-password
  !if @?
    set-variable #l1 &band @# 255
    set-variable @# &bxo @# #l1
  !else
    set-variable @# 0
    !force set-variable #l1 @1
    !iif &not $status set-variable #l1 @ml1 "Length" &band .lst 255
  !endif
  !iif &or &les #l1 2 &gre #l1 255  -8 ml-write &spr "[Password Error: Invalid length '%s', must be: 2 <= len <= 255]" #l1
  !if &not @#
    !if @?
      !force set-variable #l3 @1
    !else
      !force set-variable #l3 @2
    !endif
    !if &not $status
      set-variable #l2 ""
      set-variable #l3 &div .lst 256
      set-variable #l4 1
      set-variable #l5 -1
      !while &len &set #l6 &mid "whdlu!bseD" &inc #l5 1 1
        !iif &band #l4 #l3  set-variable #l2 &cat #l2 #l6
        set-variable #l4 &mul #l4 2
      !done
      set-variable #l3 @ml1 "Flags (whdlu!bseDN)" #l2
    !endif
    set-variable #l2 0
    set-variable #l4 1
    set-variable #l5 -1
    !while &len &set #l6 &mid "whdlu!bseDN" &inc #l5 1 1
      !iif &sin #l6 #l3  set-variable #l2 &add #l2 #l4
      set-variable #l4 &mul #l4 2
    !done
  !endif
  !if &and &band #l2 2 &band #l2 &bnot 1554
    -8 ml-write &spr "[Password Error: Cannot use hex (h) flag with any other]"
  !elif &band #l2 1
    !iif &band #l2 8  -8 ml-write &spr "[Password Error: Cannot use word (w) flag with lowercase (l) flag]"
  !elif &band #l2 512
    -8 ml-write &spr "[Password Error: Cannot use dictionary (D) flag with non-word based password]"
  !endif
  !if &band #l2 1024
  !elif &sub .lst &set #l9 &bor #l1 &mul #l2 256
    !force set-registry "/history/gen-passwd" &set .lst #l9
    !force mark-registry "/history" "u"
  !endif
  set-variable #l9 &cond &band #l2 128 " " ""
  !iif &band #l2 32  set-variable #l9 &cat #l9 "!\"#$%&'*+,-./:;=?@\\^_`|~"
  !iif &band #l2 64  set-variable #l9 &cat #l9 "()<>[]{}"
  !if &band #l2 1
    !if &not &band #l2 512
      set-position "\x82"
      !force find-buffer "*gpwl-tmp*"
      !if &les $window-eline 3
        !force 0 delete-buffer "*gpwl-tmp*"
        find-buffer "*gpwl-tmp*"
        insert-file &find "password" ".lst"
        1 buffer-mode "hide"
      !endif
      beginning-of-buffer
      !if &les &set #l6 &add @wl 0 100
        goto-position "\x82"
        -8 ml-write "[Password Error: Failed to load password word list]"
      !endif
    !elif &not &set #l6 &lget .wlc 2
      spell-rules-init
      set-variable #l6 0
      set-variable $find-words "\\l\\{4,9\\}"
      !while &not &seq $find-words ""
        set-variable #l6 &add #l6 1
      !done
      !iif &les #l6 100  -8 ml-write &spr "[Password Error: Not enough words of length 4 to 9 in current dictionary, setup spelling, or don't use word (w) or dictionary (D) flag]" #l5
      set-variable .wlc &lset .wlc 2 #l6
    !endif
    !iif &seq #l9 ""  set-variable #l9 "-"
    !repeat
      set-variable #l4 ""
      set-variable #l3 #l1
      !while &pdec #l3 1
        ;set-variable $debug 2
        set-variable #l8 &mod &div $random 0x80 #l6
        !if &band #l2 512
          set-variable $find-words "\\l\\{4,9\\}"
          !while &not &seq &set #l7 $find-words ""
          !until &les &dec #l8 1 0
        !else
          goto-line &add 1 &div #l8 100
          &mod #l8 100 search-buffer "Me" " "
          set-mark
          forward-word
          copy-region
          set-variable #l7 @y
          -1 yank
        !endif
        !if &band #l2 16
          !iif &equ 0x2000 &band 0x2000 $random  set-variable #l7 &cat &sup &lef #l7 1 &rig #l7 1
          !iif &equ 0x400 &band 0x600 $random  set-variable #l7 &cat &lef #l7 -1 &sup &rig #l7 -1
        !endif
        !iif &len #l4  set-variable #l4 &cat #l4 &mid #l9 &mod &div $random 0x800 &len #l9 1
        set-variable #l4 &cat #l4 #l7
      !done
      !if &not &band #l2 256
      !elif &and &band #l2 16 &not &xseq #l4 ".*[A-Z].*"
        set-variable #l4 ""
      !endif 
    !until &len #l4
    !iif &band #l2 4  set-variable #l4 &spr "%s%02d" #l4 &mod &div $random 0x800 100
    !iif &equ 1 &band #l2 513  goto-position "\x82"
    ;ml-write &spr "Len %d -> %s" #l1 #l4
    set-variable $result #l4
  !else
    !if &band #l2 2
      set-variable #l9 &cond &band #l2 16 "0123456789ABCDEF" "0123456789abcdef"
    !else
      !iif &band #l2 4   set-variable #l9 &cat #l9 "0123456789"
      !iif &band #l2 8   set-variable #l9 &cat #l9 "abcdefghijklmnopqrstuvwxyz"
      !iif &band #l2 16  set-variable #l9 &cat #l9 "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    !endif
    set-variable #l8 &len #l9
    set-variable #l4 ""
    !repeat
      set-variable #l3 #l1
      !repeat
        set-variable #l4 &cat #l4 &mid #l9 &mod &div $random 0x800 #l8 1
      !until &not &dec #l3 1
      !if &band #l2 256
        ; Test quality of password, must be comprised of lowercase, uppercase
        ; and numeric. 
        !if &and &band #l2 4 &not &xseq #l4 ".*[0-9].*"
          set-variable #l4 ""
        !elif &and &band #l2 8 &not &xseq #l4 ".*[a-z].*"
          set-variable #l4 ""
        !elif &and &band #l2 16 &not &xseq #l4 ".*[A-Z].*"
          set-variable #l4 ""
        !elif &and &band #l2 224 &not &xseq #l4 ".*[ -/:-@[-`{-~].*"
          set-variable #l4 ""
        !endif
      !endif
    !until &len #l4
    set-variable $result #l4
  !endif
!emacro

define-macro insert-password
  !if &band @# 1
    generate-password @1 @2
  !else
    .generate-password.lst generate-password
  !endif
  insert-string &set #l1 $result
  !if &band @# 2
  !elif &band .generate-password.lst 768
    ; don't do phonetic for word or hex passwords
  !elif &band .generate-password.lst 30720
    ; don't do phonetic if only numbers and spaces
    insert-string " ("
    password-to-phonic #l1
    insert-string ")"
  !endif
!emacro

set-variable .generate-password.lst &reg "/history/gen-passwd" 97288
set-variable .generate-password.wlc "|0|0|"
