; -!- emf -!-
;
; Copyright (C) 1999-2023 JASSPA (www.jasspa.com)
;
; This is part of JASSPA's MicroEmacs, see the LICENSE file for licensing and
; copying information.
;
; Synopsis:    Misc. macros commonly used by other macros.
; Authors:     Steven Phillips & Jon Green
;
; frame-handle
; gets another key from user to determine the frame command
0 define-macro frame-handle
  set-variable #l1 @cck
  !iif @?  set-variable #l1 &spr "Arg %d: %s" @# #l1
  !force set-variable #l0 @mc2 #l1
  !iif &not &set #l1 &lfind .key #l0  -8 ml-write "[Frame key not bound]"
  !iif &and &seq &set #l3 &lget .n #l1 "" @?  set-variable #l3 @#
  execute-line &spr "%s %s @mna" #l3 &lget .cmd #l1
!emacro
set-variable .frame-handle.key "|0|1|2|o|"
set-variable .frame-handle.n   "||1|||"
set-variable .frame-handle.cmd "|delete-frame|create-frame|create-frame|next-frame|"
; ascii-time
; Get the time as an ASCII string. Return in #p9,
0 define-macro ascii-time
  set-variable #l0 &rep &set #l4 $time " " "0"
  !force set-variable #l5 @1
  !iif &not $status  set-variable #l5 %ascii-time
  !if &seq #l5 "ERROR"
    ; Default - Use ISO format: "%Y-%m-%d %H:%M:%S" 
    set-variable #p9 &spr "%s-%s-%s %s:%s:%s" &lef #l0 4 &mid #l0 7 2 &mid #l0 9 2 &mid #l0 12 2 &mid #l0 14 2 &mid #l0 16 2
  !else
    ; Get Day of week & month labels.
    set-variable #l1 &lget .spell.days &add &mid #l4 11 1 1
    set-variable #l2 &lget .spell.months &mid #l4 7 2
    set-variable #l3 &rep &rep &rep &rep &rep &rep &rep &rep &rep &rep &rep &rep #l5 "%%" "\b" "%A" #l1 "%a" &lef #l1 3 "%B" #l2 "%b" &lef #l2 3 "%e" &mid #l4 9 2 "%i" &trl &mid #l4 9 2 "%k" &trl &mid #l4 12 2 "%J" &trl &mid #l4 4 3 "%o" &trl &mid #l4 7 2 "%N" &trl &mid #l4 14 2 "%v" &trl &mid #l4 16 2
    set-variable #p9 &rep &rep &rep &rep &rep &rep &rep &rep &rep &rep #l3 "%d" &mid #l0 9 2 "%H" &mid #l0 12 2 "%j" &mid #l0 4 3 "%m" &mid #l0 7 2 "%M" &mid #l0 14 2 "%S" &mid #l0 16 2 "%w" &mid #l0 11 1 "%y" &mid #l0 2 2 "%Y" &lef #l0 4 "\b" "%"
  !endif
!emacro

; convert a string to a regex compliant search string
0 define-macro str-to-regex
  set-variable @1 &xrep @1 "[\\\\[*+.?^$]" "\\\\\\0"
!emacro

; convert a string to a regex compliant search string
0 define-macro filemask-to-regex
  set-variable #l9 @1
  set-variable #l2 0
  !while &not &seq "" &set #l3 &mid #l9 #l2 1
    !if &seq #l3 "*"
      set-variable #l9 &spr "%s.%s" &lef #l9 #l2 &rig #l9 #l2
      set-variable #l2 &add #l2 2
    !elif &seq #l3 "?"
      set-variable #l9 &spr "%s.%s" &lef #l9 #l2 &rig #l9 &add #l2 1
      set-variable #l2 &add #l2 1
    !elif &seq #l3 "["
      set-variable #l2 &add #l2 &add 2 &sin "]" &rig #l9 &add #l2 2
    !elif &sin #l3 "\\+.$^"
      set-variable #l9 &spr "%s\\%s" &lef #l9 #l2 &rig #l9 #l2
      set-variable #l2 &add #l2 2
    !else
      set-variable #l2 &add #l2 1
    !endif
  !done
  set-variable @1 #l9
!emacro

; Add given value to parent macro's history registry
0 define-macro macro-history-add
  !force set-variable #l2 @2
  !iif &not $status  set-variable #l2 @p
  set-variable #l3 &reg &cat "/mac-hist/" #l2 "\b"
  !iif &set #l0 &lfi #l3 &set #l1 @1  set-variable #l3 &lde #l3 #l0
  set-registry &cat "/mac-hist/" #l2 &lins &lde #l3 20 0 #l1
!emacro

; copy-registry <from> <to>
; copy <from> and its children to <to>
0 define-macro copy-registry
  set-variable #l0 @1
  set-variable #l1 @2
  set-variable #l2 &reg #l0 ""
  set-registry #l1 #l2
  mark-registry #l0 "g"
  mark-registry #l1 $result
  set-variable #l3 0
  !while 1
    !force find-registry #l0 &pinc #l3 1
    !iif &not $status  !return
    set-variable #l2 $result
    copy-registry &spr "%s/%s" #l0 #l2 &spr "%s/%s" #l1 #l2
  !done
!emacro

; create-file-path <file>
; given a file name <path>/<basename> create the <path>
0 define-macro create-file-path
  set-variable #l0 @1
  set-variable #l1 0
  !while &set #l2 &sin "/" &rig #l0 #l1
    set-variable #l1 &add #l1 #l2
    set-variable #l2 &lef #l0 &sub #l1 1
    !if &and &band $system 0x100 &les #l1 4 
    !elif &seq &stat "t" #l2 "X"
      !force 0x100 file-op &cat "file:" #l2
    !endif
  !done
!emacro

0 define-macro reread-settings
  !force read-registry "/history" $user-name "cbr"
  !if &not &sin "tfs://" &set #l0 &reg "/history" ""
    !if &seq $user-path $home
      !iif &band @# 2  -8 ml-write "[Error: Cannot save settings - run new-user first]"
      ml-write "[Warning: Cannot save settings - run new-user first to make permanent changes]"
    !endif
  !elif &not &sin "tfs://" $user-path
    set-registry "/history" &rep #l0 "tfs://" $user-path
  !elif &band @# 2
    -8 ml-write "[Error: Cannot save settings - run init-session first]"
  !elif &band @# 1
    ml-write "[Warning: Cannot save settings - run init-session first to make permanent changes]"
  !endif
!emacro
; macros to allow return or mouse click in buffer to go to next line 
0 define-macro return-get-next-line
  !force backward-line
  get-next-line
!emacro
0 define-macro mouse-get-next-line
  set-cursor-to-mouse
  !force backward-line
  get-next-line
!emacro
