; -!- emf -!-
; This is part of the JASSPA MicroEmacs macro files
; Copyright (C) 1999-2009 JASSPA (www.jasspa.com)
; See the file me.emf for copying and conditions.
;
; Synopsis:    emf hook - invoked when a MicroEmacs macro file is loaded.
; Authors:     Steven Phillips
;
set-char-mask "2" "-$&#!%:@."

define-macro fhook-emf
  set-variable $buffer-mask "luh12"
  @# buffer-init "emf"
  buffer-init-hooks
!emacro

; buffer-init variables
set-variable .fhook-emf.name "MicroEmacs Macro"
set-variable .fhook-emf.setup &reg "/history/fhook/emf" "bdfghnopx"
set-variable .fhook-emf.setup-mask "abdefghikmnoptux"
set-variable .fhook-emf.tags "emftags"
set-variable .fhook-emf.comment "|;||;|; | ;|r|"
set-variable .fhook-emf.command-flag  "|th|thbo|b|"
set-variable .fhook-emf.command-name  "|expand-abbrev-handle|emf-quote-command|emf-quote-command|"
set-variable .fhook-emf.command-nbind "||||"
set-variable .fhook-emf.command-kbind "||A-q|C-c C-q|"
set-variable .fhook-emf.command-desc  "|Complete co\Hmmand|\HQuote command||"

; setup emf collapsing
set-variable .fhook-emf.collapse-open  "^0? ?define-macro[ \t]"
set-variable .fhook-emf.collapse-close "^!emacro"
set-variable .fhook-emf.collapse-mclose "1"
set-variable .fhook-emf.collapse-mnext "-1"

; setup item-list
set-variable .fhook-emf.item-list-s1 "^[ \t]*[0-9]*[ \t]*define-macro[ \t]+\\(\\w+\\)"
set-variable .fhook-emf.item-list-r1 "Macr \ecB\\1\ecA"

!if &not &exist .hilight.emf
  set-variable .hilight.emf &pinc .hilight.next 1
  set-variable .hilight.emfh &pinc .hilight.next 1
!endif
!if &and &sin "h" .fhook-emf.setup &band .hilight.flags 0x02
  0 hilight .hilight.emf 2 150  $global-scheme
  !if &band .hilight.flags 0x04
    hilight .hilight.emf 0x80 "define-help\\s+\\w.*" .hilight.emfh .scheme.function
    hilight .hilight.emf 0x80 "define-help\\s+\"\\w.*" .hilight.emfh .scheme.function
    hilight .hilight.emf 1  "define-macro\\s+\\w+" .scheme.function
    hilight .hilight.emf 0  "define-macro-file.*" .scheme.function
  !else
    hilight .hilight.emf 0x80  "define-help" .hilight.emfh .scheme.function
  !endif
  hilight .hilight.emf 4  "\"" "\"" "\\"            .scheme.string
  hilight .hilight.emf 0  ";.*"                     .scheme.comment
  hilight .hilight.emf 0  ";\\s*[tT][oO][dD][oO].*" .scheme.error
  hilight .hilight.emf 4  "!"   "\\}\\W" ""         .scheme.keyword
  hilight .hilight.emf 4  "!ema"   "\\}\\W" ""      .scheme.function
  hilight .hilight.emf 4  "&"   "\\}\\W" ""         .scheme.operator
  hilight .hilight.emf 4  "\\." "\\}\\W" ""         .scheme.variable
  hilight .hilight.emf 4  "%"   "\\}\\W" ""         .scheme.variable
  hilight .hilight.emf 4  ":"   "\\}\\W" ""         .scheme.variable
  hilight .hilight.emf 4  "\\$" "\\}\\W" ""         .scheme.variable
  hilight .hilight.emf 4  "@"   "\\}\\s" ""         .scheme.variable
  hilight .hilight.emf 1  "#[gpl][[:digit:]]"       .scheme.variable
  hilight .hilight.emf 0  "^*\\w+"                  .scheme.link
  !if &band .hilight.flags 0x08
    ; hilight constants, e.g. numbers
    hilight .hilight.emf 1 "[[:digit:]]+"           .scheme.constant
    hilight .hilight.emf 1 "-[[:digit:]]+"          .scheme.constant
    hilight .hilight.emf 1 "0[xX][[:xdigit:]]+"     .scheme.constant
  !endif
  0 hilight .hilight.emfh 0  $global-scheme
  hilight .hilight.emfh 0 "l[ems]"     .scheme.link
  hilight .hilight.emfh 0 "c\\u"       .scheme.hide
  hilight .hilight.emfh 0x80 "!ehel?p?" .hilight.emf .scheme.function
  !iif &not &exi ".hilight.md"  !force execute-file "hkmd"
  hilight .hilight.emfh 0x180 "<!---? ?md[^-]*-->" .hilight.md .scheme.comment
  hilight .hilight.emfh 0x180 "#+ \\w.*" .hilight.md .scheme.header
  hilight .hilight.md 0x80 "!ehel?p?"   .hilight.emf .scheme.function
!endif
!if &sin "d" .fhook-emf.setup
  0 indent  .hilight.emf 0 10
  indent .hilight.emf N "define-macro" t
  indent .hilight.emf n "!if" t
  indent .hilight.emf s "!eli" -t
  indent .hilight.emf s "!els" -t
  indent .hilight.emf o "!end" -t
  indent .hilight.emf n "!whi" t
  indent .hilight.emf o "!don" -t
  indent .hilight.emf n "!rep" t
  indent .hilight.emf o "!unt" -t
  indent .hilight.emf o "!ema" -t
  indent .hilight.emf e "\"" "\"" "\\"
  indent .hilight.emf i ";"
  indent .hilight.emf f "*" 0
!endif

0 define-macro emf-expand-abbrev
  set-variable #l0 $window-col
  backward-char
  !if &inw @wc
    forward-char
    backward-word
  !else
    forward-char
  !endif
  set-mark
  set-variable #l1 &mid @wl $window-col &sub #l0 $window-col
  set-variable $window-col #l0
  !if &sin &lef #l1 1 "$%:"
    !force set-variable #l1 @ml66 "Variable" #l1
  !elif &seq &lef #l1 1 "!"
    !force set-variable #l1 @ml69 "Directive" #l1 .dirc-list
  !elif &seq &lef #l1 1 "&"
    !force set-variable #l1 @ml69 "Operator" #l1 .oper-list
  !else
    !force set-variable #l1 @ml63 "Command" #l1
  !endif
  !if $status
    -1 kill-region
    insert-string #l1
  !endif
!emacro
set-variable .emf-expand-abbrev.dirc-list "|!abort|!bell|!break|!cont|!done|!ehelp|!elif|!else|!emacro|!endif|!force|!goto|!if|!iif|!jump|!nma|!repeat|!return|!tgoto|!tjump|!until|!while|"
set-variable .emf-expand-abbrev.oper-list "|&abs|&add|&and|&ato|&ban|&bmo|&bno|&bor|&bst|&bxo|&cat|&cbi|&con|&dec|&div|&equ|&exi|&fab|&fad|&fdi|&fin|&fmu|&fsq|&fsu|&gmo|&gre|&inc|&ind|&inw|&ire|&ise|&isi|&ito|&kbi|&lde|&lef|&len|&les|&lfi|&lge|&lin|&lle|&lse|&mid|&mod|&mul|&nbi|&nbm|&neg|&not|&opt|&or|&pde|&pin|&reg|&rep|&rig|&ris|&rsi|&seq|&set|&sgr|&sin|&sle|&slo|&spr|&sta|&sub|&sup|&trb|&trl|&trr|&uci|&ufi|&uni|&whi|&xir|&xis|&xre|&xse|"

define-macro emf-quote-command
  ml-write "Quote command: "
  @# insert-string @cg
!emacro

buffer-init-fhook "emf"
