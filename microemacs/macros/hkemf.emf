;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; emf hook - This file is invoked when a MicroEmacs macro file is loaded.
;
; Last Modified : <001203.1708>
; Copyright (c) 1999 JASSPA.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; buffer-setup flags
set-variable #l0 &reg "/history" "fhook/emf" "abfhnopx"
set-variable #l1 "abefhimnoptux"
set-char-mask "2" "-$&#!%:@."

!if &not &exist .hilight.emf
    set-variable .hilight.emf &pinc .hilight.next 1
!endif
!if &and &sin "h" #l0 &band .hilight.flags 0x02 
    0 hilight .hilight.emf 0                        $global-scheme
    !if &band .hilight.flags 0x04
        hilight .hilight.emf 1  "define-help\\s +\\w+"  .scheme.function
        hilight .hilight.emf 1  "define-macro\\s +\\w+" .scheme.function
        hilight .hilight.emf 0  "define-macro-file.*" .scheme.function
    !endif
    hilight .hilight.emf 4  "\"" "\"" "\\"          .scheme.string
    hilight .hilight.emf 0  ";.*"                   .scheme.comment
    hilight .hilight.emf 4  "!"   "\\}\\W" ""       .scheme.keyword
    hilight .hilight.emf 4  "&"   "\\}\\W" ""       .scheme.operator
    hilight .hilight.emf 4  "\\." "\\}\\W" ""       .scheme.variable
    hilight .hilight.emf 4  "%"   "\\}\\W" ""       .scheme.variable
    hilight .hilight.emf 4  ":"   "\\}\\W" ""       .scheme.variable
    hilight .hilight.emf 4  "\\$" "\\}\\W" ""       .scheme.variable
    hilight .hilight.emf 4  "@"   "\\}\\s " ""      .scheme.variable
    hilight .hilight.emf 1  "#[gpl][[:digit:]]"     .scheme.variable
    hilight .hilight.emf 0  "^*\\w+"                .scheme.link
    !if &band .hilight.flags 0x08
        ; hilight constants, e.g. numbers
        hilight .hilight.emf 1 "[[:digit:]]+"       .scheme.constant
        hilight .hilight.emf 1 "-[[:digit:]]+"      .scheme.constant
        hilight .hilight.emf 1 "0[xX][[:xdigit:]]+" .scheme.constant
    !endif
!endif
!if &sin "a" #l0
    0 indent  .hilight.emf 0 10
    indent .hilight.emf N "define-macro" 4
    indent .hilight.emf n "!if" 4
    indent .hilight.emf s "!eli" -4
    indent .hilight.emf s "!els" -4
    indent .hilight.emf o "!end" -4
    indent .hilight.emf n "!whi" 4
    indent .hilight.emf o "!don" -4
    indent .hilight.emf n "!rep" 4
    indent .hilight.emf o "!until" -4
    indent .hilight.emf o "!ema" -4
    indent .hilight.emf e "\"" "\"" "\\"
    indent .hilight.emf i ";"
    indent .hilight.emf f "*" 0
!endif

define-macro emf-comment-line
    !while &gre &pdec @# 1 0
        beginning-of-line
        insert-string ";"
        beginning-of-line
        forward-line
    !done
!emacro
;
; uncoment line ie ;xxx -> xxx
define-macro emf-uncomment-line
    beginning-of-line
    !while &gre &pdec @# 1 0
        !force -1 search-forward ";"
        !if $status
            backward-delete-char
        !endif
        forward-line
        beginning-of-line
    !done
!emacro

define-macro emf-expand-abbrev
    set-variable #l0 $window-col
    backward-char
    !if &inw @wc
        forward-char
        backward-word
    !else
        forward-char
    !endif
    set-mark
    set-variable #l1 &mid @wl $window-col &sub #l0 $window-col
    set-variable $window-col #l0
    !if &sin &lef #l1 1 "$%:"
        !force set-variable #l1 @ml66 "Variable" #l1
    !elif &seq &lef #l1 1 "!"
        !force set-variable #l1 @ml69 "Directive" #l1 .dirc-list
    !else
        !force set-variable #l1 @ml63 "Command" #l1
    !endif
    !if $status
        kill-region
        -1 yank
        insert-string #l1
    !endif
!emacro

define-macro emf-quote-command
    ml-write "Quote command: "
    @# insert-string @cg
!emacro

!if &sin "o" #l0
    !if &not &exist .osd.emf-tool
        set-variable .osd.emf-tool &pinc .osd.next 1
    !endif
    osd .osd.emf-tool 0  "b"
    osd .osd.emf-tool 1  ""  "Emf tool &help    esc h"   .osd.emf-help osd
    osd .osd.emf-tool 2  ""  "&Restyle region   A-C-i"   f restyle-region
    osd .osd.emf-tool 3  ""  "Complete co&mmand esc esc" f emf-expand-abbrev
    osd .osd.emf-tool 4  ""  "&Quote command    A-q"     f emf-quote-command
    osd .osd.emf-tool 5  "-"
    osd .osd.emf-tool 6  ""  "&Comment line     C-c C-c" f emf-comment-line
    osd .osd.emf-tool 7  ""  "&Uncomment line   C-c C-d" f emf-uncomment-line
    osd .osd.emf-tool 11 "-"
    osd .osd.emf-tool 18 "i" "Create &tags file"         f "generate-tags-file emftags"
    0 define-macro osd-ohook-emf
        osd 7 1 "Md" "Emf &Tools" .osd.emf-tool
        osd 7 2 "-"
    !emacro
    0 define-macro osd-chook-emf
        osd 7 1  "D"
        osd 7 2  "D"
    !emacro
!endif
!if &sin "p" #l0
    !if &not &exist .osd.emf-help
        set-variable .osd.emf-help &pinc .osd.next 1
    !endif
    osd .osd.emf-help 0  "batcdH" 9 3 99 .scheme.osd-title "Emf Mode Help"
    osd .osd.emf-help 3  "" 
    osd .osd.emf-help 4  ""  "    esc h   - View this help page"
    osd .osd.emf-help 5  "" 
    osd .osd.emf-help 7  ""  "    C-c C-c - Comment out current line"
    osd .osd.emf-help 8  ""  "    C-c C-d - Uncomment current line"
    osd .osd.emf-help 9  "" 
    osd .osd.emf-help 10 ""  "    esc esc - Complete command"
    osd .osd.emf-help 11 ""  "    A-q     - Quote command"
    osd .osd.emf-help 12 ""  "    A-C-i   - Restyle region"
    osd .osd.emf-help 13 "" 
    osd .osd.emf-help 17 ""  " Abbreviation file is set to emf.abr "
    osd .osd.emf-help 18 "" 
    osd .osd.emf-help 99 "BcfH" .scheme.osd-ebtt "  &OK  " f void 
!endif

define-macro fhook-emf
    ; if arg is 0 this is a new file so add template 
    !if &not @#
        etfinsrt "emf" .fhook-emf.setup
    !endif
    set-variable $buffer-mask "luh12"
    buffer-modes-init .fhook-emf.setup
    !if &and &sin "h" .fhook-emf.setup &band .hilight.flags 0x02 
        set-variable $buffer-hilight .hilight.emf
    !endif
    !if &sin "a" .fhook-emf.setup
        set-variable $buffer-indent .hilight.emf
    !endif
    !if &sin "b" .fhook-emf.setup
        buffer-abbrev-file "emf"
    !endif
    fold-init .fhook-emf.setup
    ; Bind macros
    !if &sin "p" .fhook-emf.setup 
        .osd.emf-help buffer-bind-key osd "esc h"
    !endif
    buffer-bind-key emf-quote-command "A-q"
    buffer-bind-unbound-key emf-comment-line "C-c C-c"
    buffer-bind-unbound-key emf-uncomment-line "C-c C-d"
    buffer-bind-unbound-key emf-quote-command "C-c C-q"
    buffer-bind-unbound-key restyle-region "A-C-i"
    ; execute user extensions if enabled
    !if &exist my-fhook-emf
        my-fhook-emf
    !endif
!emacro
set-variable .fhook-emf.setup #l0
set-variable .fhook-emf.setup-mask #l1

; setup emf variables
set-variable .fhook-emf.fold-open  "^0? ?define-macro"
set-variable .fhook-emf.fold-close "^!emacro"
set-variable .fhook-emf.fold-mopen "1"
set-variable .emf-expand-abbrev.dirc-list "|!abort|!bell|!cont|!done|!ehelp|!elif|!else|!emacro|!endif|!force|!goto|!if|!nma|!repeat|!return|!until|!while|"

ml-write "[MicroEmacs emf file hook loaded]"

; load in user extensions if found
!force execute-file "myemf"
