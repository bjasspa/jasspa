; -!- emf -!-
; This is part of the JASSPA MicroEmacs macro files
; Copyright (C) 1999-2004 JASSPA (www.jasspa.com)
; See the file me.emf for copying and conditions.
;
; Synopsis:    emf hook - invoked when a MicroEmacs macro file is loaded.
; Authors:     Steven Phillips
;
set-char-mask "2" "-$&#!%:@."

define-macro fhook-emf
    set-variable $buffer-mask "luh12"
    @# buffer-init "emf"
    buffer-init-hooks
!emacro

; buffer-init variables
set-variable .fhook-emf.name "ME Macro"
set-variable .fhook-emf.setup &reg "/history" "fhook/emf" "bdfghnopx"
set-variable .fhook-emf.setup-mask "abdefghikmnoptux"
set-variable .fhook-emf.tags "emftags"
set-variable .fhook-emf.comment "|;||;|; | ;||"
set-variable .fhook-emf.command-flag  "|th|thbo|b|bo|bo|"
set-variable .fhook-emf.command-name  "|expand-abbrev-handle|emf-quote-command|emf-quote-command|comment-restyle|comment-restyle|"
set-variable .fhook-emf.command-nbind "||||||"
set-variable .fhook-emf.command-kbind "||A-q|C-c C-q|esc q|esc o|"
set-variable .fhook-emf.command-desc  "|Complete co\Hmmand|\HQuote command||||"

; setup emf collapsing
set-variable .fhook-emf.collapse-open  "^0? ?define-macro[ \t]"
set-variable .fhook-emf.collapse-close "^!emacro"
set-variable .fhook-emf.collapse-mclose "1"
set-variable .fhook-emf.collapse-mnext "-1"

; setup item-list
set-variable .fhook-emf.item-list-s1 "^[ \t]*[0-9]*[ \t]*define-macro[ \t]+\\(\\w+\\)"
set-variable .fhook-emf.item-list-r1 "Macr \ecB\\1\ecA"

!if &not &exist .hilight.emf
    set-variable .hilight.emf &pinc .hilight.next 1
!endif
!if &and &sin "h" .fhook-emf.setup &band .hilight.flags 0x02 
    0 hilight .hilight.emf 0                        $global-scheme
    !if &band .hilight.flags 0x04
        hilight .hilight.emf 1  "define-help\\s +\\w+"  .scheme.function
        hilight .hilight.emf 1  "define-macro\\s +\\w+" .scheme.function
        hilight .hilight.emf 0  "define-macro-file.*" .scheme.function
    !endif
    hilight .hilight.emf 4  "\"" "\"" "\\"          .scheme.string
    hilight .hilight.emf 0  ";.*"                   .scheme.comment
    hilight .hilight.emf 4  "!"   "\\}\\W" ""       .scheme.keyword
    hilight .hilight.emf 4  "&"   "\\}\\W" ""       .scheme.operator
    hilight .hilight.emf 4  "\\." "\\}\\W" ""       .scheme.variable
    hilight .hilight.emf 4  "%"   "\\}\\W" ""       .scheme.variable
    hilight .hilight.emf 4  ":"   "\\}\\W" ""       .scheme.variable
    hilight .hilight.emf 4  "\\$" "\\}\\W" ""       .scheme.variable
    hilight .hilight.emf 4  "@"   "\\}\\s " ""      .scheme.variable
    hilight .hilight.emf 1  "#[gpl][[:digit:]]"     .scheme.variable
    hilight .hilight.emf 0  "^*\\w+"                .scheme.link
    !if &band .hilight.flags 0x08
        ; hilight constants, e.g. numbers
        hilight .hilight.emf 1 "[[:digit:]]+"       .scheme.constant
        hilight .hilight.emf 1 "-[[:digit:]]+"      .scheme.constant
        hilight .hilight.emf 1 "0[xX][[:xdigit:]]+" .scheme.constant
    !endif
!endif
!if &sin "d" .fhook-emf.setup
    0 indent  .hilight.emf 0 10
    indent .hilight.emf N "define-macro" 4
    indent .hilight.emf n "!if" 4
    indent .hilight.emf s "!eli" -4
    indent .hilight.emf s "!els" -4
    indent .hilight.emf o "!end" -4
    indent .hilight.emf n "!whi" 4
    indent .hilight.emf o "!don" -4
    indent .hilight.emf n "!rep" 4
    indent .hilight.emf o "!until" -4
    indent .hilight.emf o "!ema" -4
    indent .hilight.emf e "\"" "\"" "\\"
    indent .hilight.emf i ";"
    indent .hilight.emf f "*" 0
!endif

0 define-macro emf-expand-abbrev
    set-variable #l0 $window-col
    backward-char
    !if &inw @wc
        forward-char
        backward-word
    !else
        forward-char
    !endif
    set-mark
    set-variable #l1 &mid @wl $window-col &sub #l0 $window-col
    set-variable $window-col #l0
    !if &sin &lef #l1 1 "$%:"
        !force set-variable #l1 @ml66 "Variable" #l1
    !elif &seq &lef #l1 1 "!"
        !force set-variable #l1 @ml69 "Directive" #l1 .dirc-list
    !else
        !force set-variable #l1 @ml63 "Command" #l1
    !endif
    !if $status
        -1 kill-region
        insert-string #l1
    !endif
!emacro
set-variable .emf-expand-abbrev.dirc-list "|!abort|!bell|!cont|!done|!ehelp|!elif|!else|!emacro|!endif|!force|!goto|!if|!jump|!nma|!repeat|!return|!tgoto|!tjump|!until|!while|"

define-macro emf-quote-command
    ml-write "Quote command: "
    @# insert-string @cg
!emacro

buffer-init-fhook "emf"
