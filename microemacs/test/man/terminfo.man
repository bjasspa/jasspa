


tttteeeerrrrmmmmiiiinnnnffffoooo((((4444))))							   tttteeeerrrrmmmmiiiinnnnffffoooo((((4444))))



NNNNAAAAMMMMEEEE
     _tttt_eeee_rrrr_mmmm_iiii_nnnn_ffff_oooo -	terminal capability data base

SSSSYYYYNNNNOOOOPPPPSSSSIIIISSSS
     _////_uuuu_ssss_rrrr_////_ssss_hhhh_aaaa_rrrr_eeee_////_llll_iiii_bbbb_////_tttt_eeee_rrrr_mmmm_iiii_nnnn_ffff_oooo_////_????_////_****

DDDDEEEESSSSCCCCRRRRIIIIPPPPTTTTIIIIOOOONNNN
     _tttt_eeee_rrrr_mmmm_iiii_nnnn_ffff_oooo is a database produced by	_tttt_iiii_cccc that describes the capabilities of
     devices such as terminals and printers.  Devices are described in
     _tttt_eeee_rrrr_mmmm_iiii_nnnn_ffff_oooo source files by specifying a set of capabilities,	by quantifying
     certain aspects of	the device, and	by specifying character	sequences that
     effect particular results.	 This database is often	used by	screen
     oriented applications such	as _vvvv_iiii and _cccc_uuuu_rrrr_ssss_eeee_ssss programs, as well as by some
     UNIX system commands such as _llll_ssss and _mmmm_oooo_rrrr_eeee.	This usage allows them to work
     with a variety of devices without changes to the programs.

     _tttt_eeee_rrrr_mmmm_iiii_nnnn_ffff_oooo source files consist of one or more device descriptions.	Each
     description consists of a header (beginning in column 1) and one or more
     lines that	list the features for that particular device.  Every line in a
     _tttt_eeee_rrrr_mmmm_iiii_nnnn_ffff_oooo source file must end in a	comma (_,,,,).  Every line in a _tttt_eeee_rrrr_mmmm_iiii_nnnn_ffff_oooo
     source file except	the header must	be indented with one or	more white
     spaces (either spaces or tabs).

     Entries in	_tttt_eeee_rrrr_mmmm_iiii_nnnn_ffff_oooo source	files consist of a number of comma-separated
     fields.  White space after	each comma is ignored.	Embedded commas	must
     be	escaped	by using a backslash.  The following example shows the format
     of	a _tttt_eeee_rrrr_mmmm_iiii_nnnn_ffff_oooo source file.
	alias  | alias	| ... |	alias  | _l_o_n_g_n_a_m_e,
	<_w_h_i_t1_e _s_p_a_c_e> 2_aaaa_mmmm_,,,, _llll_iiii_nnnn_eeee_ssss	_####_2222_4444_,,,, n
	<_w_h_i_t_e _s_p_a_c_e> _hhhh_oooo_mmmm_eeee_====_\\\\_EEEE_eeee_hhhh_,,,,
     The first line, commonly referred to as the header	line, must begin in
     column one	and must contain at least two aliases separated	by vertical
     bars.  The	last field in the header line must be the long name of the
     device and	it may contain any string.  Alias names	must be	unique in the
     _tttt_eeee_rrrr_mmmm_iiii_nnnn_ffff_oooo database and they	must conform to	UNIX system file naming
     conventions [see _tttt_iiii_cccc(1M)];	they cannot, for example, contain white	space
     or	slashes.

     Every device must be assigned a name, such	as "vt100".  Device names
     (except the long name) should be chosen using the following conventions.
     The name should not contain hyphens because hyphens are reserved for use
     when adding suffixes that indicate	special	modes.

     These special modes may be	modes that the hardware	can be in, or user
     preferences.  To assign a special mode to a particular device, append a
     suffix consisting of a hyphen and an indicator of the mode	to the device
     name.  For	example, the _----_wwww	suffix means "wide mode"; when specified, it
     allows for	a width	of 132 columns instead of the standard 80 columns.
     Therefore,	if you want to use a vt100 device set to wide mode, name the
     device "vt100-w."	Use the	following suffixes where possible.
	   Suffix		  Meaning		   Example

	   _----_wwww	    Wide mode (more than 80 columns)	   _5555_4444_1111_0000_----_wwww


									PPPPaaaaggggeeee 1111






tttteeeerrrrmmmmiiiinnnnffffoooo((((4444))))							   tttteeeerrrrmmmmiiiinnnnffffoooo((((4444))))



	   _----_aaaa_mmmm	    With auto. margins (usually	default)   _vvvv_tttt_1111_0000_0000_----_aaaa_mmmm
	   _----_nnnn_aaaa_mmmm	    Without automatic margins		   _vvvv_tttt_1111_0000_0000_----_nnnn_aaaa_mmmm
	   -_n	    Number of lines on the screen	   _2222_3333_0000_0000_----_4444_0000
	   _----_nnnn_aaaa	    No arrow keys (leave them in local)	   _cccc_1111_0000_0000_----_nnnn_aaaa
	   -_np	    Number of pages of memory		   _cccc_1111_0000_0000_----_4444_pppp
	   _----_rrrr_vvvv	    Reverse video			   _4444_4444_1111_5555_----_rrrr_vvvv

     The _tttt_eeee_rrrr_mmmm_iiii_nnnn_ffff_oooo reference manual page	is organized in	two sections: "DEVICE
     CAPABILITIES" and "PRINTER	CAPABILITIES."

   PPPPAAAARRRRTTTT	1111:::: DDDDEEEEVVVVIIIICCCCEEEE CCCCAAAAPPPPAAAABBBBIIIILLLLIIIITTTTIIIIEEEESSSS
     Capabilities in _tttt_eeee_rrrr_mmmm_iiii_nnnn_ffff_oooo are of three types: Boolean capabilities (which
     show that a device	has or does not	have a particular feature), numeric
     capabilities (which quantify particular features of a device), and	string
     capabilities (which provide sequences that	can be used to perform
     particular	operations on devices).

     In	the following table, a VVVVaaaarrrriiiiaaaabbbblllleeee	is the name by which a CCCC programmer
     accesses a	capability (at the _tttt_eeee_rrrr_mmmm_iiii_nnnn_ffff_oooo level).  A CCCCaaaappppnnnnaaaammmmeeee is the short
     name for a	capability specified in	the _tttt_eeee_rrrr_mmmm_iiii_nnnn_ffff_oooo source file.  It is used
     by	a person updating the source file and by the _tttt_pppp_uuuu_tttt command.  A TTTTeeeerrrrmmmmccccaaaapppp
     CCCCooooddddeeee is a two-letter sequence that	corresponds to the _tttt_eeee_rrrr_mmmm_cccc_aaaa_pppp capability
     name.  (Note that _tttt_eeee_rrrr_mmmm_cccc_aaaa_pppp is no longer supported.)

     Capability	names have no real length limit, but an	informal limit of five
     characters	has been adopted to keep them short.  Whenever possible,
     capability	names are chosen to be the same	as or similar to those
     specified by the ANSI X3.64-1979 standard.	 Semantics are also intended
     to	match those of the ANSI	standard.

     All string	capabilities listed below may have padding specified, with the
     exception of those	used for input.	 Input capabilities, listed under the
     SSSSttttrrrriiiinnnnggggssss section in	the following tables, have names beginning with	_kkkk_eeee_yyyy_____.
     The _####_iiii symbol in the description field of the following tables refers to
     the _ith parameter.

   BBBBoooooooolllleeeeaaaannnnssss
				Cap-	Termcap
     Variable			name	Code	  Description
















									PPPPaaaaggggeeee 2222










     _aaaa_uuuu_tttt_oooo______llll_eeee_ffff_tttt______mmmm_aaaa_rrrr_gggg_iiii_nnnn		_bbbb_wwww	_bbbb_wwww	  _cccc_uuuu_bbbb_1111 wraps from column 0 to
						  last column
     _aaaa_uuuu_tttt_oooo______rrrr_iiii_gggg_hhhh_tttt______mmmm_aaaa_rrrr_gggg_iiii_nnnn		_aaaa_mmmm	_aaaa_mmmm	  Terminal has automatic margins
     _bbbb_aaaa_cccc_kkkk______cccc_oooo_llll_oooo_rrrr______eeee_rrrr_aaaa_ssss_eeee		_bbbb_cccc_eeee	_bbbb_eeee	  Screen erased	with background	color
     _cccc_aaaa_nnnn______cccc_hhhh_aaaa_nnnn_gggg_eeee			_cccc_cccc_cccc	_cccc_cccc	  Terminal can re-define existing color
     _cccc_eeee_oooo_llll______ssss_tttt_aaaa_nnnn_dddd_oooo_uuuu_tttt______gggg_llll_iiii_tttt_cccc_hhhh	_xxxx_hhhh_pppp	_xxxx_ssss	  Standout not erased by overwriting (hp)
     _cccc_oooo_llll______aaaa_dddd_dddd_rrrr______gggg_llll_iiii_tttt_cccc_hhhh		_xxxx_hhhh_pppp_aaaa	_YYYY_AAAA	  Only positive	motion for _hhhh_pppp_aaaa/_mmmm_hhhh_pppp_aaaa caps
     _cccc_pppp_iiii______cccc_hhhh_aaaa_nnnn_gggg_eeee_ssss______rrrr_eeee_ssss		_cccc_pppp_iiii_xxxx	_YYYY_FFFF	  Changing character pitch changes
						  resolution
     _cccc_rrrr______cccc_aaaa_nnnn_cccc_eeee_llll_ssss______mmmm_iiii_cccc_rrrr_oooo______mmmm_oooo_dddd_eeee	_cccc_rrrr_xxxx_mmmm	_YYYY_BBBB	  Using	_cccc_rrrr turns off micro mode
     _eeee_aaaa_tttt______nnnn_eeee_wwww_llll_iiii_nnnn_eeee______gggg_llll_iiii_tttt_cccc_hhhh		_xxxx_eeee_nnnn_llll	_xxxx_nnnn	  Newline ignored after	80 columns
						  (Concept)
     _eeee_rrrr_aaaa_ssss_eeee______oooo_vvvv_eeee_rrrr_ssss_tttt_rrrr_iiii_kkkk_eeee		_eeee_oooo	_eeee_oooo	  Can erase overstrikes	with a blank
     _gggg_eeee_nnnn_eeee_rrrr_iiii_cccc______tttt_yyyy_pppp_eeee		_gggg_nnnn	_gggg_nnnn	  Generic line type (_e._g., dialup, switch)
     _hhhh_aaaa_rrrr_dddd______cccc_oooo_pppp_yyyy			_hhhh_cccc	_hhhh_cccc	  Hardcopy terminal
     _hhhh_aaaa_rrrr_dddd______cccc_uuuu_rrrr_ssss_oooo_rrrr		_cccc_hhhh_tttt_ssss	_HHHH_CCCC	  Cursor is hard to see
     _hhhh_aaaa_ssss______mmmm_eeee_tttt_aaaa______kkkk_eeee_yyyy		_kkkk_mmmm	_kkkk_mmmm	  Has a	meta key (shift, sets parity bit)
     _hhhh_aaaa_ssss______pppp_rrrr_iiii_nnnn_tttt______wwww_hhhh_eeee_eeee_llll		_dddd_aaaa_iiii_ssss_yyyy	_YYYY_CCCC	  Printer needs	operator to change
						  character set
     _hhhh_aaaa_ssss______ssss_tttt_aaaa_tttt_uuuu_ssss______llll_iiii_nnnn_eeee		_hhhh_ssss	_hhhh_ssss	  Has extra "status line"
     _hhhh_uuuu_eeee______llll_iiii_gggg_hhhh_tttt_nnnn_eeee_ssss_ssss______ssss_aaaa_tttt_uuuu_rrrr_aaaa_tttt_iiii_oooo_nnnn	_hhhh_llll_ssss	_hhhh_llll	  Terminal uses	only HLS color
						  notation (Tektronix)
     _iiii_nnnn_ssss_eeee_rrrr_tttt______nnnn_uuuu_llll_llll______gggg_llll_iiii_tttt_cccc_hhhh		_iiii_nnnn	_iiii_nnnn	  Insert mode distinguishes nulls
     _llll_pppp_iiii______cccc_hhhh_aaaa_nnnn_gggg_eeee_ssss______rrrr_eeee_ssss		_llll_pppp_iiii_xxxx	_YYYY_GGGG	  Changing line	pitch changes resolution
     _mmmm_eeee_mmmm_oooo_rrrr_yyyy______aaaa_bbbb_oooo_vvvv_eeee		_dddd_aaaa	_dddd_aaaa	  Display may be retained above	the screen
     _mmmm_eeee_mmmm_oooo_rrrr_yyyy______bbbb_eeee_llll_oooo_wwww		_dddd_bbbb	_dddd_bbbb	  Display may be retained below	the screen
     _mmmm_oooo_vvvv_eeee______iiii_nnnn_ssss_eeee_rrrr_tttt______mmmm_oooo_dddd_eeee		_mmmm_iiii_rrrr	_mmmm_iiii	  Safe to move while in	insert mode
     _mmmm_oooo_vvvv_eeee______ssss_tttt_aaaa_nnnn_dddd_oooo_uuuu_tttt______mmmm_oooo_dddd_eeee		_mmmm_ssss_gggg_rrrr	_mmmm_ssss	  Safe to move in standout modes
     _nnnn_eeee_eeee_dddd_ssss______xxxx_oooo_nnnn______xxxx_oooo_ffff_ffff		_nnnn_xxxx_oooo_nnnn	_nnnn_xxxx	  Padding won't	work, xon/xoff required
     _nnnn_oooo______eeee_ssss_cccc______cccc_tttt_llll_cccc		_xxxx_ssss_bbbb	_xxxx_bbbb	  Beehive (f1=escape, f2=ctrl C)
     _nnnn_oooo_nnnn______rrrr_eeee_vvvv______rrrr_mmmm_cccc_uuuu_pppp		_nnnn_rrrr_rrrr_mmmm_cccc	_NNNN_RRRR	  _ssss_mmmm_cccc_uuuu_pppp	does not reverse _rrrr_mmmm_cccc_uuuu_pppp
     _nnnn_oooo______pppp_aaaa_dddd______cccc_hhhh_aaaa_rrrr		_nnnn_pppp_cccc	_NNNN_PPPP	  Pad character	doesn't	exist
     _oooo_vvvv_eeee_rrrr______ssss_tttt_rrrr_iiii_kkkk_eeee		_oooo_ssss	_oooo_ssss	  Terminal overstrikes on hard-copy
						  terminal
     _pppp_rrrr_tttt_rrrr______ssss_iiii_llll_eeee_nnnn_tttt		_mmmm_cccc_5555_iiii	_5555_iiii	  Printer won't	echo on	screen
     _rrrr_oooo_wwww______aaaa_dddd_dddd_rrrr______gggg_llll_iiii_tttt_cccc_hhhh		_xxxx_vvvv_pppp_aaaa	_YYYY_DDDD	  Only positive	motion for _vvvv_pppp_aaaa/_mmmm_vvvv_pppp_aaaa caps
     _ssss_eeee_mmmm_iiii______aaaa_uuuu_tttt_oooo______rrrr_iiii_gggg_hhhh_tttt______mmmm_aaaa_rrrr_gggg_iiii_nnnn	_ssss_aaaa_mmmm	_YYYY_EEEE	  Printing in last column causes _cccc_rrrr
     _ssss_tttt_aaaa_tttt_uuuu_ssss______llll_iiii_nnnn_eeee______eeee_ssss_cccc______oooo_kkkk		_eeee_ssss_llll_oooo_kkkk	_eeee_ssss	  Escape can be	used on	the status line
     _dddd_eeee_ssss_tttt______tttt_aaaa_bbbb_ssss______mmmm_aaaa_gggg_iiii_cccc______ssss_mmmm_ssss_oooo	_xxxx_tttt	_xxxx_tttt	  Destructive tabs, magic _ssss_mmmm_ssss_oooo char (t1061)
     _tttt_iiii_llll_dddd_eeee______gggg_llll_iiii_tttt_cccc_hhhh		_hhhh_zzzz	_hhhh_zzzz	  Hazeltine; can't print tilde (~)
     _tttt_rrrr_aaaa_nnnn_ssss_pppp_aaaa_rrrr_eeee_nnnn_tttt______uuuu_nnnn_dddd_eeee_rrrr_llll_iiii_nnnn_eeee	_uuuu_llll	_uuuu_llll	  Underline character overstrikes
     _xxxx_oooo_nnnn______xxxx_oooo_ffff_ffff			_xxxx_oooo_nnnn	_xxxx_oooo	  Terminal uses	xon/xoff handshaking

   NNNNuuuummmmbbbbeeeerrrrssss
			    Cap-     Termcap
     Variable		    name     Code      Description









									PPPPaaaaggggeeee 3333










     _bbbb_uuuu_ffff_ffff_eeee_rrrr______cccc_aaaa_pppp_aaaa_cccc_iiii_tttt_yyyy	    _bbbb_uuuu_ffff_ssss_zzzz    _YYYY_aaaa	       Number of bytes buffered	before printing
     _cccc_oooo_llll_uuuu_mmmm_nnnn_ssss		    _cccc_oooo_llll_ssss     _cccc_oooo	       Number of columns in a line
     _dddd_oooo_tttt______vvvv_eeee_rrrr_tttt______ssss_pppp_aaaa_cccc_iiii_nnnn_gggg	    _ssss_pppp_iiii_nnnn_vvvv    _YYYY_bbbb	       Spacing of pins vertically in pins per inch
     _dddd_oooo_tttt______hhhh_oooo_rrrr_zzzz______ssss_pppp_aaaa_cccc_iiii_nnnn_gggg	    _ssss_pppp_iiii_nnnn_hhhh    _YYYY_cccc	       Spacing of dots horizontally in dots per	inch
     _iiii_nnnn_iiii_tttt______tttt_aaaa_bbbb_ssss		    _iiii_tttt	     _iiii_tttt	       Tabs initially every # spaces
     _llll_aaaa_bbbb_eeee_llll______hhhh_eeee_iiii_gggg_hhhh_tttt	    _llll_hhhh	     _llll_hhhh	       Number of rows in each label
     _llll_aaaa_bbbb_eeee_llll______wwww_iiii_dddd_tttt_hhhh	    _llll_wwww	     _llll_wwww	       Number of columns in each label
     _llll_iiii_nnnn_eeee_ssss		    _llll_iiii_nnnn_eeee_ssss    _llll_iiii	       Number of lines on a screen or a	page
     _llll_iiii_nnnn_eeee_ssss______oooo_ffff______mmmm_eeee_mmmm_oooo_rrrr_yyyy	    _llll_mmmm	     _llll_mmmm	       Lines of	memory if > _llll_iiii_nnnn_eeee_ssss; _0000 means varies
     _mmmm_aaaa_gggg_iiii_cccc______cccc_oooo_oooo_kkkk_iiii_eeee______gggg_llll_iiii_tttt_cccc_hhhh    _xxxx_mmmm_cccc	     _ssss_gggg	       Number of blank characters left by
					       _ssss_mmmm_ssss_oooo or _rrrr_mmmm_ssss_oooo
     _mmmm_aaaa_xxxx______cccc_oooo_llll_oooo_rrrr_ssss		    _cccc_oooo_llll_oooo_rrrr_ssss   _CCCC_oooo	       Maximum number of colors	on the screen
     _mmmm_aaaa_xxxx______mmmm_iiii_cccc_rrrr_oooo______aaaa_dddd_dddd_rrrr_eeee_ssss_ssss	    _mmmm_aaaa_dddd_dddd_rrrr    _YYYY_dddd	       Maximum value in	_mmmm_iiii_cccc_rrrr_oooo______...._...._....______aaaa_dddd_dddd_rrrr_eeee_ssss_ssss
     _mmmm_aaaa_xxxx______mmmm_iiii_cccc_rrrr_oooo______jjjj_uuuu_mmmm_pppp	    _mmmm_jjjj_uuuu_mmmm_pppp    _YYYY_eeee	       Maximum value in	_pppp_aaaa_rrrr_mmmm______...._...._....______mmmm_iiii_cccc_rrrr_oooo
     _mmmm_aaaa_xxxx______pppp_aaaa_iiii_rrrr_ssss		    _pppp_aaaa_iiii_rrrr_ssss    _pppp_aaaa	       Maximum number of color-pairs on	the
					       screen
     _mmmm_iiii_cccc_rrrr_oooo______cccc_oooo_llll______ssss_iiii_zzzz_eeee	    _mmmm_cccc_ssss	     _YYYY_ffff	       Character step size when	in micro mode
     _mmmm_iiii_cccc_rrrr_oooo______llll_iiii_nnnn_eeee______ssss_iiii_zzzz_eeee	    _mmmm_llll_ssss	     _YYYY_gggg	       Line step size when in micro mode
     _nnnn_oooo______cccc_oooo_llll_oooo_rrrr______vvvv_iiii_dddd_eeee_oooo	    _nnnn_cccc_vvvv	     _NNNN_CCCC	       Video attributes	that can't be used
					       with colors
     _nnnn_uuuu_mmmm_bbbb_eeee_rrrr______oooo_ffff______pppp_iiii_nnnn_ssss	    _nnnn_pppp_iiii_nnnn_ssss    _YYYY_hhhh	       Number of pins in print-head
     _nnnn_uuuu_mmmm______llll_aaaa_bbbb_eeee_llll_ssss		    _nnnn_llll_aaaa_bbbb     _NNNN_llll	       Number of labels	on screen (start at 1)
     _oooo_uuuu_tttt_pppp_uuuu_tttt______rrrr_eeee_ssss______cccc_hhhh_aaaa_rrrr	    _oooo_rrrr_cccc	     _YYYY_iiii	       Horizontal resolution in	units per character
     _oooo_uuuu_tttt_pppp_uuuu_tttt______rrrr_eeee_ssss______llll_iiii_nnnn_eeee	    _oooo_rrrr_llll	     _YYYY_jjjj	       Vertical	resolution in units per	line
     _oooo_uuuu_tttt_pppp_uuuu_tttt______rrrr_eeee_ssss______hhhh_oooo_rrrr_zzzz______iiii_nnnn_cccc_hhhh   _oooo_rrrr_hhhh_iiii     _YYYY_kkkk	       Horizontal resolution in	units per inch
     _oooo_uuuu_tttt_pppp_uuuu_tttt______rrrr_eeee_ssss______vvvv_eeee_rrrr_tttt______iiii_nnnn_cccc_hhhh   _oooo_rrrr_vvvv_iiii     _YYYY_llll	       Vertical	resolution in units per	inch
     _pppp_aaaa_dddd_dddd_iiii_nnnn_gggg______bbbb_aaaa_uuuu_dddd______rrrr_aaaa_tttt_eeee	    _pppp_bbbb	     _pppp_bbbb	       Lowest baud rate	where padding needed
     _vvvv_iiii_rrrr_tttt_uuuu_aaaa_llll______tttt_eeee_rrrr_mmmm_iiii_nnnn_aaaa_llll	    _vvvv_tttt	     _vvvv_tttt	       Virtual terminal	number (UNIX system)
     _wwww_iiii_dddd_eeee______cccc_hhhh_aaaa_rrrr______ssss_iiii_zzzz_eeee	    _wwww_iiii_dddd_cccc_ssss    _YYYY_nnnn	       Character step size when	in double
					       wide mode
     _wwww_iiii_dddd_tttt_hhhh______ssss_tttt_aaaa_tttt_uuuu_ssss______llll_iiii_nnnn_eeee	    _wwww_ssss_llll	     _wwww_ssss	       Number of columns in status line

   SSSSttttrrrriiiinnnnggggssss
				 Cap-	  Termcap
     Variable			 name	  Code	   Description




















									PPPPaaaaggggeeee 4444










     _aaaa_cccc_ssss______cccc_hhhh_aaaa_rrrr_ssss			 _aaaa_cccc_ssss_cccc	  _aaaa_cccc	   Graphic charset pairs aAbBcC
     _aaaa_llll_tttt______ssss_cccc_aaaa_nnnn_cccc_oooo_dddd_eeee______eeee_ssss_cccc		 _ssss_cccc_eeee_ssss_cccc_aaaa	  _SSSS_8888	   Alternate escape for	scancode emulation
						   (default is for vt100)
     _bbbb_aaaa_cccc_kkkk______tttt_aaaa_bbbb			 _cccc_bbbb_tttt	  _bbbb_tttt	   Back	tab
     _bbbb_eeee_llll_llll			 _bbbb_eeee_llll	  _bbbb_llll	   Audible signal (bell)
     _bbbb_iiii_tttt______iiii_mmmm_aaaa_gggg_eeee______rrrr_eeee_pppp_eeee_aaaa_tttt		 _bbbb_iiii_rrrr_eeee_pppp	  _ZZZZ_yyyy	   Repeat bit-image cell #1 #2 times (use tparm)
     _bbbb_iiii_tttt______iiii_mmmm_aaaa_gggg_eeee______nnnn_eeee_wwww_llll_iiii_nnnn_eeee		 _bbbb_iiii_nnnn_eeee_llll	  _ZZZZ_zzzz	   Move	to next	row of the bit image (use tparm)
     _bbbb_iiii_tttt______iiii_mmmm_aaaa_gggg_eeee______cccc_aaaa_rrrr_rrrr_iiii_aaaa_gggg_eeee______rrrr_eeee_tttt_uuuu_rrrr_nnnn	 _bbbb_iiii_cccc_rrrr	  _YYYY_vvvv	   Move	to beginning of	same row (use tparm)
     _cccc_aaaa_rrrr_rrrr_iiii_aaaa_gggg_eeee______rrrr_eeee_tttt_uuuu_rrrr_nnnn		 _cccc_rrrr	  _cccc_rrrr	   Carriage return
     _cccc_hhhh_aaaa_nnnn_gggg_eeee______cccc_hhhh_aaaa_rrrr______pppp_iiii_tttt_cccc_hhhh		 _cccc_pppp_iiii	  _ZZZZ_AAAA	   Change number of characters per inch
     _cccc_hhhh_aaaa_nnnn_gggg_eeee______llll_iiii_nnnn_eeee______pppp_iiii_tttt_cccc_hhhh		 _llll_pppp_iiii	  _ZZZZ_BBBB	   Change number of lines per inch
     _cccc_hhhh_aaaa_nnnn_gggg_eeee______rrrr_eeee_ssss______hhhh_oooo_rrrr_zzzz		 _cccc_hhhh_rrrr	  _ZZZZ_CCCC	   Change horizontal resolution
     _cccc_hhhh_aaaa_nnnn_gggg_eeee______rrrr_eeee_ssss______vvvv_eeee_rrrr_tttt		 _cccc_vvvv_rrrr	  _ZZZZ_DDDD	   Change vertical resolution
     _cccc_hhhh_aaaa_nnnn_gggg_eeee______ssss_cccc_rrrr_oooo_llll_llll______rrrr_eeee_gggg_iiii_oooo_nnnn	 _cccc_ssss_rrrr	  _cccc_ssss	   Change to lines #1 through #2 (vt100)
     _cccc_hhhh_aaaa_rrrr______pppp_aaaa_dddd_dddd_iiii_nnnn_gggg		 _rrrr_mmmm_pppp	  _rrrr_PPPP	   Like	_iiii_pppp but when in replace mode
     _cccc_hhhh_aaaa_rrrr______ssss_eeee_tttt______nnnn_aaaa_mmmm_eeee_ssss		 _cccc_ssss_nnnn_mmmm	  _ZZZZ_yyyy	   List	of character set names
     _cccc_llll_eeee_aaaa_rrrr______aaaa_llll_llll______tttt_aaaa_bbbb_ssss		 _tttt_bbbb_cccc	  _cccc_tttt	   Clear all tab stops
     _cccc_llll_eeee_aaaa_rrrr______mmmm_aaaa_rrrr_gggg_iiii_nnnn_ssss		 _mmmm_gggg_cccc	  _MMMM_CCCC	   Clear all margins (top, bottom,
						   and sides)
     _cccc_llll_eeee_aaaa_rrrr______ssss_cccc_rrrr_eeee_eeee_nnnn		 _cccc_llll_eeee_aaaa_rrrr	  _cccc_llll	   Clear screen	and home cursor
     _cccc_llll_rrrr______bbbb_oooo_llll			 _eeee_llll_1111	  _cccc_bbbb	   Clear to beginning of line, inclusive
     _cccc_llll_rrrr______eeee_oooo_llll			 _eeee_llll	  _cccc_eeee	   Clear to end	of line
     _cccc_llll_rrrr______eeee_oooo_ssss			 _eeee_dddd	  _cccc_dddd	   Clear to end	of display
     _cccc_oooo_dddd_eeee______ssss_eeee_tttt______iiii_nnnn_iiii_tttt		 _cccc_ssss_iiii_nnnn	  _cccc_iiii	   Init	sequence for multiple codesets
     _cccc_oooo_llll_oooo_rrrr______nnnn_aaaa_mmmm_eeee_ssss		 _cccc_oooo_llll_oooo_rrrr_nnnn_mmmm  _YYYY_wwww	   Give	name for color #1
     _cccc_oooo_llll_uuuu_mmmm_nnnn______aaaa_dddd_dddd_rrrr_eeee_ssss_ssss		 _hhhh_pppp_aaaa	  _cccc_hhhh	   Horizontal position absolute
     _cccc_oooo_mmmm_mmmm_aaaa_nnnn_dddd______cccc_hhhh_aaaa_rrrr_aaaa_cccc_tttt_eeee_rrrr		 _cccc_mmmm_dddd_cccc_hhhh	  _CCCC_CCCC	   Terminal settable cmd character
						   in prototype
     _cccc_uuuu_rrrr_ssss_oooo_rrrr______aaaa_dddd_dddd_rrrr_eeee_ssss_ssss		 _cccc_uuuu_pppp	  _cccc_mmmm	   Move	to row #1 col #2
     _cccc_uuuu_rrrr_ssss_oooo_rrrr______dddd_oooo_wwww_nnnn		 _cccc_uuuu_dddd_1111	  _dddd_oooo	   Down	one line
     _cccc_uuuu_rrrr_ssss_oooo_rrrr______hhhh_oooo_mmmm_eeee		 _hhhh_oooo_mmmm_eeee	  _hhhh_oooo	   Home	cursor (if no _cccc_uuuu_pppp)
     _cccc_uuuu_rrrr_ssss_oooo_rrrr______iiii_nnnn_vvvv_iiii_ssss_iiii_bbbb_llll_eeee		 _cccc_iiii_vvvv_iiii_ssss	  _vvvv_iiii	   Make	cursor invisible
     _cccc_uuuu_rrrr_ssss_oooo_rrrr______llll_eeee_ffff_tttt		 _cccc_uuuu_bbbb_1111	  _llll_eeee	   Move	left one space.
     _cccc_uuuu_rrrr_ssss_oooo_rrrr______mmmm_eeee_mmmm______aaaa_dddd_dddd_rrrr_eeee_ssss_ssss		 _mmmm_rrrr_cccc_uuuu_pppp	  _CCCC_MMMM	   Memory relative cursor addressing
     _cccc_uuuu_rrrr_ssss_oooo_rrrr______nnnn_oooo_rrrr_mmmm_aaaa_llll		 _cccc_nnnn_oooo_rrrr_mmmm	  _vvvv_eeee	   Make	cursor appear normal
						   (undo _vvvv_ssss_////_vvvv_iiii)
     _cccc_uuuu_rrrr_ssss_oooo_rrrr______rrrr_iiii_gggg_hhhh_tttt		 _cccc_uuuu_ffff_1111	  _nnnn_dddd	   Non-destructive space (cursor or
						   carriage right)
     _cccc_uuuu_rrrr_ssss_oooo_rrrr______tttt_oooo______llll_llll		 _llll_llll	  _llll_llll	   Last	line, first column (if no _cccc_uuuu_pppp)
     _cccc_uuuu_rrrr_ssss_oooo_rrrr______uuuu_pppp			 _cccc_uuuu_uuuu_1111	  _uuuu_pppp	   Upline (cursor up)
     _cccc_uuuu_rrrr_ssss_oooo_rrrr______vvvv_iiii_ssss_iiii_bbbb_llll_eeee		 _cccc_vvvv_vvvv_iiii_ssss	  _vvvv_ssss	   Make	cursor very visible
     _dddd_eeee_ffff_iiii_nnnn_eeee______bbbb_iiii_tttt______iiii_mmmm_aaaa_gggg_eeee______rrrr_eeee_gggg_iiii_oooo_nnnn	 _dddd_eeee_ffff_bbbb_iiii	  _YYYY_xxxx	   Define rectangular bit-image	region
						   (use	tparm)
     _dddd_eeee_ffff_iiii_nnnn_eeee______cccc_hhhh_aaaa_rrrr		 _dddd_eeee_ffff_cccc	  _ZZZZ_EEEE	   Define a character in a character set|-
     _dddd_eeee_llll_eeee_tttt_eeee______cccc_hhhh_aaaa_rrrr_aaaa_cccc_tttt_eeee_rrrr		 _dddd_cccc_hhhh_1111	  _dddd_cccc	   Delete character
     _dddd_eeee_llll_eeee_tttt_eeee______llll_iiii_nnnn_eeee		 _dddd_llll_1111	  _dddd_llll	   Delete line
     _dddd_eeee_vvvv_iiii_cccc_eeee______tttt_yyyy_pppp_eeee		 _dddd_eeee_vvvv_tttt	  _dddd_vvvv	   Indicate language/codeset support
     _dddd_iiii_ssss______ssss_tttt_aaaa_tttt_uuuu_ssss______llll_iiii_nnnn_eeee		 _dddd_ssss_llll	  _dddd_ssss	   Disable status line
     _dddd_iiii_ssss_pppp_llll_aaaa_yyyy______pppp_cccc______cccc_hhhh_aaaa_rrrr		 _dddd_iiii_ssss_pppp_cccc	  _SSSS_1111	   Display PC character
     _dddd_oooo_wwww_nnnn______hhhh_aaaa_llll_ffff______llll_iiii_nnnn_eeee		 _hhhh_dddd	  _hhhh_dddd	   Half-line down (forward 1/2 linefeed)





									PPPPaaaaggggeeee 5555










     _eeee_nnnn_aaaa______aaaa_cccc_ssss			 _eeee_nnnn_aaaa_cccc_ssss	  _eeee_AAAA	   Enable alternate character set
     _eeee_nnnn_dddd______bbbb_iiii_tttt______iiii_mmmm_aaaa_gggg_eeee______rrrr_eeee_gggg_iiii_oooo_nnnn	 _eeee_nnnn_dddd_bbbb_iiii	  _YYYY_yyyy	   End a bit-image region (use tparm)
     _eeee_nnnn_tttt_eeee_rrrr______aaaa_llll_tttt______cccc_hhhh_aaaa_rrrr_ssss_eeee_tttt______mmmm_oooo_dddd_eeee	 _ssss_mmmm_aaaa_cccc_ssss	  _aaaa_ssss	   Start alternate character set
     _eeee_nnnn_tttt_eeee_rrrr______aaaa_mmmm______mmmm_oooo_dddd_eeee		 _ssss_mmmm_aaaa_mmmm	  _SSSS_AAAA	   Turn	on automatic margins
     _eeee_nnnn_tttt_eeee_rrrr______bbbb_llll_iiii_nnnn_kkkk______mmmm_oooo_dddd_eeee		 _bbbb_llll_iiii_nnnn_kkkk	  _mmmm_bbbb	   Turn	on blinking
     _eeee_nnnn_tttt_eeee_rrrr______bbbb_oooo_llll_dddd______mmmm_oooo_dddd_eeee		 _bbbb_oooo_llll_dddd	  _mmmm_dddd	   Turn	on bold	(extra bright) mode
     _eeee_nnnn_tttt_eeee_rrrr______cccc_aaaa______mmmm_oooo_dddd_eeee		 _ssss_mmmm_cccc_uuuu_pppp	  _tttt_iiii	   String to begin programs that use _cccc_uuuu_pppp
     _eeee_nnnn_tttt_eeee_rrrr______dddd_eeee_llll_eeee_tttt_eeee______mmmm_oooo_dddd_eeee		 _ssss_mmmm_dddd_cccc	  _dddd_mmmm	   Delete mode (enter)
     _eeee_nnnn_tttt_eeee_rrrr______dddd_iiii_mmmm______mmmm_oooo_dddd_eeee		 _dddd_iiii_mmmm	  _mmmm_hhhh	   Turn	on half-bright mode
     _eeee_nnnn_tttt_eeee_rrrr______dddd_oooo_uuuu_bbbb_llll_eeee_wwww_iiii_dddd_eeee______mmmm_oooo_dddd_eeee	 _ssss_wwww_iiii_dddd_mmmm	  _ZZZZ_FFFF	   Enable double wide printing
     _eeee_nnnn_tttt_eeee_rrrr______dddd_rrrr_aaaa_ffff_tttt______qqqq_uuuu_aaaa_llll_iiii_tttt_yyyy	 _ssss_dddd_rrrr_ffff_qqqq	  _ZZZZ_GGGG	   Set draft quality print
     _eeee_nnnn_tttt_eeee_rrrr______iiii_nnnn_ssss_eeee_rrrr_tttt______mmmm_oooo_dddd_eeee		 _ssss_mmmm_iiii_rrrr	  _iiii_mmmm	   Insert mode (enter)
     _eeee_nnnn_tttt_eeee_rrrr______iiii_tttt_aaaa_llll_iiii_cccc_ssss______mmmm_oooo_dddd_eeee		 _ssss_iiii_tttt_mmmm	  _ZZZZ_HHHH	   Enable italics
     _eeee_nnnn_tttt_eeee_rrrr______llll_eeee_ffff_tttt_wwww_aaaa_rrrr_dddd______mmmm_oooo_dddd_eeee	 _ssss_llll_mmmm	  _ZZZZ_IIII	   Enable leftward carriage motion
     _eeee_nnnn_tttt_eeee_rrrr______mmmm_iiii_cccc_rrrr_oooo______mmmm_oooo_dddd_eeee		 _ssss_mmmm_iiii_cccc_mmmm	  _ZZZZ_JJJJ	   Enable micro	motion capabilities
     _eeee_nnnn_tttt_eeee_rrrr______nnnn_eeee_aaaa_rrrr______llll_eeee_tttt_tttt_eeee_rrrr______qqqq_uuuu_aaaa_llll_iiii_tttt_yyyy	 _ssss_nnnn_llll_qqqq	  _ZZZZ_KKKK	   Set near-letter quality print
     _eeee_nnnn_tttt_eeee_rrrr______nnnn_oooo_rrrr_mmmm_aaaa_llll______qqqq_uuuu_aaaa_llll_iiii_tttt_yyyy	 _ssss_nnnn_rrrr_mmmm_qqqq	  _ZZZZ_LLLL	   Set normal quality print
     _eeee_nnnn_tttt_eeee_rrrr______pppp_cccc______cccc_hhhh_aaaa_rrrr_ssss_eeee_tttt______mmmm_oooo_dddd_eeee	 _ssss_mmmm_pppp_cccc_hhhh	  _SSSS_2222	   Enter PC character display mode
     _eeee_nnnn_tttt_eeee_rrrr______pppp_rrrr_oooo_tttt_eeee_cccc_tttt_eeee_dddd______mmmm_oooo_dddd_eeee	 _pppp_rrrr_oooo_tttt	  _mmmm_pppp	   Turn	on protected mode
     _eeee_nnnn_tttt_eeee_rrrr______rrrr_eeee_vvvv_eeee_rrrr_ssss_eeee______mmmm_oooo_dddd_eeee		 _rrrr_eeee_vvvv	  _mmmm_rrrr	   Turn	on reverse video mode
     _eeee_nnnn_tttt_eeee_rrrr______ssss_cccc_aaaa_nnnn_cccc_oooo_dddd_eeee______mmmm_oooo_dddd_eeee	 _ssss_mmmm_ssss_cccc	  _SSSS_4444	   Enter PC scancode mode
     _eeee_nnnn_tttt_eeee_rrrr______ssss_eeee_cccc_uuuu_rrrr_eeee______mmmm_oooo_dddd_eeee		 _iiii_nnnn_vvvv_iiii_ssss	  _mmmm_kkkk	   Turn	on blank mode
						   (characters invisible)
     _eeee_nnnn_tttt_eeee_rrrr______ssss_hhhh_aaaa_dddd_oooo_wwww______mmmm_oooo_dddd_eeee		 _ssss_ssss_hhhh_mmmm	  _ZZZZ_MMMM	   Enable shadow printing
     _eeee_nnnn_tttt_eeee_rrrr______ssss_tttt_aaaa_nnnn_dddd_oooo_uuuu_tttt______mmmm_oooo_dddd_eeee	 _ssss_mmmm_ssss_oooo	  _ssss_oooo	   Begin standout mode
     _eeee_nnnn_tttt_eeee_rrrr______ssss_uuuu_bbbb_ssss_cccc_rrrr_iiii_pppp_tttt______mmmm_oooo_dddd_eeee	 _ssss_ssss_uuuu_bbbb_mmmm	  _ZZZZ_NNNN	   Enable subscript printing
     _eeee_nnnn_tttt_eeee_rrrr______ssss_uuuu_pppp_eeee_rrrr_ssss_cccc_rrrr_iiii_pppp_tttt______mmmm_oooo_dddd_eeee	 _ssss_ssss_uuuu_pppp_mmmm	  _ZZZZ_OOOO	   Enable superscript printing
     _eeee_nnnn_tttt_eeee_rrrr______uuuu_nnnn_dddd_eeee_rrrr_llll_iiii_nnnn_eeee______mmmm_oooo_dddd_eeee	 _ssss_mmmm_uuuu_llll	  _uuuu_ssss	   Start underscore mode
     _eeee_nnnn_tttt_eeee_rrrr______uuuu_pppp_wwww_aaaa_rrrr_dddd______mmmm_oooo_dddd_eeee		 _ssss_uuuu_mmmm	  _ZZZZ_PPPP	   Enable upward carriage motion
     _eeee_nnnn_tttt_eeee_rrrr______xxxx_oooo_nnnn______mmmm_oooo_dddd_eeee		 _ssss_mmmm_xxxx_oooo_nnnn	  _SSSS_XXXX	   Turn	on xon/xoff handshaking
     _eeee_rrrr_aaaa_ssss_eeee______cccc_hhhh_aaaa_rrrr_ssss		 _eeee_cccc_hhhh	  _eeee_cccc	   Erase #1 characters
     _eeee_xxxx_iiii_tttt______aaaa_llll_tttt______cccc_hhhh_aaaa_rrrr_ssss_eeee_tttt______mmmm_oooo_dddd_eeee	 _rrrr_mmmm_aaaa_cccc_ssss	  _aaaa_eeee	   End alternate character set
     _eeee_xxxx_iiii_tttt______aaaa_mmmm______mmmm_oooo_dddd_eeee		 _rrrr_mmmm_aaaa_mmmm	  _RRRR_AAAA	   Turn	off automatic margins
     _eeee_xxxx_iiii_tttt______aaaa_tttt_tttt_rrrr_iiii_bbbb_uuuu_tttt_eeee______mmmm_oooo_dddd_eeee	 _ssss_gggg_rrrr_0000	  _mmmm_eeee	   Turn	off all	attributes
     _eeee_xxxx_iiii_tttt______cccc_aaaa______mmmm_oooo_dddd_eeee		 _rrrr_mmmm_cccc_uuuu_pppp	  _tttt_eeee	   String to end programs that use _cccc_uuuu_pppp
     _eeee_xxxx_iiii_tttt______dddd_eeee_llll_eeee_tttt_eeee______mmmm_oooo_dddd_eeee		 _rrrr_mmmm_dddd_cccc	  _eeee_dddd	   End delete mode
     _eeee_xxxx_iiii_tttt______dddd_oooo_uuuu_bbbb_llll_eeee_wwww_iiii_dddd_eeee______mmmm_oooo_dddd_eeee	 _rrrr_wwww_iiii_dddd_mmmm	  _ZZZZ_QQQQ	   Disable double wide printing
     _eeee_xxxx_iiii_tttt______iiii_nnnn_ssss_eeee_rrrr_tttt______mmmm_oooo_dddd_eeee		 _rrrr_mmmm_iiii_rrrr	  _eeee_iiii	   End insert mode
     _eeee_xxxx_iiii_tttt______iiii_tttt_aaaa_llll_iiii_cccc_ssss______mmmm_oooo_dddd_eeee		 _rrrr_iiii_tttt_mmmm	  _ZZZZ_RRRR	   Disable italics
     _eeee_xxxx_iiii_tttt______llll_eeee_ffff_tttt_wwww_aaaa_rrrr_dddd______mmmm_oooo_dddd_eeee		 _rrrr_llll_mmmm	  _ZZZZ_SSSS	   Enable rightward (normal)
						   carriage motion
     _eeee_xxxx_iiii_tttt______mmmm_iiii_cccc_rrrr_oooo______mmmm_oooo_dddd_eeee		 _rrrr_mmmm_iiii_cccc_mmmm	  _ZZZZ_TTTT	   Disable micro motion	capabilities
     _eeee_xxxx_iiii_tttt______pppp_cccc______cccc_hhhh_aaaa_rrrr_ssss_eeee_tttt______mmmm_oooo_dddd_eeee	 _rrrr_mmmm_pppp_cccc_hhhh	  _SSSS_3333	   Disable PC character	display	mode
     _eeee_xxxx_iiii_tttt______ssss_cccc_aaaa_nnnn_cccc_oooo_dddd_eeee______mmmm_oooo_dddd_eeee		 _rrrr_mmmm_ssss_cccc	  _SSSS_5555	   Disable PC scancode mode
     _eeee_xxxx_iiii_tttt______ssss_hhhh_aaaa_dddd_oooo_wwww______mmmm_oooo_dddd_eeee		 _rrrr_ssss_hhhh_mmmm	  _ZZZZ_UUUU	   Disable shadow printing
     _eeee_xxxx_iiii_tttt______ssss_tttt_aaaa_nnnn_dddd_oooo_uuuu_tttt______mmmm_oooo_dddd_eeee		 _rrrr_mmmm_ssss_oooo	  _ssss_eeee	   End standout	mode
     _eeee_xxxx_iiii_tttt______ssss_uuuu_bbbb_ssss_cccc_rrrr_iiii_pppp_tttt______mmmm_oooo_dddd_eeee	 _rrrr_ssss_uuuu_bbbb_mmmm	  _ZZZZ_VVVV	   Disable subscript printing
     _eeee_xxxx_iiii_tttt______ssss_uuuu_pppp_eeee_rrrr_ssss_cccc_rrrr_iiii_pppp_tttt______mmmm_oooo_dddd_eeee	 _rrrr_ssss_uuuu_pppp_mmmm	  _ZZZZ_WWWW	   Disable superscript printing
     _eeee_xxxx_iiii_tttt______uuuu_nnnn_dddd_eeee_rrrr_llll_iiii_nnnn_eeee______mmmm_oooo_dddd_eeee	 _rrrr_mmmm_uuuu_llll	  _uuuu_eeee	   End underscore mode
     _eeee_xxxx_iiii_tttt______uuuu_pppp_wwww_aaaa_rrrr_dddd______mmmm_oooo_dddd_eeee		 _rrrr_uuuu_mmmm	  _ZZZZ_XXXX	   Enable downward (normal)





									PPPPaaaaggggeeee 6666










						   carriage motion
     _eeee_xxxx_iiii_tttt______xxxx_oooo_nnnn______mmmm_oooo_dddd_eeee		 _rrrr_mmmm_xxxx_oooo_nnnn	  _RRRR_XXXX	   Turn	off xon/xoff handshaking
     _ffff_llll_aaaa_ssss_hhhh______ssss_cccc_rrrr_eeee_eeee_nnnn		 _ffff_llll_aaaa_ssss_hhhh	  _vvvv_bbbb	   Visible bell	(may not move cursor)
     _ffff_oooo_rrrr_mmmm______ffff_eeee_eeee_dddd			 _ffff_ffff	  _ffff_ffff	   Hardcopy terminal page eject
     _ffff_rrrr_oooo_mmmm______ssss_tttt_aaaa_tttt_uuuu_ssss______llll_iiii_nnnn_eeee		 _ffff_ssss_llll	  _ffff_ssss	   Return from status line
     _iiii_nnnn_iiii_tttt______1111_ssss_tttt_rrrr_iiii_nnnn_gggg		 _iiii_ssss_1111	  _iiii_1111	   Terminal or printer initialization string
     _iiii_nnnn_iiii_tttt______2222_ssss_tttt_rrrr_iiii_nnnn_gggg		 _iiii_ssss_2222	  _iiii_ssss	   Terminal or printer initialization string
     _iiii_nnnn_iiii_tttt______3333_ssss_tttt_rrrr_iiii_nnnn_gggg		 _iiii_ssss_3333	  _iiii_3333	   Terminal or printer initialization string
     _iiii_nnnn_iiii_tttt______ffff_iiii_llll_eeee			 _iiii_ffff	  _iiii_ffff	   Name	of initialization file
     _iiii_nnnn_iiii_tttt______pppp_rrrr_oooo_gggg			 _iiii_pppp_rrrr_oooo_gggg	  _iiii_PPPP	   Path	name of	program	for initialization
     _iiii_nnnn_iiii_tttt_iiii_aaaa_llll_iiii_zzzz_eeee______cccc_oooo_llll_oooo_rrrr		 _iiii_nnnn_iiii_tttt_cccc	  _IIII_cccc	   Initialize the definition of	color
     _iiii_nnnn_iiii_tttt_iiii_aaaa_llll_iiii_zzzz_eeee______pppp_aaaa_iiii_rrrr		 _iiii_nnnn_iiii_tttt_pppp	  _IIII_pppp	   Initialize color-pair
     _iiii_nnnn_ssss_eeee_rrrr_tttt______cccc_hhhh_aaaa_rrrr_aaaa_cccc_tttt_eeee_rrrr		 _iiii_cccc_hhhh_1111	  _iiii_cccc	   Insert character
     _iiii_nnnn_ssss_eeee_rrrr_tttt______llll_iiii_nnnn_eeee		 _iiii_llll_1111	  _aaaa_llll	   Add new blank line
     _iiii_nnnn_ssss_eeee_rrrr_tttt______pppp_aaaa_dddd_dddd_iiii_nnnn_gggg		 _iiii_pppp	  _iiii_pppp	   Insert pad after character inserted

     The ``_kkkk_eeee_yyyy_____'' strings are sent by specific keys.  The ``_kkkk_eeee_yyyy_____''
     descriptions include the macro, defined in	_cccc_uuuu_rrrr_ssss_eeee_ssss_...._hhhh, for the code
     returned by the _cccc_uuuu_rrrr_ssss_eeee_ssss routine _gggg_eeee_tttt_cccc_hhhh when the key is pressed [see
     curs_getch(3X)].
			    Cap-    Termcap
     Variable		    name    Code     Description

































									PPPPaaaaggggeeee 7777






NNNN									     NNNN



     _kkkk_eeee_yyyy______aaaa_1111		    _kkkk_aaaa_1111	    _KKKK_1111	     _KKKK_EEEE_YYYY______AAAA_1111, upper left	of keypad
     _kkkk_eeee_yyyy______aaaa_3333		    _kkkk_aaaa_3333	    _KKKK_3333	     _KKKK_EEEE_YYYY______AAAA_3333, upper right of keypad
     _kkkk_eeee_yyyy______bbbb_2222		    _kkkk_bbbb_2222	    _KKKK_2222	     _KKKK_EEEE_YYYY______BBBB_2222, center of keypad
     _kkkk_eeee_yyyy______bbbb_aaaa_cccc_kkkk_ssss_pppp_aaaa_cccc_eeee	    _kkkk_bbbb_ssss	    _kkkk_bbbb	     _KKKK_EEEE_YYYY______BBBB_AAAA_CCCC_KKKK_SSSS_PPPP_AAAA_CCCC_EEEE, sent by backspace key
     _kkkk_eeee_yyyy______bbbb_eeee_gggg		    _kkkk_bbbb_eeee_gggg    _@@@@_1111	     _KKKK_EEEE_YYYY______BBBB_EEEE_GGGG, sent by beg(inning) key
     _kkkk_eeee_yyyy______bbbb_tttt_aaaa_bbbb		    _kkkk_cccc_bbbb_tttt    _kkkk_BBBB	     _KKKK_EEEE_YYYY______BBBB_TTTT_AAAA_BBBB, sent by back-tab	key
     _kkkk_eeee_yyyy______cccc_1111		    _kkkk_cccc_1111	    _KKKK_4444	     _KKKK_EEEE_YYYY______CCCC_1111, lower left	of keypad
     _kkkk_eeee_yyyy______cccc_3333		    _kkkk_cccc_3333	    _KKKK_5555	     _KKKK_EEEE_YYYY______CCCC_3333, lower right of keypad
     _kkkk_eeee_yyyy______cccc_aaaa_nnnn_cccc_eeee_llll		    _kkkk_cccc_aaaa_nnnn    _@@@@_2222	     _KKKK_EEEE_YYYY______CCCC_AAAA_NNNN_CCCC_EEEE_LLLL, sent by cancel	key
     _kkkk_eeee_yyyy______cccc_aaaa_tttt_aaaa_bbbb		    _kkkk_tttt_bbbb_cccc    _kkkk_aaaa	     _KKKK_EEEE_YYYY______CCCC_AAAA_TTTT_AAAA_BBBB,	sent by	clear-all-tabs key
     _kkkk_eeee_yyyy______cccc_llll_eeee_aaaa_rrrr		    _kkkk_cccc_llll_rrrr    _kkkk_CCCC	     _KKKK_EEEE_YYYY______CCCC_LLLL_EEEE_AAAA_RRRR,	sent by	clear-screen or
					     erase key
     _kkkk_eeee_yyyy______cccc_llll_oooo_ssss_eeee		    _kkkk_cccc_llll_oooo    _@@@@_3333	     _KKKK_EEEE_YYYY______CCCC_LLLL_OOOO_SSSS_EEEE,	sent by	close key
     _kkkk_eeee_yyyy______cccc_oooo_mmmm_mmmm_aaaa_nnnn_dddd	    _kkkk_cccc_mmmm_dddd    _@@@@_4444	     _KKKK_EEEE_YYYY______CCCC_OOOO_MMMM_MMMM_AAAA_NNNN_DDDD, sent by cmd (command)
					     key
     _kkkk_eeee_yyyy______cccc_oooo_pppp_yyyy		    _kkkk_cccc_pppp_yyyy    _@@@@_5555	     _KKKK_EEEE_YYYY______CCCC_OOOO_PPPP_YYYY, sent by copy key
     _kkkk_eeee_yyyy______cccc_rrrr_eeee_aaaa_tttt_eeee		    _kkkk_cccc_rrrr_tttt    _@@@@_6666	     _KKKK_EEEE_YYYY______CCCC_RRRR_EEEE_AAAA_TTTT_EEEE, sent by create	key
     _kkkk_eeee_yyyy______cccc_tttt_aaaa_bbbb		    _kkkk_cccc_tttt_aaaa_bbbb   _kkkk_tttt	     _KKKK_EEEE_YYYY______CCCC_TTTT_AAAA_BBBB, sent by clear-tab key
     _kkkk_eeee_yyyy______dddd_cccc		    _kkkk_dddd_cccc_hhhh_1111   _kkkk_DDDD	     _KKKK_EEEE_YYYY______DDDD_CCCC, sent by delete-character key
     _kkkk_eeee_yyyy______dddd_llll		    _kkkk_dddd_llll_1111    _kkkk_LLLL	     _KKKK_EEEE_YYYY______DDDD_LLLL, sent by delete-line key
     _kkkk_eeee_yyyy______dddd_oooo_wwww_nnnn		    _kkkk_cccc_uuuu_dddd_1111   _kkkk_dddd	     _KKKK_EEEE_YYYY______DDDD_OOOO_WWWW_NNNN, sent by terminal
					     down-arrow	key
     _kkkk_eeee_yyyy______eeee_iiii_cccc		    _kkkk_rrrr_mmmm_iiii_rrrr   _kkkk_MMMM	     _KKKK_EEEE_YYYY______EEEE_IIII_CCCC, sent by _rrrr_mmmm_iiii_rrrr or _ssss_mmmm_iiii_rrrr in
					     insert mode
     _kkkk_eeee_yyyy______eeee_nnnn_dddd		    _kkkk_eeee_nnnn_dddd    _@@@@_7777	     _KKKK_EEEE_YYYY______EEEE_NNNN_DDDD, sent by end key
     _kkkk_eeee_yyyy______eeee_nnnn_tttt_eeee_rrrr		    _kkkk_eeee_nnnn_tttt    _@@@@_8888	     _KKKK_EEEE_YYYY______EEEE_NNNN_TTTT_EEEE_RRRR,	sent by	enter/send key
     _kkkk_eeee_yyyy______eeee_oooo_llll		    _kkkk_eeee_llll	    _kkkk_EEEE	     _KKKK_EEEE_YYYY______EEEE_OOOO_LLLL, sent by clear-to-end-of-line
					     key
     _kkkk_eeee_yyyy______eeee_oooo_ssss		    _kkkk_eeee_dddd	    _kkkk_SSSS	     _KKKK_EEEE_YYYY______EEEE_OOOO_SSSS, sent by clear-to-end-of-screen
					     key
     _kkkk_eeee_yyyy______eeee_xxxx_iiii_tttt		    _kkkk_eeee_xxxx_tttt    _@@@@_9999	     _KKKK_EEEE_YYYY______EEEE_XXXX_IIII_TTTT, sent by exit key
     _kkkk_eeee_yyyy______ffff_0000		    _kkkk_ffff_0000	    _kkkk_0000	     _KKKK_EEEE_YYYY______FFFF_((((_0000_)))), sent by function	key f0
     _kkkk_eeee_yyyy______ffff_1111		    _kkkk_ffff_1111	    _kkkk_1111	     _KKKK_EEEE_YYYY______FFFF_((((_1111_)))), sent by function	key f1
     _kkkk_eeee_yyyy______ffff_2222		    _kkkk_ffff_2222	    _kkkk_2222	     _KKKK_EEEE_YYYY______FFFF_((((_2222_)))), sent by function	key f2
     _kkkk_eeee_yyyy______ffff_3333		    _kkkk_ffff_3333	    _kkkk_3333	     _KKKK_EEEE_YYYY______FFFF_((((_3333_)))), sent by function	key f3
     _kkkk_eeee_yyyy______ffff_4444		    _kkkk_ffff_4444	    _kkkk_4444	     _KKKK_EEEE_YYYY______FFFF_((((_4444_)))), sent by function	key f4
     _kkkk_eeee_yyyy______ffff_5555		    _kkkk_ffff_5555	    _kkkk_5555	     _KKKK_EEEE_YYYY______FFFF_((((_5555_)))), sent by function	key f5
     _kkkk_eeee_yyyy______ffff_6666		    _kkkk_ffff_6666	    _kkkk_6666	     _KKKK_EEEE_YYYY______FFFF_((((_6666_)))), sent by function	key f6
     _kkkk_eeee_yyyy______ffff_7777		    _kkkk_ffff_7777	    _kkkk_7777	     _KKKK_EEEE_YYYY______FFFF_((((_7777_)))), sent by function	key f7
     _kkkk_eeee_yyyy______ffff_8888		    _kkkk_ffff_8888	    _kkkk_8888	     _KKKK_EEEE_YYYY______FFFF_((((_8888_)))), sent by function	key f8
     _kkkk_eeee_yyyy______ffff_9999		    _kkkk_ffff_9999	    _kkkk_9999	     _KKKK_EEEE_YYYY______FFFF_((((_9999_)))), sent by function	key f9
     _kkkk_eeee_yyyy______ffff_1111_0000		    _kkkk_ffff_1111_0000    _kkkk_;;;;	     _KKKK_EEEE_YYYY______FFFF_((((_1111_0000_)))),	sent by	function key f10
     _kkkk_eeee_yyyy______ffff_1111_1111		    _kkkk_ffff_1111_1111    _FFFF_1111	     _KKKK_EEEE_YYYY______FFFF_((((_1111_1111_)))),	sent by	function key f11
     _kkkk_eeee_yyyy______ffff_1111_2222		    _kkkk_ffff_1111_2222    _FFFF_2222	     _KKKK_EEEE_YYYY______FFFF_((((_1111_2222_)))),	sent by	function key f12
     _kkkk_eeee_yyyy______ffff_1111_3333		    _kkkk_ffff_1111_3333    _FFFF_3333	     _KKKK_EEEE_YYYY______FFFF_((((_1111_3333_)))),	sent by	function key f13
     _kkkk_eeee_yyyy______ffff_1111_4444		    _kkkk_ffff_1111_4444    _FFFF_4444	     _KKKK_EEEE_YYYY______FFFF_((((_1111_4444_)))),	sent by	function key f14
     _kkkk_eeee_yyyy______ffff_1111_5555		    _kkkk_ffff_1111_5555    _FFFF_5555	     _KKKK_EEEE_YYYY______FFFF_((((_1111_5555_)))),	sent by	function key f15
     _kkkk_eeee_yyyy______ffff_1111_6666		    _kkkk_ffff_1111_6666    _FFFF_6666	     _KKKK_EEEE_YYYY______FFFF_((((_1111_6666_)))),	sent by	function key f16
     _kkkk_eeee_yyyy______ffff_1111_7777		    _kkkk_ffff_1111_7777    _FFFF_7777	     _KKKK_EEEE_YYYY______FFFF_((((_1111_7777_)))),	sent by	function key f17
     _kkkk_eeee_yyyy______ffff_1111_8888		    _kkkk_ffff_1111_8888    _FFFF_8888	     _KKKK_EEEE_YYYY______FFFF_((((_1111_8888_)))),	sent by	function key f18





									PPPPaaaaggggeeee 8888






NNNN									     NNNN



     _kkkk_eeee_yyyy______ffff_1111_9999		    _kkkk_ffff_1111_9999    _FFFF_9999	     _KKKK_EEEE_YYYY______FFFF_((((_1111_9999_)))),	sent by	function key f19
     _kkkk_eeee_yyyy______ffff_2222_0000		    _kkkk_ffff_2222_0000    _FFFF_AAAA	     _KKKK_EEEE_YYYY______FFFF_((((_2222_0000_)))),	sent by	function key f20
     _kkkk_eeee_yyyy______ffff_2222_1111		    _kkkk_ffff_2222_1111    _FFFF_BBBB	     _KKKK_EEEE_YYYY______FFFF_((((_2222_1111_)))),	sent by	function key f21
     _kkkk_eeee_yyyy______ffff_2222_2222		    _kkkk_ffff_2222_2222    _FFFF_CCCC	     _KKKK_EEEE_YYYY______FFFF_((((_2222_2222_)))),	sent by	function key f22
     _kkkk_eeee_yyyy______ffff_2222_3333		    _kkkk_ffff_2222_3333    _FFFF_DDDD	     _KKKK_EEEE_YYYY______FFFF_((((_2222_3333_)))),	sent by	function key f23
     _kkkk_eeee_yyyy______ffff_2222_4444		    _kkkk_ffff_2222_4444    _FFFF_EEEE	     _KKKK_EEEE_YYYY______FFFF_((((_2222_4444_)))),	sent by	function key f24
     _kkkk_eeee_yyyy______ffff_2222_5555		    _kkkk_ffff_2222_5555    _FFFF_FFFF	     _KKKK_EEEE_YYYY______FFFF_((((_2222_5555_)))),	sent by	function key f25
     _kkkk_eeee_yyyy______ffff_2222_6666		    _kkkk_ffff_2222_6666    _FFFF_GGGG	     _KKKK_EEEE_YYYY______FFFF_((((_2222_6666_)))),	sent by	function key f26
     _kkkk_eeee_yyyy______ffff_2222_7777		    _kkkk_ffff_2222_7777    _FFFF_HHHH	     _KKKK_EEEE_YYYY______FFFF_((((_2222_7777_)))),	sent by	function key f27
     _kkkk_eeee_yyyy______ffff_2222_8888		    _kkkk_ffff_2222_8888    _FFFF_IIII	     _KKKK_EEEE_YYYY______FFFF_((((_2222_8888_)))),	sent by	function key f28
     _kkkk_eeee_yyyy______ffff_2222_9999		    _kkkk_ffff_2222_9999    _FFFF_JJJJ	     _KKKK_EEEE_YYYY______FFFF_((((_2222_9999_)))),	sent by	function key f29
     _kkkk_eeee_yyyy______ffff_3333_0000		    _kkkk_ffff_3333_0000    _FFFF_KKKK	     _KKKK_EEEE_YYYY______FFFF_((((_3333_0000_)))),	sent by	function key f30
     _kkkk_eeee_yyyy______ffff_3333_1111		    _kkkk_ffff_3333_1111    _FFFF_LLLL	     _KKKK_EEEE_YYYY______FFFF_((((_3333_1111_)))),	sent by	function key f31
     _kkkk_eeee_yyyy______ffff_3333_2222		    _kkkk_ffff_3333_2222    _FFFF_MMMM	     _KKKK_EEEE_YYYY______FFFF_((((_3333_2222_)))),	sent by	function key f32
     _kkkk_eeee_yyyy______ffff_3333_3333		    _kkkk_ffff_3333_3333    _FFFF_NNNN	     _KKKK_EEEE_YYYY______FFFF_((((_1111_3333_)))),	sent by	function key f13
     _kkkk_eeee_yyyy______ffff_3333_4444		    _kkkk_ffff_3333_4444    _FFFF_OOOO	     _KKKK_EEEE_YYYY______FFFF_((((_3333_4444_)))),	sent by	function key f34
     _kkkk_eeee_yyyy______ffff_3333_5555		    _kkkk_ffff_3333_5555    _FFFF_PPPP	     _KKKK_EEEE_YYYY______FFFF_((((_3333_5555_)))),	sent by	function key f35
     _kkkk_eeee_yyyy______ffff_3333_6666		    _kkkk_ffff_3333_6666    _FFFF_QQQQ	     _KKKK_EEEE_YYYY______FFFF_((((_3333_6666_)))),	sent by	function key f36
     _kkkk_eeee_yyyy______ffff_3333_7777		    _kkkk_ffff_3333_7777    _FFFF_RRRR	     _KKKK_EEEE_YYYY______FFFF_((((_3333_7777_)))),	sent by	function key f37
     _kkkk_eeee_yyyy______ffff_3333_8888		    _kkkk_ffff_3333_8888    _FFFF_SSSS	     _KKKK_EEEE_YYYY______FFFF_((((_3333_8888_)))),	sent by	function key f38
     _kkkk_eeee_yyyy______ffff_3333_9999		    _kkkk_ffff_3333_9999    _FFFF_TTTT	     _KKKK_EEEE_YYYY______FFFF_((((_3333_9999_)))),	sent by	function key f39
     _kkkk_eeee_yyyy______ffff_4444_0000		    _kkkk_ffff_4444_0000    _FFFF_UUUU	     _KKKK_EEEE_YYYY______FFFF_((((_4444_0000_)))),	sent by	function key f40
     _kkkk_eeee_yyyy______ffff_4444_1111		    _kkkk_ffff_4444_1111    _FFFF_VVVV	     _KKKK_EEEE_YYYY______FFFF_((((_4444_1111_)))),	sent by	function key f41
     _kkkk_eeee_yyyy______ffff_4444_2222		    _kkkk_ffff_4444_2222    _FFFF_WWWW	     _KKKK_EEEE_YYYY______FFFF_((((_4444_2222_)))),	sent by	function key f42
     _kkkk_eeee_yyyy______ffff_4444_3333		    _kkkk_ffff_4444_3333    _FFFF_XXXX	     _KKKK_EEEE_YYYY______FFFF_((((_4444_3333_)))),	sent by	function key f43
     _kkkk_eeee_yyyy______ffff_4444_4444		    _kkkk_ffff_4444_4444    _FFFF_YYYY	     _KKKK_EEEE_YYYY______FFFF_((((_4444_4444_)))),	sent by	function key f44
     _kkkk_eeee_yyyy______ffff_4444_5555		    _kkkk_ffff_4444_5555    _FFFF_ZZZZ	     _KKKK_EEEE_YYYY______FFFF_((((_4444_5555_)))),	sent by	function key f45
     _kkkk_eeee_yyyy______ffff_4444_6666		    _kkkk_ffff_4444_6666    _FFFF_aaaa	     _KKKK_EEEE_YYYY______FFFF_((((_4444_6666_)))),	sent by	function key f46
     _kkkk_eeee_yyyy______ffff_4444_7777		    _kkkk_ffff_4444_7777    _FFFF_bbbb	     _KKKK_EEEE_YYYY______FFFF_((((_4444_7777_)))),	sent by	function key f47
     _kkkk_eeee_yyyy______ffff_4444_8888		    _kkkk_ffff_4444_8888    _FFFF_cccc	     _KKKK_EEEE_YYYY______FFFF_((((_4444_8888_)))),	sent by	function key f48
     _kkkk_eeee_yyyy______ffff_4444_9999		    _kkkk_ffff_4444_9999    _FFFF_dddd	     _KKKK_EEEE_YYYY______FFFF_((((_4444_9999_)))),	sent by	function key f49
     _kkkk_eeee_yyyy______ffff_5555_0000		    _kkkk_ffff_5555_0000    _FFFF_eeee	     _KKKK_EEEE_YYYY______FFFF_((((_5555_0000_)))),	sent by	function key f50
     _kkkk_eeee_yyyy______ffff_5555_1111		    _kkkk_ffff_5555_1111    _FFFF_ffff	     _KKKK_EEEE_YYYY______FFFF_((((_5555_1111_)))),	sent by	function key f51
     _kkkk_eeee_yyyy______ffff_5555_2222		    _kkkk_ffff_5555_2222    _FFFF_gggg	     _KKKK_EEEE_YYYY______FFFF_((((_5555_2222_)))),	sent by	function key f52
     _kkkk_eeee_yyyy______ffff_5555_3333		    _kkkk_ffff_5555_3333    _FFFF_hhhh	     _KKKK_EEEE_YYYY______FFFF_((((_5555_3333_)))),	sent by	function key f53
     _kkkk_eeee_yyyy______ffff_5555_4444		    _kkkk_ffff_5555_4444    _FFFF_iiii	     _KKKK_EEEE_YYYY______FFFF_((((_5555_4444_)))),	sent by	function key f54
     _kkkk_eeee_yyyy______ffff_5555_5555		    _kkkk_ffff_5555_5555    _FFFF_jjjj	     _KKKK_EEEE_YYYY______FFFF_((((_5555_5555_)))),	sent by	function key f55
     _kkkk_eeee_yyyy______ffff_5555_6666		    _kkkk_ffff_5555_6666    _FFFF_kkkk	     _KKKK_EEEE_YYYY______FFFF_((((_5555_6666_)))),	sent by	function key f56
     _kkkk_eeee_yyyy______ffff_5555_7777		    _kkkk_ffff_5555_7777    _FFFF_llll	     _KKKK_EEEE_YYYY______FFFF_((((_5555_7777_)))),	sent by	function key f57
     _kkkk_eeee_yyyy______ffff_5555_8888		    _kkkk_ffff_5555_8888    _FFFF_mmmm	     _KKKK_EEEE_YYYY______FFFF_((((_5555_8888_)))),	sent by	function key f58
     _kkkk_eeee_yyyy______ffff_5555_9999		    _kkkk_ffff_5555_9999    _FFFF_nnnn	     _KKKK_EEEE_YYYY______FFFF_((((_5555_9999_)))),	sent by	function key f59
     _kkkk_eeee_yyyy______ffff_6666_0000		    _kkkk_ffff_6666_0000    _FFFF_oooo	     _KKKK_EEEE_YYYY______FFFF_((((_6666_0000_)))),	sent by	function key f60
     _kkkk_eeee_yyyy______ffff_6666_1111		    _kkkk_ffff_6666_1111    _FFFF_pppp	     _KKKK_EEEE_YYYY______FFFF_((((_6666_1111_)))),	sent by	function key f61
     _kkkk_eeee_yyyy______ffff_6666_2222		    _kkkk_ffff_6666_2222    _FFFF_qqqq	     _KKKK_EEEE_YYYY______FFFF_((((_6666_2222_)))),	sent by	function key f62
     _kkkk_eeee_yyyy______ffff_6666_3333		    _kkkk_ffff_6666_3333    _FFFF_rrrr	     _KKKK_EEEE_YYYY______FFFF_((((_6666_3333_)))),	sent by	function key f63
     _kkkk_eeee_yyyy______ffff_iiii_nnnn_dddd		    _kkkk_ffff_nnnn_dddd    _@@@@_0000	     _KKKK_EEEE_YYYY______FFFF_IIII_NNNN_DDDD, sent by find key
     _kkkk_eeee_yyyy______hhhh_eeee_llll_pppp		    _kkkk_hhhh_llll_pppp    _%%%%_1111	     _KKKK_EEEE_YYYY______HHHH_EEEE_LLLL_PPPP, sent by help key
     _kkkk_eeee_yyyy______hhhh_oooo_mmmm_eeee		    _kkkk_hhhh_oooo_mmmm_eeee   _kkkk_hhhh	     _KKKK_EEEE_YYYY______HHHH_OOOO_MMMM_EEEE, sent by home key
     _kkkk_eeee_yyyy______iiii_cccc		    _kkkk_iiii_cccc_hhhh_1111   _kkkk_IIII	     _KKKK_EEEE_YYYY______IIII_CCCC, sent by ins-char/enter
					     ins-mode key





									PPPPaaaaggggeeee 9999






NNNN									     NNNN



     _kkkk_eeee_yyyy______iiii_llll		    _kkkk_iiii_llll_1111    _kkkk_AAAA	     _KKKK_EEEE_YYYY______IIII_LLLL, sent by insert-line key
     _kkkk_eeee_yyyy______llll_eeee_ffff_tttt		    _kkkk_cccc_uuuu_bbbb_1111   _kkkk_llll	     _KKKK_EEEE_YYYY______LLLL_EEEE_FFFF_TTTT, sent by terminal	left-arrow
					     key
     _kkkk_eeee_yyyy______llll_llll		    _kkkk_llll_llll	    _kkkk_HHHH	     _KKKK_EEEE_YYYY______LLLL_LLLL, sent by home-down key
     _kkkk_eeee_yyyy______mmmm_aaaa_rrrr_kkkk		    _kkkk_mmmm_rrrr_kkkk    _%%%%_2222	     _KKKK_EEEE_YYYY______MMMM_AAAA_RRRR_KKKK, sent by mark key
     _kkkk_eeee_yyyy______mmmm_eeee_ssss_ssss_aaaa_gggg_eeee	    _kkkk_mmmm_ssss_gggg    _%%%%_3333	     _KKKK_EEEE_YYYY______MMMM_EEEE_SSSS_SSSS_AAAA_GGGG_EEEE, sent by message key
     _kkkk_eeee_yyyy______mmmm_oooo_vvvv_eeee		    _kkkk_mmmm_oooo_vvvv    _%%%%_4444	     _KKKK_EEEE_YYYY______MMMM_OOOO_VVVV_EEEE, sent by move key
     _kkkk_eeee_yyyy______nnnn_eeee_xxxx_tttt		    _kkkk_nnnn_xxxx_tttt    _%%%%_5555	     _KKKK_EEEE_YYYY______NNNN_EEEE_XXXX_TTTT, sent by next-object key
     _kkkk_eeee_yyyy______nnnn_pppp_aaaa_gggg_eeee		    _kkkk_nnnn_pppp	    _kkkk_NNNN	     _KKKK_EEEE_YYYY______NNNN_PPPP_AAAA_GGGG_EEEE,	sent by	next-page key
     _kkkk_eeee_yyyy______oooo_pppp_eeee_nnnn		    _kkkk_oooo_pppp_nnnn    _%%%%_6666	     _KKKK_EEEE_YYYY______OOOO_PPPP_EEEE_NNNN, sent by open key
     _kkkk_eeee_yyyy______oooo_pppp_tttt_iiii_oooo_nnnn_ssss	    _kkkk_oooo_pppp_tttt    _%%%%_7777	     _KKKK_EEEE_YYYY______OOOO_PPPP_TTTT_IIII_OOOO_NNNN_SSSS, sent by options key
     _kkkk_eeee_yyyy______pppp_pppp_aaaa_gggg_eeee		    _kkkk_pppp_pppp	    _kkkk_PPPP	     _KKKK_EEEE_YYYY______PPPP_PPPP_AAAA_GGGG_EEEE,	sent by	previous-page key
     _kkkk_eeee_yyyy______pppp_rrrr_eeee_vvvv_iiii_oooo_uuuu_ssss	    _kkkk_pppp_rrrr_vvvv    _%%%%_8888	     _KKKK_EEEE_YYYY______PPPP_RRRR_EEEE_VVVV_IIII_OOOO_UUUU_SSSS, sent	by previous-object
					     key
     _kkkk_eeee_yyyy______pppp_rrrr_iiii_nnnn_tttt		    _kkkk_pppp_rrrr_tttt    _%%%%_9999	     _KKKK_EEEE_YYYY______PPPP_RRRR_IIII_NNNN_TTTT,	sent by	print or copy key
     _kkkk_eeee_yyyy______rrrr_eeee_dddd_oooo		    _kkkk_rrrr_dddd_oooo    _%%%%_0000	     _KKKK_EEEE_YYYY______RRRR_EEEE_DDDD_OOOO, sent by redo key
     _kkkk_eeee_yyyy______rrrr_eeee_ffff_eeee_rrrr_eeee_nnnn_cccc_eeee	    _kkkk_rrrr_eeee_ffff    _&&&&_1111	     _KKKK_EEEE_YYYY______RRRR_EEEE_FFFF_EEEE_RRRR_EEEE_NNNN_CCCC_EEEE, sent by ref(erence)	key
     _kkkk_eeee_yyyy______rrrr_eeee_ffff_rrrr_eeee_ssss_hhhh	    _kkkk_rrrr_ffff_rrrr    _&&&&_2222	     _KKKK_EEEE_YYYY______RRRR_EEEE_FFFF_RRRR_EEEE_SSSS_HHHH, sent by refresh key
     _kkkk_eeee_yyyy______rrrr_eeee_pppp_llll_aaaa_cccc_eeee	    _kkkk_rrrr_pppp_llll    _&&&&_3333	     _KKKK_EEEE_YYYY______RRRR_EEEE_PPPP_LLLL_AAAA_CCCC_EEEE, sent by replace key
     _kkkk_eeee_yyyy______rrrr_eeee_ssss_tttt_aaaa_rrrr_tttt	    _kkkk_rrrr_ssss_tttt    _&&&&_4444	     _KKKK_EEEE_YYYY______RRRR_EEEE_SSSS_TTTT_AAAA_RRRR_TTTT, sent by restart key
     _kkkk_eeee_yyyy______rrrr_eeee_ssss_uuuu_mmmm_eeee		    _kkkk_rrrr_eeee_ssss    _&&&&_5555	     _KKKK_EEEE_YYYY______RRRR_EEEE_SSSS_UUUU_MMMM_EEEE, sent by resume	key
     _kkkk_eeee_yyyy______rrrr_iiii_gggg_hhhh_tttt		    _kkkk_cccc_uuuu_ffff_1111   _kkkk_rrrr	     _KKKK_EEEE_YYYY______RRRR_IIII_GGGG_HHHH_TTTT,	sent by	terminal
					     right-arrow key
     _kkkk_eeee_yyyy______ssss_aaaa_vvvv_eeee		    _kkkk_ssss_aaaa_vvvv    _&&&&_6666	     _KKKK_EEEE_YYYY______SSSS_AAAA_VVVV_EEEE, sent by save key
     _kkkk_eeee_yyyy______ssss_bbbb_eeee_gggg		    _kkkk_BBBB_EEEE_GGGG    _&&&&_9999	     _KKKK_EEEE_YYYY______SSSS_BBBB_EEEE_GGGG, sent by shifted beginning key
     _kkkk_eeee_yyyy______ssss_cccc_aaaa_nnnn_cccc_eeee_llll	    _kkkk_CCCC_AAAA_NNNN    _&&&&_0000	     _KKKK_EEEE_YYYY______SSSS_CCCC_AAAA_NNNN_CCCC_EEEE_LLLL, sent by shifted cancel key
     _kkkk_eeee_yyyy______ssss_cccc_oooo_mmmm_mmmm_aaaa_nnnn_dddd	    _kkkk_CCCC_MMMM_DDDD    _****_1111	     _KKKK_EEEE_YYYY______SSSS_CCCC_OOOO_MMMM_MMMM_AAAA_NNNN_DDDD, sent	by shifted
					     command key
     _kkkk_eeee_yyyy______ssss_cccc_oooo_pppp_yyyy		    _kkkk_CCCC_PPPP_YYYY    _****_2222	     _KKKK_EEEE_YYYY______SSSS_CCCC_OOOO_PPPP_YYYY,	sent by	shifted	copy key
     _kkkk_eeee_yyyy______ssss_cccc_rrrr_eeee_aaaa_tttt_eeee	    _kkkk_CCCC_RRRR_TTTT    _****_3333	     _KKKK_EEEE_YYYY______SSSS_CCCC_RRRR_EEEE_AAAA_TTTT_EEEE, sent by shifted create key
     _kkkk_eeee_yyyy______ssss_dddd_cccc		    _kkkk_DDDD_CCCC	    _****_4444	     _KKKK_EEEE_YYYY______SSSS_DDDD_CCCC, sent by shifted delete-char key
     _kkkk_eeee_yyyy______ssss_dddd_llll		    _kkkk_DDDD_LLLL	    _****_5555	     _KKKK_EEEE_YYYY______SSSS_DDDD_LLLL, sent by shifted delete-line key
     _kkkk_eeee_yyyy______ssss_eeee_llll_eeee_cccc_tttt		    _kkkk_ssss_llll_tttt    _****_6666	     _KKKK_EEEE_YYYY______SSSS_EEEE_LLLL_EEEE_CCCC_TTTT, sent by select	key
     _kkkk_eeee_yyyy______ssss_eeee_nnnn_dddd		    _kkkk_EEEE_NNNN_DDDD    _****_7777	     _KKKK_EEEE_YYYY______SSSS_EEEE_NNNN_DDDD, sent by shifted end key
     _kkkk_eeee_yyyy______ssss_eeee_oooo_llll		    _kkkk_EEEE_OOOO_LLLL    _****_8888	     _KKKK_EEEE_YYYY______SSSS_EEEE_OOOO_LLLL, sent by shifted clear-line key
     _kkkk_eeee_yyyy______ssss_eeee_xxxx_iiii_tttt		    _kkkk_EEEE_XXXX_TTTT    _****_9999	     _KKKK_EEEE_YYYY______SSSS_EEEE_XXXX_IIII_TTTT,	sent by	shifted	exit key
     _kkkk_eeee_yyyy______ssss_ffff		    _kkkk_iiii_nnnn_dddd    _kkkk_FFFF	     _KKKK_EEEE_YYYY______SSSS_FFFF, sent by scroll-forward/down
					     key
     _kkkk_eeee_yyyy______ssss_ffff_iiii_nnnn_dddd		    _kkkk_FFFF_NNNN_DDDD    _****_0000	     _KKKK_EEEE_YYYY______SSSS_FFFF_IIII_NNNN_DDDD,	sent by	shifted	find key
     _kkkk_eeee_yyyy______ssss_hhhh_eeee_llll_pppp		    _kkkk_HHHH_LLLL_PPPP    _####_1111	     _KKKK_EEEE_YYYY______SSSS_HHHH_EEEE_LLLL_PPPP,	sent by	shifted	help key
     _kkkk_eeee_yyyy______ssss_hhhh_oooo_mmmm_eeee		    _kkkk_HHHH_OOOO_MMMM    _####_2222	     _KKKK_EEEE_YYYY______SSSS_HHHH_OOOO_MMMM_EEEE,	sent by	shifted	home key
     _kkkk_eeee_yyyy______ssss_iiii_cccc		    _kkkk_IIII_CCCC	    _####_3333	     _KKKK_EEEE_YYYY______SSSS_IIII_CCCC, sent by shifted input key
     _kkkk_eeee_yyyy______ssss_llll_eeee_ffff_tttt		    _kkkk_LLLL_FFFF_TTTT    _####_4444	     _KKKK_EEEE_YYYY______SSSS_LLLL_EEEE_FFFF_TTTT,	sent by	shifted	left-arrow
					     key
     _kkkk_eeee_yyyy______ssss_mmmm_eeee_ssss_ssss_aaaa_gggg_eeee	    _kkkk_MMMM_SSSS_GGGG    _%%%%_aaaa	     _KKKK_EEEE_YYYY______SSSS_MMMM_EEEE_SSSS_SSSS_AAAA_GGGG_EEEE, sent	by shifted message
					     key
     _kkkk_eeee_yyyy______ssss_mmmm_oooo_vvvv_eeee		    _kkkk_MMMM_OOOO_VVVV    _%%%%_bbbb	     _KKKK_EEEE_YYYY______SSSS_MMMM_OOOO_VVVV_EEEE,	sent by	shifted	move key
     _kkkk_eeee_yyyy______ssss_nnnn_eeee_xxxx_tttt		    _kkkk_NNNN_XXXX_TTTT    _%%%%_cccc	     _KKKK_EEEE_YYYY______SSSS_NNNN_EEEE_XXXX_TTTT,	sent by	shifted	next key
     _kkkk_eeee_yyyy______ssss_oooo_pppp_tttt_iiii_oooo_nnnn_ssss	    _kkkk_OOOO_PPPP_TTTT    _%%%%_dddd	     _KKKK_EEEE_YYYY______SSSS_OOOO_PPPP_TTTT_IIII_OOOO_NNNN_SSSS, sent	by shifted options
					     key





								       PPPPaaaaggggeeee 11110000






NNNN									     NNNN



     _kkkk_eeee_yyyy______ssss_pppp_rrrr_eeee_vvvv_iiii_oooo_uuuu_ssss	    _kkkk_PPPP_RRRR_VVVV    _%%%%_eeee	     _KKKK_EEEE_YYYY______SSSS_PPPP_RRRR_EEEE_VVVV_IIII_OOOO_UUUU_SSSS, sent by shifted prev
					     key
     _kkkk_eeee_yyyy______ssss_pppp_rrrr_iiii_nnnn_tttt		    _kkkk_PPPP_RRRR_TTTT    _%%%%_ffff	     _KKKK_EEEE_YYYY______SSSS_PPPP_RRRR_IIII_NNNN_TTTT, sent by shifted print key
     _kkkk_eeee_yyyy______ssss_rrrr		    _kkkk_rrrr_iiii	    _kkkk_RRRR	     _KKKK_EEEE_YYYY______SSSS_RRRR, sent by scroll-backward/up
					     key
     _kkkk_eeee_yyyy______ssss_rrrr_eeee_dddd_oooo		    _kkkk_RRRR_DDDD_OOOO    _%%%%_gggg	     _KKKK_EEEE_YYYY______SSSS_RRRR_EEEE_DDDD_OOOO,	sent by	shifted	redo key
     _kkkk_eeee_yyyy______ssss_rrrr_eeee_pppp_llll_aaaa_cccc_eeee	    _kkkk_RRRR_PPPP_LLLL    _%%%%_hhhh	     _KKKK_EEEE_YYYY______SSSS_RRRR_EEEE_PPPP_LLLL_AAAA_CCCC_EEEE, sent	by shifted replace
					     key
     _kkkk_eeee_yyyy______ssss_rrrr_iiii_gggg_hhhh_tttt		    _kkkk_RRRR_IIII_TTTT    _%%%%_iiii	     _KKKK_EEEE_YYYY______SSSS_RRRR_IIII_GGGG_HHHH_TTTT, sent by shifted
					     right-arrow key
     _kkkk_eeee_yyyy______ssss_rrrr_ssss_uuuu_mmmm_eeee		    _kkkk_RRRR_EEEE_SSSS    _%%%%_jjjj	     _KKKK_EEEE_YYYY______SSSS_RRRR_SSSS_UUUU_MMMM_EEEE, sent by shifted resume
					     key
     _kkkk_eeee_yyyy______ssss_ssss_aaaa_vvvv_eeee		    _kkkk_SSSS_AAAA_VVVV    _!!!!_1111	     _KKKK_EEEE_YYYY______SSSS_SSSS_AAAA_VVVV_EEEE,	sent by	shifted	save key
     _kkkk_eeee_yyyy______ssss_ssss_uuuu_ssss_pppp_eeee_nnnn_dddd	    _kkkk_SSSS_PPPP_DDDD    _!!!!_2222	     _KKKK_EEEE_YYYY______SSSS_SSSS_UUUU_SSSS_PPPP_EEEE_NNNN_DDDD, sent	by shifted suspend
					     key
     _kkkk_eeee_yyyy______ssss_tttt_aaaa_bbbb		    _kkkk_hhhh_tttt_ssss    _kkkk_TTTT	     _KKKK_EEEE_YYYY______SSSS_TTTT_AAAA_BBBB, sent by set-tab key
     _kkkk_eeee_yyyy______ssss_uuuu_nnnn_dddd_oooo		    _kkkk_UUUU_NNNN_DDDD    _!!!!_3333	     _KKKK_EEEE_YYYY______SSSS_UUUU_NNNN_DDDD_OOOO,	sent by	shifted	undo key
     _kkkk_eeee_yyyy______ssss_uuuu_ssss_pppp_eeee_nnnn_dddd	    _kkkk_ssss_pppp_dddd    _&&&&_7777	     _KKKK_EEEE_YYYY______SSSS_UUUU_SSSS_PPPP_EEEE_NNNN_DDDD, sent by
					     suspend key
     _kkkk_eeee_yyyy______uuuu_nnnn_dddd_oooo		    _kkkk_uuuu_nnnn_dddd    _&&&&_8888	     _KKKK_EEEE_YYYY______UUUU_NNNN_DDDD_OOOO, sent by undo key
     _kkkk_eeee_yyyy______uuuu_pppp		    _kkkk_cccc_uuuu_uuuu_1111   _kkkk_uuuu	     _KKKK_EEEE_YYYY______UUUU_PPPP, sent by terminal up-arrow key
     _kkkk_eeee_yyyy_pppp_aaaa_dddd______llll_oooo_cccc_aaaa_llll	    _rrrr_mmmm_kkkk_xxxx    _kkkk_eeee	     Out of ``keypad-transmit''	mode
     _kkkk_eeee_yyyy_pppp_aaaa_dddd______xxxx_mmmm_iiii_tttt	    _ssss_mmmm_kkkk_xxxx    _kkkk_ssss	     Put terminal in ``keypad-transmit'' mode
     _llll_aaaa_bbbb______ffff_0000		    _llll_ffff_0000	    _llll_0000	     Labels on function	key f0 if not f0
     _llll_aaaa_bbbb______ffff_1111		    _llll_ffff_1111	    _llll_1111	     Labels on function	key f1 if not f1
     _llll_aaaa_bbbb______ffff_2222		    _llll_ffff_2222	    _llll_2222	     Labels on function	key f2 if not f2
     _llll_aaaa_bbbb______ffff_3333		    _llll_ffff_3333	    _llll_3333	     Labels on function	key f3 if not f3
     _llll_aaaa_bbbb______ffff_4444		    _llll_ffff_4444	    _llll_4444	     Labels on function	key f4 if not f4
     _llll_aaaa_bbbb______ffff_5555		    _llll_ffff_5555	    _llll_5555	     Labels on function	key f5 if not f5
     _llll_aaaa_bbbb______ffff_6666		    _llll_ffff_6666	    _llll_6666	     Labels on function	key f6 if not f6
     _llll_aaaa_bbbb______ffff_7777		    _llll_ffff_7777	    _llll_7777	     Labels on function	key f7 if not f7
     _llll_aaaa_bbbb______ffff_8888		    _llll_ffff_8888	    _llll_8888	     Labels on function	key f8 if not f8
     _llll_aaaa_bbbb______ffff_9999		    _llll_ffff_9999	    _llll_9999	     Labels on function	key f9 if not f9
     _llll_aaaa_bbbb______ffff_1111_0000		    _llll_ffff_1111_0000    _llll_aaaa	     Labels on function	key f10	if not f10
     _llll_aaaa_bbbb_eeee_llll______oooo_ffff_ffff		    _rrrr_mmmm_llll_nnnn    _LLLL_FFFF	     Turn off soft labels
     _llll_aaaa_bbbb_eeee_llll______oooo_nnnn		    _ssss_mmmm_llll_nnnn    _LLLL_OOOO	     Turn on soft labels
     _mmmm_eeee_tttt_aaaa______oooo_ffff_ffff		    _rrrr_mmmm_mmmm	    _mmmm_oooo	     Turn off "meta mode"
     _mmmm_eeee_tttt_aaaa______oooo_nnnn		    _ssss_mmmm_mmmm	    _mmmm_mmmm	     Turn on "meta mode" (8th bit)
     _mmmm_iiii_cccc_rrrr_oooo______cccc_oooo_llll_uuuu_mmmm_nnnn______aaaa_dddd_dddd_rrrr_eeee_ssss_ssss   _mmmm_hhhh_pppp_aaaa    _ZZZZ_YYYY	     Like _cccc_oooo_llll_uuuu_mmmm_nnnn______aaaa_dddd_dddd_rrrr_eeee_ssss_ssss for micro
					     adjustment
     _mmmm_iiii_cccc_rrrr_oooo______dddd_oooo_wwww_nnnn		    _mmmm_cccc_uuuu_dddd_1111   _ZZZZ_ZZZZ	     Like _cccc_uuuu_rrrr_ssss_oooo_rrrr______dddd_oooo_wwww_nnnn for micro	adjustment
     _mmmm_iiii_cccc_rrrr_oooo______llll_eeee_ffff_tttt		    _mmmm_cccc_uuuu_bbbb_1111   _ZZZZ_aaaa	     Like _cccc_uuuu_rrrr_ssss_oooo_rrrr______llll_eeee_ffff_tttt for micro	adjustment
     _mmmm_iiii_cccc_rrrr_oooo______rrrr_iiii_gggg_hhhh_tttt	    _mmmm_cccc_uuuu_ffff_1111   _ZZZZ_bbbb	     Like _cccc_uuuu_rrrr_ssss_oooo_rrrr______rrrr_iiii_gggg_hhhh_tttt for micro
					     adjustment
     _mmmm_iiii_cccc_rrrr_oooo______rrrr_oooo_wwww______aaaa_dddd_dddd_rrrr_eeee_ssss_ssss	    _mmmm_vvvv_pppp_aaaa    _ZZZZ_cccc	     Like _rrrr_oooo_wwww______aaaa_dddd_dddd_rrrr_eeee_ssss_ssss for micro	adjustment
     _mmmm_iiii_cccc_rrrr_oooo______uuuu_pppp		    _mmmm_cccc_uuuu_uuuu_1111   _ZZZZ_dddd	     Like _cccc_uuuu_rrrr_ssss_oooo_rrrr______uuuu_pppp for	micro adjustment
     _nnnn_eeee_wwww_llll_iiii_nnnn_eeee		    _nnnn_eeee_llll	    _nnnn_wwww	     Newline (behaves like _cccc_rrrr followed
					     by	_llll_ffff)
     _oooo_rrrr_dddd_eeee_rrrr______oooo_ffff______pppp_iiii_nnnn_ssss	    _pppp_oooo_rrrr_dddd_eeee_rrrr  _ZZZZ_eeee	     Matches software bits to print-head pins
     _oooo_rrrr_iiii_gggg______cccc_oooo_llll_oooo_rrrr_ssss	    _oooo_cccc	    _oooo_cccc	     Set all color(-pair)s to the original ones





								       PPPPaaaaggggeeee 11111111






NNNN									     NNNN



     _oooo_rrrr_iiii_gggg______pppp_aaaa_iiii_rrrr		    _oooo_pppp	    _oooo_pppp	     Set default color-pair to the original one
     _pppp_aaaa_dddd______cccc_hhhh_aaaa_rrrr		    _pppp_aaaa_dddd	    _pppp_cccc	     Pad character (rather than	null)
     _pppp_aaaa_rrrr_mmmm______dddd_cccc_hhhh		    _dddd_cccc_hhhh	    _DDDD_CCCC	     Delete #1 chars
     _pppp_aaaa_rrrr_mmmm______dddd_eeee_llll_eeee_tttt_eeee______llll_iiii_nnnn_eeee	    _dddd_llll	    _DDDD_LLLL	     Delete #1 lines
     _pppp_aaaa_rrrr_mmmm______dddd_oooo_wwww_nnnn______cccc_uuuu_rrrr_ssss_oooo_rrrr	    _cccc_uuuu_dddd	    _DDDD_OOOO	     Move down #1 lines.
     _pppp_aaaa_rrrr_mmmm______dddd_oooo_wwww_nnnn______mmmm_iiii_cccc_rrrr_oooo	    _mmmm_cccc_uuuu_dddd    _ZZZZ_ffff	     Like _pppp_aaaa_rrrr_mmmm______dddd_oooo_wwww_nnnn______cccc_uuuu_rrrr_ssss_oooo_rrrr for micro
					     adjust.
     _pppp_aaaa_rrrr_mmmm______iiii_cccc_hhhh		    _iiii_cccc_hhhh	    _IIII_CCCC	     Insert #1 blank chars
     _pppp_aaaa_rrrr_mmmm______iiii_nnnn_dddd_eeee_xxxx		    _iiii_nnnn_dddd_nnnn    _SSSS_FFFF	     Scroll forward #1 lines.
     _pppp_aaaa_rrrr_mmmm______iiii_nnnn_ssss_eeee_rrrr_tttt______llll_iiii_nnnn_eeee	    _iiii_llll	    _AAAA_LLLL	     Add #1 new	blank lines
     _pppp_aaaa_rrrr_mmmm______llll_eeee_ffff_tttt______cccc_uuuu_rrrr_ssss_oooo_rrrr	    _cccc_uuuu_bbbb	    _LLLL_EEEE	     Move cursor left #1 spaces
     _pppp_aaaa_rrrr_mmmm______llll_eeee_ffff_tttt______mmmm_iiii_cccc_rrrr_oooo	    _mmmm_cccc_uuuu_bbbb    _ZZZZ_gggg	     Like _pppp_aaaa_rrrr_mmmm______llll_eeee_ffff_tttt______cccc_uuuu_rrrr_ssss_oooo_rrrr for micro
					     adjust.
     _pppp_aaaa_rrrr_mmmm______rrrr_iiii_gggg_hhhh_tttt______cccc_uuuu_rrrr_ssss_oooo_rrrr	    _cccc_uuuu_ffff	    _RRRR_IIII	     Move right	#1 spaces.
     _pppp_aaaa_rrrr_mmmm______rrrr_iiii_gggg_hhhh_tttt______mmmm_iiii_cccc_rrrr_oooo	    _mmmm_cccc_uuuu_ffff    _ZZZZ_hhhh	     Like _pppp_aaaa_rrrr_mmmm______rrrr_iiii_gggg_hhhh_tttt______cccc_uuuu_rrrr_ssss_oooo_rrrr for	micro
					     adjust.
     _pppp_aaaa_rrrr_mmmm______rrrr_iiii_nnnn_dddd_eeee_xxxx	    _rrrr_iiii_nnnn	    _SSSS_RRRR	     Scroll backward #1	lines.
     _pppp_aaaa_rrrr_mmmm______uuuu_pppp______cccc_uuuu_rrrr_ssss_oooo_rrrr	    _cccc_uuuu_uuuu	    _UUUU_PPPP	     Move cursor up #1 lines.
     _pppp_aaaa_rrrr_mmmm______uuuu_pppp______mmmm_iiii_cccc_rrrr_oooo	    _mmmm_cccc_uuuu_uuuu    _ZZZZ_iiii	     Like _pppp_aaaa_rrrr_mmmm______uuuu_pppp______cccc_uuuu_rrrr_ssss_oooo_rrrr for micro adjust.
     _pppp_cccc______tttt_eeee_rrrr_mmmm______oooo_pppp_tttt_iiii_oooo_nnnn_ssss	    _pppp_cccc_tttt_rrrr_mmmm   _SSSS_6666	     PC	terminal options
     _pppp_kkkk_eeee_yyyy______kkkk_eeee_yyyy		    _pppp_ffff_kkkk_eeee_yyyy   _pppp_kkkk	     Prog funct	key #1 to type string #2
     _pppp_kkkk_eeee_yyyy______llll_oooo_cccc_aaaa_llll		    _pppp_ffff_llll_oooo_cccc   _pppp_llll	     Prog funct	key #1 to execute string #2
     _pppp_kkkk_eeee_yyyy______pppp_llll_aaaa_bbbb		    _pppp_ffff_xxxx_llll    _xxxx_llll	     Prog key #1 to xmit string	#2 and show string #3
     _pppp_kkkk_eeee_yyyy______xxxx_mmmm_iiii_tttt		    _pppp_ffff_xxxx	    _pppp_xxxx	     Prog funct	key #1 to xmit string #2
     _pppp_llll_aaaa_bbbb______nnnn_oooo_rrrr_mmmm		    _pppp_llll_nnnn	    _pppp_nnnn	     Prog label	#1 to show string #2
     _pppp_rrrr_iiii_nnnn_tttt______ssss_cccc_rrrr_eeee_eeee_nnnn	    _mmmm_cccc_0000	    _pppp_ssss	     Print contents of the screen
     _pppp_rrrr_tttt_rrrr______nnnn_oooo_nnnn		    _mmmm_cccc_5555_pppp    _pppp_OOOO	     Turn on the printer for #1	bytes
     _pppp_rrrr_tttt_rrrr______oooo_ffff_ffff		    _mmmm_cccc_4444	    _pppp_ffff	     Turn off the printer
     _pppp_rrrr_tttt_rrrr______oooo_nnnn		    _mmmm_cccc_5555	    _pppp_oooo	     Turn on the printer
     _rrrr_eeee_pppp_eeee_aaaa_tttt______cccc_hhhh_aaaa_rrrr	    _rrrr_eeee_pppp	    _rrrr_pppp	     Repeat char #1 #2 times
     _rrrr_eeee_qqqq______ffff_oooo_rrrr______iiii_nnnn_pppp_uuuu_tttt	    _rrrr_ffff_iiii	    _RRRR_FFFF	     Send next input char (for ptys)
     _rrrr_eeee_ssss_eeee_tttt______1111_ssss_tttt_rrrr_iiii_nnnn_gggg	    _rrrr_ssss_1111	    _rrrr_1111	     Reset terminal completely to sane modes
     _rrrr_eeee_ssss_eeee_tttt______2222_ssss_tttt_rrrr_iiii_nnnn_gggg	    _rrrr_ssss_2222	    _rrrr_2222	     Reset terminal completely to sane modes
     _rrrr_eeee_ssss_eeee_tttt______3333_ssss_tttt_rrrr_iiii_nnnn_gggg	    _rrrr_ssss_3333	    _rrrr_3333	     Reset terminal completely to sane modes
     _rrrr_eeee_ssss_eeee_tttt______ffff_iiii_llll_eeee		    _rrrr_ffff	    _rrrr_ffff	     Name of file containing reset string
     _rrrr_eeee_ssss_tttt_oooo_rrrr_eeee______cccc_uuuu_rrrr_ssss_oooo_rrrr	    _rrrr_cccc	    _rrrr_cccc	     Restore cursor to position	of last	sc
     _rrrr_oooo_wwww______aaaa_dddd_dddd_rrrr_eeee_ssss_ssss	    _vvvv_pppp_aaaa	    _cccc_vvvv	     Vertical position absolute
     _ssss_aaaa_vvvv_eeee______cccc_uuuu_rrrr_ssss_oooo_rrrr	    _ssss_cccc	    _ssss_cccc	     Save cursor position
     _ssss_cccc_aaaa_nnnn_cccc_oooo_dddd_eeee______eeee_ssss_cccc_aaaa_pppp_eeee	    _ssss_cccc_eeee_ssss_cccc   _SSSS_7777	     Escape for	scancode emulation
     _ssss_cccc_rrrr_oooo_llll_llll______ffff_oooo_rrrr_wwww_aaaa_rrrr_dddd	    _iiii_nnnn_dddd	    _ssss_ffff	     Scroll text up
     _ssss_cccc_rrrr_oooo_llll_llll______rrrr_eeee_vvvv_eeee_rrrr_ssss_eeee	    _rrrr_iiii	    _ssss_rrrr	     Scroll text down
     _ssss_eeee_llll_eeee_cccc_tttt______cccc_hhhh_aaaa_rrrr______ssss_eeee_tttt	    _ssss_cccc_ssss	    _ZZZZ_jjjj	     Select character set
     _ssss_eeee_tttt_0000______dddd_eeee_ssss______ssss_eeee_qqqq	    _ssss_0000_dddd_ssss    _ssss_0000	     Shift into	codeset	0 (EUC set 0, ASCII)
     _ssss_eeee_tttt_1111______dddd_eeee_ssss______ssss_eeee_qqqq	    _ssss_1111_dddd_ssss    _ssss_1111	     Shift into	codeset	1
     _ssss_eeee_tttt_2222______dddd_eeee_ssss______ssss_eeee_qqqq	    _ssss_2222_dddd_ssss    _ssss_2222	     Shift into	codeset	2
     _ssss_eeee_tttt_3333______dddd_eeee_ssss______ssss_eeee_qqqq	    _ssss_3333_dddd_ssss    _ssss_3333	     Shift into	codeset	3
     _ssss_eeee_tttt______aaaa______bbbb_aaaa_cccc_kkkk_gggg_rrrr_oooo_uuuu_nnnn_dddd	    _ssss_eeee_tttt_aaaa_bbbb   _AAAA_BBBB	     Set background color using	ANSI escape
     _ssss_eeee_tttt______aaaa______ffff_oooo_rrrr_eeee_gggg_rrrr_oooo_uuuu_nnnn_dddd	    _ssss_eeee_tttt_aaaa_ffff   _AAAA_FFFF	     Set foreground color using	ANSI escape
     _ssss_eeee_tttt______aaaa_tttt_tttt_rrrr_iiii_bbbb_uuuu_tttt_eeee_ssss	    _ssss_gggg_rrrr	    _ssss_aaaa	     Define the	video attributes #1-#9
     _ssss_eeee_tttt______bbbb_aaaa_cccc_kkkk_gggg_rrrr_oooo_uuuu_nnnn_dddd	    _ssss_eeee_tttt_bbbb    _SSSS_bbbb	     Set current background color





								       PPPPaaaaggggeeee 11112222






NNNN									     NNNN



     _ssss_eeee_tttt______bbbb_oooo_tttt_tttt_oooo_mmmm______mmmm_aaaa_rrrr_gggg_iiii_nnnn	    _ssss_mmmm_gggg_bbbb    _ZZZZ_kkkk	     Set bottom	margin at current line
     _ssss_eeee_tttt______bbbb_oooo_tttt_tttt_oooo_mmmm______mmmm_aaaa_rrrr_gggg_iiii_nnnn______pppp_aaaa_rrrr_mmmm _ssss_mmmm_gggg_bbbb_pppp   _ZZZZ_llll	     Set bottom	margin at line #1 or #2
					     lines from	bottom
     _ssss_eeee_tttt______cccc_oooo_llll_oooo_rrrr______bbbb_aaaa_nnnn_dddd	    _ssss_eeee_tttt_cccc_oooo_llll_oooo_rrrr_YYYY_zzzz	     Change to ribbon color #1
     _ssss_eeee_tttt______cccc_oooo_llll_oooo_rrrr______pppp_aaaa_iiii_rrrr	    _ssss_cccc_pppp	    _ssss_pppp	     Set current color-pair
     _ssss_eeee_tttt______ffff_oooo_rrrr_eeee_gggg_rrrr_oooo_uuuu_nnnn_dddd	    _ssss_eeee_tttt_ffff    _SSSS_ffff	     Set current foreground color1
     _ssss_eeee_tttt______llll_eeee_ffff_tttt______mmmm_aaaa_rrrr_gggg_iiii_nnnn	    _ssss_mmmm_gggg_llll    _MMMM_LLLL	     Set left margin at	current	line
     _ssss_eeee_tttt______llll_eeee_ffff_tttt______mmmm_aaaa_rrrr_gggg_iiii_nnnn______pppp_aaaa_rrrr_mmmm   _ssss_mmmm_gggg_llll_pppp   _ZZZZ_mmmm	     Set left (right) margin at	column #1 (#2)
     _ssss_eeee_tttt______llll_rrrr______mmmm_aaaa_rrrr_gggg_iiii_nnnn	    _ssss_mmmm_gggg_llll_rrrr   _MMMM_LLLL	     Sets both left and	right margins
     _ssss_eeee_tttt______pppp_aaaa_gggg_eeee______llll_eeee_nnnn_gggg_tttt_hhhh	    _ssss_llll_iiii_nnnn_eeee_ssss  _YYYY_ZZZZ	     Set page length to	#1 lines (use tparm)
     _ssss_eeee_tttt______pppp_gggg_llll_eeee_nnnn______iiii_nnnn_cccc_hhhh	    _ssss_llll_eeee_nnnn_gggg_tttt_hhhh _YYYY_IIII	     Set page length to	#1 hundredths of an inch (use tparm)
     _ssss_eeee_tttt______rrrr_iiii_gggg_hhhh_tttt______mmmm_aaaa_rrrr_gggg_iiii_nnnn	    _ssss_mmmm_gggg_rrrr    _MMMM_RRRR	     Set right margin at current column
     _ssss_eeee_tttt______rrrr_iiii_gggg_hhhh_tttt______mmmm_aaaa_rrrr_gggg_iiii_nnnn______pppp_aaaa_rrrr_mmmm  _ssss_mmmm_gggg_rrrr_pppp   _ZZZZ_nnnn	     Set right margin at column	#1
     _ssss_eeee_tttt______tttt_aaaa_bbbb		    _hhhh_tttt_ssss	    _ssss_tttt	     Set a tab in all rows, current column
     _ssss_eeee_tttt______tttt_bbbb______mmmm_aaaa_rrrr_gggg_iiii_nnnn	    _ssss_mmmm_gggg_tttt_bbbb   _MMMM_TTTT	     Sets both top and bottom margins
     _ssss_eeee_tttt______tttt_oooo_pppp______mmmm_aaaa_rrrr_gggg_iiii_nnnn	    _ssss_mmmm_gggg_tttt    _ZZZZ_oooo	     Set top margin at current line
     _ssss_eeee_tttt______tttt_oooo_pppp______mmmm_aaaa_rrrr_gggg_iiii_nnnn______pppp_aaaa_rrrr_mmmm    _ssss_mmmm_gggg_tttt_pppp   _ZZZZ_pppp	     Set top (bottom) margin at	line #1	(#2)
     _ssss_eeee_tttt______wwww_iiii_nnnn_dddd_oooo_wwww		    _wwww_iiii_nnnn_dddd    _wwww_iiii	     Current window is lines #1-#2 cols	#3-#4
     _ssss_tttt_aaaa_rrrr_tttt______bbbb_iiii_tttt______iiii_mmmm_aaaa_gggg_eeee	    _ssss_bbbb_iiii_mmmm    _ZZZZ_qqqq	     Start printing bit	image graphics
     _ssss_tttt_aaaa_rrrr_tttt______cccc_hhhh_aaaa_rrrr______ssss_eeee_tttt______dddd_eeee_ffff	    _ssss_cccc_ssss_dddd    _ZZZZ_rrrr	     Start definition of a character set
     _ssss_tttt_oooo_pppp______bbbb_iiii_tttt______iiii_mmmm_aaaa_gggg_eeee	    _rrrr_bbbb_iiii_mmmm    _ZZZZ_ssss	     End printing bit image graphics
     _ssss_tttt_oooo_pppp______cccc_hhhh_aaaa_rrrr______ssss_eeee_tttt______dddd_eeee_ffff	    _rrrr_cccc_ssss_dddd    _ZZZZ_tttt	     End definition of a character set
     _ssss_uuuu_bbbb_ssss_cccc_rrrr_iiii_pppp_tttt______cccc_hhhh_aaaa_rrrr_aaaa_cccc_tttt_eeee_rrrr_ssss   _ssss_uuuu_bbbb_cccc_ssss   _ZZZZ_uuuu	     List of ``subscript-able''	characters
     _ssss_uuuu_pppp_eeee_rrrr_ssss_cccc_rrrr_iiii_pppp_tttt______cccc_hhhh_aaaa_rrrr_aaaa_cccc_tttt_eeee_rrrr_ssss _ssss_uuuu_pppp_cccc_ssss   _ZZZZ_vvvv	     List of ``superscript-able'' characters
     _tttt_aaaa_bbbb		    _hhhh_tttt	    _tttt_aaaa	     Tab to next 8-space hardware tab stop
     _tttt_hhhh_eeee_ssss_eeee______cccc_aaaa_uuuu_ssss_eeee______cccc_rrrr	    _dddd_oooo_cccc_rrrr    _ZZZZ_wwww	     Printing any of these chars causes	_cccc_rrrr
     _tttt_oooo______ssss_tttt_aaaa_tttt_uuuu_ssss______llll_iiii_nnnn_eeee	    _tttt_ssss_llll	    _tttt_ssss	     Go	to status line,	col #1
     _uuuu_nnnn_dddd_eeee_rrrr_llll_iiii_nnnn_eeee______cccc_hhhh_aaaa_rrrr	    _uuuu_cccc	    _uuuu_cccc	     Underscore	one char and move past it
     _uuuu_pppp______hhhh_aaaa_llll_ffff______llll_iiii_nnnn_eeee	    _hhhh_uuuu	    _hhhh_uuuu	     Half-line up (reverse 1/2 linefeed)
     _xxxx_oooo_ffff_ffff______cccc_hhhh_aaaa_rrrr_aaaa_cccc_tttt_eeee_rrrr	    _xxxx_oooo_ffff_ffff_cccc   _XXXX_FFFF	     X-off character
     _xxxx_oooo_nnnn______cccc_hhhh_aaaa_rrrr_aaaa_cccc_tttt_eeee_rrrr	    _xxxx_oooo_nnnn_cccc    _XXXX_NNNN	     X-on character
     _zzzz_eeee_rrrr_oooo______mmmm_oooo_tttt_iiii_oooo_nnnn	    _zzzz_eeee_rrrr_oooo_mmmm   _ZZZZ_xxxx	     No	motion for the subsequent character

   SSSSaaaammmmpppplllleeee EEEEnnnnttttrrrryyyy
     The following entry, which	describes the AT&T 610 terminal, is among the
     more complex entries in the _tttt_eeee_rrrr_mmmm_iiii_nnnn_ffff_oooo file as of this writing.

     _6666_1111_0000_||||_6666_1111_0000_bbbb_cccc_tttt_||||_AAAA_TTTT_TTTT_6666_1111_0000_||||_aaaa_tttt_tttt_6666_1111_0000_||||_AAAA_TTTT_&&&&_TTTT_6666_1111_0000_;;;;_8888_0000_cccc_oooo_llll_uuuu_mmmm_nnnn_;;;;_9999_8888_kkkk_eeee_yyyy _kkkk_eeee_yyyy_bbbb_oooo_aaaa_rrrr_dddd
       _aaaa_mmmm_,,,, _eeee_ssss_llll_oooo_kkkk_,,,, _hhhh_ssss_,,,, _mmmm_iiii_rrrr_,,,, _mmmm_ssss_gggg_rrrr_,,,, _xxxx_eeee_nnnn_llll_,,,, _xxxx_oooo_nnnn_,,,,
       _cccc_oooo_llll_ssss_####_8888_0000_,,,,	_iiii_tttt_####_8888_,,,, _llll_hhhh_####_2222_,,,, _llll_iiii_nnnn_eeee_ssss_####_2222_4444_,,,, _llll_wwww_####_8888_,,,, _nnnn_llll_aaaa_bbbb_####_8888_,,,, _wwww_ssss_llll_####_8888_0000_,,,,
       _aaaa_cccc_ssss_cccc_====_````_````_aaaa_aaaa_ffff_ffff_gggg_gggg_jjjj_jjjj_kkkk_kkkk_llll_llll_mmmm_mmmm_nnnn_nnnn_oooo_oooo_pppp_pppp_qqqq_qqqq_rrrr_rrrr_ssss_ssss_tttt_tttt_uuuu_uuuu_vvvv_vvvv_wwww_wwww_xxxx_xxxx_yyyy_yyyy_zzzz_zzzz_{{{{_{{{{_||||_||||_}}}}_}}}}_~~~~_~~~~_,,,,
       _bbbb_eeee_llll_====_^^^^_GGGG_,,,, _bbbb_llll_iiii_nnnn_kkkk_====_\\\\_EEEE_[[[[_5555_mmmm_,,,, _bbbb_oooo_llll_dddd_====_\\\\_EEEE_[[[[_1111_mmmm_,,,,	_cccc_bbbb_tttt_====_\\\\_EEEE_[[[[_ZZZZ_,,,,
       _cccc_iiii_vvvv_iiii_ssss_====_\\\\_EEEE_[[[[_????_2222_5555_llll_,,,, _cccc_llll_eeee_aaaa_rrrr_====_\\\\_EEEE_[[[[_HHHH_\\\\_EEEE_[[[[_JJJJ_,,,, _cccc_nnnn_oooo_rrrr_mmmm_====_\\\\_EEEE_[[[[_????_2222_5555_hhhh_\\\\_EEEE_[[[[_????_1111_2222_llll_,,,,
       _cccc_rrrr_====_\\\\_rrrr_,,,, _cccc_ssss_rrrr_====_\\\\_EEEE_[[[[_%%%%_iiii_%%%%_pppp_1111_%%%%_dddd_;;;;_%%%%_pppp_2222_%%%%_dddd_rrrr_,,,, _cccc_uuuu_bbbb_====_\\\\_EEEE_[[[[_%%%%_pppp_1111_%%%%_dddd_DDDD_,,,, _cccc_uuuu_bbbb_1111_====_\\\\_bbbb_,,,,
       _cccc_uuuu_dddd_====_\\\\_EEEE_[[[[_%%%%_pppp_1111_%%%%_dddd_BBBB_,,,, _cccc_uuuu_dddd_1111_====_\\\\_EEEE_[[[[_BBBB_,,,, _cccc_uuuu_ffff_====_\\\\_EEEE_[[[[_%%%%_pppp_1111_%%%%_dddd_CCCC_,,,,	_cccc_uuuu_ffff_1111_====_\\\\_EEEE_[[[[_CCCC_,,,,
       _cccc_uuuu_pppp_====_\\\\_EEEE_[[[[_%%%%_iiii_%%%%_pppp_1111_%%%%_dddd_;;;;_%%%%_pppp_2222_%%%%_dddd_HHHH_,,,, _cccc_uuuu_uuuu_====_\\\\_EEEE_[[[[_%%%%_pppp_1111_%%%%_dddd_AAAA_,,,, _cccc_uuuu_uuuu_1111_====_\\\\_EEEE_[[[[_AAAA_,,,,
       _cccc_vvvv_vvvv_iiii_ssss_====_\\\\_EEEE_[[[[_????_1111_2222_;;;;_2222_5555_hhhh_,,,, _dddd_cccc_hhhh_====_\\\\_EEEE_[[[[_%%%%_pppp_1111_%%%%_dddd_PPPP_,,,,	_dddd_cccc_hhhh_1111_====_\\\\_EEEE_[[[[_PPPP_,,,, _dddd_iiii_mmmm_====_\\\\_EEEE_[[[[_2222_mmmm_,,,,
       _dddd_llll_====_\\\\_EEEE_[[[[_%%%%_pppp_1111_%%%%_dddd_MMMM_,,,, _dddd_llll_1111_====_\\\\_EEEE_[[[[_MMMM_,,,, _eeee_dddd_====_\\\\_EEEE_[[[[_JJJJ_,,,,	_eeee_llll_====_\\\\_EEEE_[[[[_KKKK_,,,, _eeee_llll_1111_====_\\\\_EEEE_[[[[_1111_KKKK_,,,,
       _ffff_llll_aaaa_ssss_hhhh_====_\\\\_EEEE_[[[[_????_5555_hhhh_$$$$_<<<<_2222_0000_0000_>>>>_\\\\_EEEE_[[[[_????_5555_llll_,,,, _ffff_ssss_llll_====_\\\\_EEEE_8888_,,,, _hhhh_oooo_mmmm_eeee_====_\\\\_EEEE_[[[[_HHHH_,,,, _hhhh_tttt_====_\\\\_tttt_,,,,
       _iiii_cccc_hhhh_====_\\\\_EEEE_[[[[_%%%%_pppp_1111_%%%%_dddd_@@@@_,,,, _iiii_llll_====_\\\\_EEEE_[[[[_%%%%_pppp_1111_%%%%_dddd_LLLL_,,,, _iiii_llll_1111_====_\\\\_EEEE_[[[[_LLLL_,,,, _iiii_nnnn_dddd_====_\\\\_EEEE_DDDD_,,,, _...._iiii_nnnn_dddd_====_\\\\_EEEE_DDDD_$$$$_<<<<_9999_>>>>_,,,,
       _iiii_nnnn_vvvv_iiii_ssss_====_\\\\_EEEE_[[[[_8888_mmmm_,,,,
       _iiii_ssss_1111_====_\\\\_EEEE_[[[[_8888_;;;;_0000 _|||| _\\\\_EEEE_[[[[_????_3333_;;;;_4444_;;;;_5555_;;;;_1111_3333_;;;;_1111_5555_llll_\\\\_EEEE_[[[[_1111_3333_;;;;_2222_0000_llll_\\\\_EEEE_[[[[_????_7777_hhhh_\\\\_EEEE_[[[[_1111_2222_hhhh_\\\\_EEEE_((((_BBBB_\\\\_EEEE_))))_0000_,,,,



								       PPPPaaaaggggeeee 11113333






NNNN									     NNNN



      _iiii_ssss_2222_====_\\\\_EEEE_[[[[_0000_mmmm_^^^^_OOOO_,,,, _iiii_ssss_3333_====_\\\\_EEEE_((((_BBBB_\\\\_EEEE_))))_0000_,,,, _kkkk_LLLL_FFFF_TTTT_====_\\\\_EEEE_[[[[_\\\\_ssss_@@@@_,,,, _kkkk_RRRR_IIII_TTTT_====_\\\\_EEEE_[[[[_\\\\_ssss_AAAA_,,,,
       _kkkk_bbbb_ssss_====_^^^^_HHHH_,,,, _kkkk_cccc_bbbb_tttt_====_\\\\_EEEE_[[[[_ZZZZ_,,,, _kkkk_cccc_llll_rrrr_====_\\\\_EEEE_[[[[_2222_JJJJ_,,,, _kkkk_cccc_uuuu_bbbb_1111_====_\\\\_EEEE_[[[[_DDDD_,,,, _kkkk_cccc_uuuu_dddd_1111_====_\\\\_EEEE_[[[[_BBBB_,,,,
       _kkkk_cccc_uuuu_ffff_1111_====_\\\\_EEEE_[[[[_CCCC_,,,, _kkkk_cccc_uuuu_uuuu_1111_====_\\\\_EEEE_[[[[_AAAA_,,,, _kkkk_ffff_1111_====_\\\\_EEEE_OOOO_cccc_,,,, _kkkk_ffff_1111_0000_====_\\\\_EEEE_NNNN_pppp_,,,,
       _kkkk_ffff_1111_1111_====_\\\\_EEEE_NNNN_qqqq_,,,, _kkkk_ffff_1111_2222_====_\\\\_EEEE_NNNN_rrrr_,,,, _kkkk_ffff_1111_3333_====_\\\\_EEEE_NNNN_ssss_,,,,	_kkkk_ffff_1111_4444_====_\\\\_EEEE_NNNN_tttt_,,,, _kkkk_ffff_2222_====_\\\\_EEEE_OOOO_dddd_,,,,
       _kkkk_ffff_3333_====_\\\\_EEEE_OOOO_eeee_,,,, _kkkk_ffff_4444_====_\\\\_EEEE_OOOO_ffff_,,,, _kkkk_ffff_5555_====_\\\\_EEEE_OOOO_gggg_,,,, _kkkk_ffff_6666_====_\\\\_EEEE_OOOO_hhhh_,,,, _kkkk_ffff_7777_====_\\\\_EEEE_OOOO_iiii_,,,,
       _kkkk_ffff_8888_====_\\\\_EEEE_OOOO_jjjj_,,,, _kkkk_ffff_9999_====_\\\\_EEEE_NNNN_oooo_,,,, _kkkk_hhhh_oooo_mmmm_eeee_====_\\\\_EEEE_[[[[_HHHH_,,,, _kkkk_iiii_nnnn_dddd_====_\\\\_EEEE_[[[[_SSSS_,,,, _kkkk_rrrr_iiii_====_\\\\_EEEE_[[[[_TTTT_,,,,
       _llll_llll_====_\\\\_EEEE_[[[[_2222_4444_HHHH_,,,, _mmmm_cccc_4444_====_\\\\_EEEE_[[[[_????_4444_iiii_,,,, _mmmm_cccc_5555_====_\\\\_EEEE_[[[[_????_5555_iiii_,,,, _nnnn_eeee_llll_====_\\\\_EEEE_EEEE_,,,,
       _pppp_ffff_xxxx_llll_====_\\\\_EEEE_[[[[_%%%%_pppp_1111_%%%%_dddd_;;;;_%%%%_pppp_2222_%%%%_llll_%%%%_0000_2222_dddd_qqqq_%%%%_????_%%%%_pppp_1111_%%%%_{{{{_9999_}}}}_%%%%_<<<<_%%%%_tttt_\\\\_ssss_\\\\_ssss_\\\\_ssss_FFFF_%%%%_pppp_1111_%%%%_1111_dddd_\\\\_ssss_\\\\_ssss_\\\\_ssss_\\\\_ssss_\\\\_ssss
     _\\\\_ssss_\\\\_ssss_\\\\_ssss_\\\\_ssss_\\\\_ssss_\\\\_ssss_%%%%_;;;;_%%%%_pppp_2222_%%%%_ssss_,,,,
       _pppp_llll_nnnn_====_\\\\_EEEE_[[[[_%%%%_pppp_1111_%%%%_dddd_;;;;_0000_;;;;_0000_;;;;_0000_qqqq_%%%%_pppp_2222_%%%%_::::_----_1111_6666_...._1111_6666_ssss_,,,,	_rrrr_cccc_====_\\\\_EEEE_8888_,,,,	_rrrr_eeee_vvvv_====_\\\\_EEEE_[[[[_7777_mmmm_,,,,
       _rrrr_iiii_====_\\\\_EEEE_MMMM_,,,, _rrrr_mmmm_aaaa_cccc_ssss_====_^^^^_OOOO_,,,, _rrrr_mmmm_iiii_rrrr_====_\\\\_EEEE_[[[[_4444_llll_,,,, _rrrr_mmmm_llll_nnnn_====_\\\\_EEEE_[[[[_2222_pppp_,,,, _rrrr_mmmm_ssss_oooo_====_\\\\_EEEE_[[[[_mmmm_,,,,
       _rrrr_mmmm_uuuu_llll_====_\\\\_EEEE_[[[[_mmmm_,,,, _rrrr_ssss_2222_====_\\\\_EEEE_cccc_\\\\_EEEE_[[[[_????_3333_llll_,,,, _ssss_cccc_====_\\\\_EEEE_7777_,,,,
       _ssss_gggg_rrrr_====_\\\\_EEEE_[[[[_0000_%%%%_????_%%%%_pppp_6666_%%%%_tttt_;;;;_1111_%%%%_;;;;_%%%%_????_%%%%_pppp_5555_%%%%_tttt_;;;;_2222_%%%%_;;;;_%%%%_????_%%%%_pppp_2222_%%%%_tttt_;;;;_4444_%%%%_;;;;_%%%%_????_%%%%_pppp_4444_%%%%_tttt_;;;;_5555_%%%%_;;;;
     _%%%%_????_%%%%_pppp_3333_%%%%_pppp_1111_%%%% _|||| _%%%%_tttt_;;;;_7777_%%%%_;;;;_%%%%_????_%%%%_pppp_7777_%%%%_tttt_;;;;_8888_%%%%_;;;;_mmmm_%%%%_????_%%%%_pppp_9999_%%%%_tttt_^^^^_NNNN_%%%%_eeee_^^^^_OOOO_%%%%_;;;;_,,,,
       _ssss_gggg_rrrr_0000_====_\\\\_EEEE_[[[[_mmmm_^^^^_OOOO_,,,, _ssss_mmmm_aaaa_cccc_ssss_====_^^^^_NNNN_,,,, _ssss_mmmm_iiii_rrrr_====_\\\\_EEEE_[[[[_4444_hhhh_,,,, _ssss_mmmm_llll_nnnn_====_\\\\_EEEE_[[[[_pppp_,,,,
       _ssss_mmmm_ssss_oooo_====_\\\\_EEEE_[[[[_7777_mmmm_,,,, _ssss_mmmm_uuuu_llll_====_\\\\_EEEE_[[[[_4444_mmmm_,,,, _tttt_ssss_llll_====_\\\\_EEEE_7777_\\\\_EEEE_[[[[_2222_5555_;;;;_%%%%_iiii_%%%%_pppp_1111_%%%%_dddd_xxxx_,,,,

   TTTTyyyyppppeeeessss ooooffff CCCCaaaappppaaaabbbbiiiilllliiiittttiiiieeeessss iiiinnnn tttthhhheeee	SSSSaaaammmmpppplllleeee EEEEnnnnttttrrrryyyy
     The sample	entry shows the	formats	for the	three types of _tttt_eeee_rrrr_mmmm_iiii_nnnn_ffff_oooo
     capabilities listed: Boolean, numeric, and	string.	 All capabilities
     specified in the _tttt_eeee_rrrr_mmmm_iiii_nnnn_ffff_oooo source file must	be followed by commas,
     including the last	capability in the source file.	In _tttt_eeee_rrrr_mmmm_iiii_nnnn_ffff_oooo source
     files, capabilities are referenced	by their capability names (as shown in
     the previous tables).

     Boolean capabilities are specified	simply by their	comma separated	cap
     names.

     Numeric capabilities are followed by the character	`#' and	then a
     positive integer value.  Thus, in the sample, _cccc_oooo_llll_ssss	(which shows the
     number of columns available on a device) is assigned the value _8888_0000 for the
     AT&T 610.	(Values	for numeric capabilities may be	specified in decimal,
     octal, or hexadecimal, using normal C programming language	conventions.)

     Finally, string-valued capabilities such as _eeee_llll (clear to end of line
     sequence) are listed by a two- to five-character capname, an `=', and a
     string ended by the next occurrence of a comma.  A	delay in milliseconds
     may appear	anywhere in such a capability, preceded	by _$$$$ and enclosed in
     angle brackets, as	in _eeee_llll_====_\\\\_EEEE_KKKK_$$$$_<<<<_3333_>>>>.	Padding	characters are supplied	by
     _tttt_pppp_uuuu_tttt.  The	delay can be any of the	following: a number, a number followed
     by	an asterisk, such as _5555_****, a number followed by a	slash, such as _5555_////, or
     a number followed by both,	such as	_5555_****_////.  A	`_****_'''' shows that the padding
     required is proportional to the number of lines affected by the
     operation,	and the	amount given is	the per-affected-unit padding
     required.	(In the	case of	insert characters, the factor is still the
     number of lines affected.	This is	always 1 unless	the device has _iiii_nnnn and
     the software uses it.)  When a `_****_''''	is specified, it is sometimes useful
     to	give a delay of	the form _3333_...._5555 to	specify	a delay	per unit to tenths of
     milliseconds.  (Only one decimal place is allowed.)






								       PPPPaaaaggggeeee 11114444






NNNN									     NNNN



     A `/' indicates that the padding is mandatory.  If	a device has _xxxx_oooo_nnnn
     defined, the padding information is advisory and will only	be used	for
     cost estimates or when the	device is in raw mode.	Mandatory padding will
     be	transmitted regardless of the setting of _xxxx_oooo_nnnn.  If padding (whether
     advisory or mandatory) is specified for _bbbb_eeee_llll or _ffff_llll_aaaa_ssss_hhhh, however, it will
     always be used, regardless	of whether _xxxx_oooo_nnnn is specified.

     _tttt_eeee_rrrr_mmmm_iiii_nnnn_ffff_oooo offers notation for encoding special characters.	Both _\\\\_EEEE	and _\\\\_eeee
     map to an ESCAPE character, ^_x maps to a control _x	for any	appropriate _x,
     and the sequences _\\\\_nnnn_,,,, _\\\\_llll_,,,, _\\\\_rrrr_,,,, _\\\\_tttt_,,,, _\\\\_bbbb_,,,, _\\\\_ffff, and _\\\\_ssss give a newline,
     linefeed, return, tab, backspace, formfeed, and space, respectively.
     Other escapes include: _\\\\_^^^^ for caret (^); _\\\\_\\\\ for backslash (\); _\\\\, for
     comma (,);	_\\\\_:::: for colon (:); and _\\\\_0000 for null.  (_\\\\_0000	will actually produce
     _\\\\_2222_0000_0000, which does not terminate a string but behaves as a null character
     on	most devices, providing	CS7 is specified.  [See	_ssss_tttt_tttt_yyyy(1).]  Finally,
     characters	may be given as	three octal digits after a backslash (for
     example, \123).

     Sometimes individual capabilities must be commented out.  To do this, put
     a period before the capability name.  For example,	see the	second _iiii_nnnn_dddd in
     the example above.	 Note that capabilities	are defined in a left-to-right
     order and,	therefore, a prior definition will override a later
     definition.

   PPPPrrrreeeeppppaaaarrrriiiinnnngggg DDDDeeeessssccccrrrriiiippppttttiiiioooonnnnssss
     The most effective	way to prepare a device	description is by imitating
     the description of	a similar device in _tttt_eeee_rrrr_mmmm_iiii_nnnn_ffff_oooo and building up a
     description gradually, using partial descriptions with _vvvv_iiii to check	that
     they are correct.	Be aware that a	very unusual device may	expose
     deficiencies in the ability of the	_tttt_eeee_rrrr_mmmm_iiii_nnnn_ffff_oooo file to describe it or	the
     inability of _vvvv_iiii to	work with that device.	To test	a new device
     description, set the environment variable _TTTT_EEEE_RRRR_MMMM_IIII_NNNN_FFFF_OOOO	to the pathname	of a
     directory containing the compiled description you are working on and
     programs will look	there rather than in _////_uuuu_ssss_rrrr_////_ssss_hhhh_aaaa_rrrr_eeee_////_llll_iiii_bbbb_////_tttt_eeee_rrrr_mmmm_iiii_nnnn_ffff_oooo.  To get
     the padding for insert-line correct (if the device	manufacturer did not
     document it) a severe test	is to comment out _xxxx_oooo_nnnn, edit a large file at
     9600 baud with _vvvv_iiii,	delete 16 or so	lines from the middle of the screen,
     and then press the	_uuuu key several times quickly.  If the display is
     corrupted,	more padding is	usually	needed.	 A similar test	can be used
     for insert-character.

   SSSSeeeeccccttttiiiioooonnnn 1111----1111::::	BBBBaaaassssiiiicccc CCCCaaaappppaaaabbbbiiiilllliiiittttiiiieeeessss
     The number	of columns on each line	for the	device is given	by the _cccc_oooo_llll_ssss
     numeric capability.  If the device	has a screen, then the number of lines
     on	the screen is given by the _llll_iiii_nnnn_eeee_ssss capability.  If the device wraps
     around to the beginning of	the next line when it reaches the right
     margin, then it should have the _aaaa_mmmm	capability.  If	the terminal can clear
     its screen, leaving the cursor in the home	position, then this is given
     by	the _cccc_llll_eeee_aaaa_rrrr string capability.  If the terminal overstrikes (rather than
     clearing a	position when a	character is struck over) then it should have
     the _oooo_ssss capability.	 If the	device is a printing terminal, with no soft
     copy unit,	specify	both _hhhh_cccc	and _oooo_ssss.	 If there is a way to move the cursor



								       PPPPaaaaggggeeee 11115555






NNNN									     NNNN



     to	the left edge of the current row, specify this as _cccc_rrrr.  (Normally this
     will be carriage return, control M.)  If there is a way to	produce	an
     audible signal (such as a bell or a beep),	specify	it as _bbbb_eeee_llll.  If,	like
     most devices, the device uses the xon-xoff	flow-control protocol, specify
     _xxxx_oooo_nnnn.

     If	there is a way to move the cursor one position to the left (such as
     backspace), that capability should	be given as _cccc_uuuu_bbbb_1111.  Similarly,
     sequences to move to the right, up, and down should be given as _cccc_uuuu_ffff_1111,
     _cccc_uuuu_uuuu_1111, and _cccc_uuuu_dddd_1111, respectively.  These local	cursor motions must not	alter
     the text they pass	over; for example, you would not normally use
     ``_cccc_uuuu_ffff_1111=\s'' because the space would erase the character moved over.

     A very important point here is that the local cursor motions encoded in
     _tttt_eeee_rrrr_mmmm_iiii_nnnn_ffff_oooo are undefined at the left	and top	edges of a screen terminal.
     Programs should never attempt to backspace	around the left	edge, unless
     _bbbb_wwww	is specified, and should never attempt to go up	locally	off the	top.
     To	scroll text up,	a program goes to the bottom left corner of the	screen
     and sends the _iiii_nnnn_dddd (index) string.

     To	scroll text down, a program goes to the	top left corner	of the screen
     and sends the _rrrr_iiii (reverse index) string.  The strings _iiii_nnnn_dddd and _rrrr_iiii are
     undefined when not	on their respective corners of the screen.

     Parameterized versions of the scrolling sequences are _iiii_nnnn_dddd_nnnn	and _rrrr_iiii_nnnn.
     These versions have the same semantics as _iiii_nnnn_dddd and _rrrr_iiii, except that they
     take one parameter	and scroll the number of lines specified by that
     parameter.	 They are also undefined except	at the appropriate edge	of the
     screen.

     The _aaaa_mmmm capability tells whether the cursor	sticks at the right edge of
     the screen	when text is output, but this does not necessarily apply to a
     _cccc_uuuu_ffff_1111 from the last	column.	 Backward motion from the left edge of the
     screen is possible	only when _bbbb_wwww is	specified.  In this case, _cccc_uuuu_bbbb_1111 will
     move to the right edge of the previous row.  If _bbbb_wwww	is not given, the
     effect is undefined.  This	is useful for drawing a	box around the edge of
     the screen, for example.  If the device has switch	selectable automatic
     margins, _aaaa_mmmm should	be specified in	the _tttt_eeee_rrrr_mmmm_iiii_nnnn_ffff_oooo source file.  In this
     case, initialization strings should turn on this option, if possible.  If
     the device	has a command that moves to the	first column of	the next line,
     that command can be given as _nnnn_eeee_llll (newline).  It does not matter if	the
     command clears the	remainder of the current line, so if the device	has no
     _cccc_rrrr	and _llll_ffff it may still be possible	to craft a working _nnnn_eeee_llll out of one or
     both of them.

     These capabilities	suffice	to describe hardcopy and screen	terminals.
     Thus the AT&T 5320	hardcopy terminal is described as follows:

	_5555_3333_2222_0000_||||_aaaa_tttt_tttt_5555_3333_2222_0000_||||_AAAA_TTTT_&&&&_TTTT _5555_3333_2222_0000 _hhhh_aaaa_rrrr_dddd_cccc_oooo_pppp_yyyy	_tttt_eeee_rrrr_mmmm_iiii_nnnn_aaaa_llll_,,,,
	 _aaaa_mmmm_,,,, _hhhh_cccc_,,,, _oooo_ssss_,,,,
	 _cccc_oooo_llll_ssss_####_1111_3333_2222_,,,,
	 _bbbb_eeee_llll_====_^^^^_GGGG_,,,, _cccc_rrrr_====_\\\\_rrrr_,,,,	_cccc_uuuu_bbbb_1111_====_\\\\_bbbb_,,,, _cccc_nnnn_dddd_1111_====_\\\\_nnnn_,,,,



								       PPPPaaaaggggeeee 11116666






NNNN									     NNNN



	_dddd_cccc_hhhh_1111_====_\\\\_EEEE_[[[[_PPPP_,,,, _dddd_llll_1111_====_\\\\_EEEE_[[[[_MMMM_,,,,
	 _iiii_nnnn_dddd_====_\\\\_nnnn_,,,,

     while the Lear Siegler ADM-3 is described as

	_aaaa_dddd_mmmm_3333_||||_llll_ssss_iiii _aaaa_dddd_mmmm_3333_,,,,
	_aaaa_mmmm_,,,, _bbbb_eeee_llll_====_^^^^_GGGG_,,,, _cccc_llll_eeee_aaaa_rrrr_====_^^^^_ZZZZ_,,,, _cccc_oooo_llll_ssss_####_8888_0000_,,,, _cccc_rrrr_====_^^^^_MMMM_,,,, _cccc_uuuu_bbbb_1111_====_^^^^_HHHH_,,,,
	_cccc_uuuu_dddd_1111_====_^^^^_JJJJ_,,,, _iiii_nnnn_dddd_====_^^^^_JJJJ_,,,, _llll_iiii_nnnn_eeee_ssss_####_2222_4444,

   SSSSeeeeccccttttiiiioooonnnn 1111----2222::::	PPPPaaaarrrraaaammmmeeeetttteeeerrrriiiizzzzeeeedddd SSSSttttrrrriiiinnnnggggssss
     Cursor addressing and other strings requiring parameters are described by
     a parameterized string capability,	with _pppp_rrrr_iiii_nnnn_tttt_ffff-like escapes (_%%%%_x) in it.
     For example, to address the cursor, the _cccc_uuuu_pppp capability is given, using
     two parameters:  the row and column to address to.	 (Rows and columns are
     numbered from zero	and refer to the physical screen visible to the	user,
     not to any	unseen memory.)	 If the	terminal has memory relative cursor
     addressing, that can be indicated by _mmmm_rrrr_cccc_uuuu_pppp.

     The parameter mechanism uses a stack and special _%%%%	codes to manipulate
     the stack in the manner of	Reverse	Polish Notation	(postfix).  Typically
     a sequence	will push one of the parameters	onto the stack and then	print
     it	in some	format.	 Often more complex operations are necessary.
     Operations	are in postfix form with the operands in the usual order.
     That is, to subtract 5 from the first parameter, one would	use _%%%%_pppp_1111_%%%%_{{{{_5555_}}}}_%%%%_----.

     The _%%%% encodings have the following	meanings:

     _%%%%_%%%%	  outputs `%'

     _%%%%_[[[[_[[[[_::::_]]]]_f_l_a_g_s][_w_i_d_t_h[._p_r_e_c_i_s_i_o_n]][_dddd_oooo_xxxx_XXXX_ssss]
	  as in	_pppp_rrrr_iiii_nnnn_tttt_ffff,	flags are _[[[[_----_++++_####_]]]]	and space

     _%%%%_cccc	  print	pop gives %c

     _%%%%_pppp_[[[[_1111_----_9999_]]]]
	  push _ith parm

     _%%%%_PPPP_[[[[_aaaa_----_zzzz_]]]]
	  set dynamic variable [a-z] to	pop

     _%%%%_gggg_[[[[_aaaa_----_zzzz_]]]]
	  get dynamic variable [a-z] and push it

     _%%%%_PPPP_[[[[_AAAA_----_ZZZZ_]]]]
	  set static variable [a-z] to pop

     _%%%%_gggg_[[[[_AAAA_----_ZZZZ_]]]]
	  get static variable [a-z] and	push it

     _%%%%_''''_c_'''' push char constant _c





								       PPPPaaaaggggeeee 11117777






NNNN									     NNNN



     _%%%%_{{{{_n_n_}}}}
	  push decimal constant	_n_n

     _%%%%_llll	  push strlen(pop)

     _%%%%_++++	_%%%%_---- _%%%%_**** _%%%%_//// _%%%%_mmmm
	  arithmetic (_%%%%_mmmm is mod): push(pop integer  op pop integer )
						  2		  1
     _%%%%_&&&&	_%%%%_|||| _%%%%_^^^^
	  bit operations: push(pop integer  op pop integer )
					  2		  1
     _%%%%_====	_%%%%_>>>> _%%%%_<<<<
	  logical operations: push(pop integer	op pop integer )
					      2		      1
     _%%%%_AAAA	_%%%%_OOOO
	  logical operations: and, or

     _%%%%_!!!!	_%%%%_~~~~
	  unary	operations: push(op pop)

     _%%%%_iiii	  (for ANSI terminals) add 1 to	first parm, if one parm	present, or
	  first	two parms, if more than	one parm present

     _%%%%_????	_e_x_p_r _%%%%_tttt	_t_h_e_n_p_a_r_t _%%%%_eeee _e_l_s_e_p_a_r_t _%%%%_;;;;
	  if-then-else,	_%%%%_eeee _e_l_s_e_p_a_r_t is optional; else-if's are possible	ala
	  Algol	68:  _%%%%_????	_cccc  _%%%%_tttt _bbbb	 _%%%%_eeee _cccc  _%%%%_tttt _bbbb  _%%%%_eeee	_cccc  _%%%%_tttt _bbbb	 _%%%%_eeee _cccc  _%%%%_tttt _bbbb  _%%%%_eeee	_bbbb _%%%%_;;;;
	  c  are conditio_1111ns, b _1111are b_2222odies._2222	 _3333     _3333     _4444	   _4444	 _5555
	   _i		      _i
     If	the ``_----'' flag is used with ``_%%%%[_dddd_oooo_xxxx_XXXX_ssss]'', then a colon (_::::) must	be
     placed between the	``_%%%%'' and the ``_----'' to differentiate the flag from the
     binary ``_%%%%_----'' operator, for example, ``_%%%%_::::_----_1111_6666_...._1111_6666_ssss''.

     Consider the Hewlett-Packard 2645,	which, to get to row 3 and column 12,
     needs to be sent _\\\\_EEEE_&&&&_aaaa_1111_2222_cccc_0000_3333_YYYY padded	for 6 milliseconds.  Note that the
     order of the rows and columns is inverted here, and that the row and
     column are	zero-padded as two digits.  Thus its _cccc_uuuu_pppp capability is:

			  _cccc_uuuu_pppp_====_\\\\_EEEE_&&&&_aaaa_%%%%_pppp_2222_%%%%_2222_...._2222_dddd_cccc_%%%%_pppp_1111_%%%%_2222_...._2222_dddd_YYYY_$$$$_<<<<_6666_>>>>

     The Micro-Term ACT-IV needs the current row and column sent preceded by a
     _^^^^_TTTT, with the row and column simply	encoded	in binary,
     ``_cccc_uuuu_pppp_====_^^^^_TTTT_%%%%_pppp_1111_%%%%_cccc_%%%%_pppp_2222_%%%%_cccc''.  Devices that use ``_%%%%_cccc'' need to be able to
     backspace the cursor (_cccc_uuuu_bbbb_1111), and to move the cursor up one	line on	the
     screen (_cccc_uuuu_uuuu_1111).  This is necessary because it is not always	safe to
     transmit _\\\\_nnnn, _^^^^_DDDD, and _\\\\_rrrr, as the system may	change or discard them.	 (The
     library routines dealing with _tttt_eeee_rrrr_mmmm_iiii_nnnn_ffff_oooo set	tty modes so that tabs are
     never expanded, so	_\\\\_tttt is safe to send.  This turns	out to be essential
     for the Ann Arbor 4080.)

     A final example is	the LSI	ADM-3a,	which uses row and column offset by a
     blank character, thus ``_cccc_uuuu_pppp_====_\\\\_EEEE_====_%%%%_pppp_1111_%%%%_''''_\\\\_ssss_''''_%%%%_++++_%%%%_cccc_%%%%_pppp_2222_%%%%_''''_\\\\_ssss_''''_%%%%_++++_%%%%_cccc''.	 After sending
     ``_\\\\_EEEE_===='', this pushes the first parameter, pushes the ASCII	value for a
     space (32), adds them (pushing the	sum on the stack in place of the two


								       PPPPaaaaggggeeee 11118888






NNNN									     NNNN



     previous values), and outputs that	value as a character.  Then the	same
     is	done for the second parameter.	More complex arithmetic	is possible
     using the stack.

   SSSSeeeeccccttttiiiioooonnnn 1111----3333::::	CCCCuuuurrrrssssoooorrrr MMMMoooottttiiiioooonnnnssss
     If	the terminal has a fast	way to home the	cursor (to very	upper left
     corner of screen) then this can be	given as _hhhh_oooo_mmmm_eeee; similarly a fast	way of
     getting to	the lower left-hand corner can be given	as _llll_llll; this may
     involve going up with _cccc_uuuu_uuuu_1111	from the home position,	but a program should
     never do this itself (unless _llll_llll does) because it can make no assumption
     about the effect of moving	up from	the home position.  Note that the home
     position is the same as addressing	to (0,0):  to the top left corner of
     the screen, not of	memory.	 (Thus,	the _\\\\_EEEE_HHHH	sequence on Hewlett-Packard
     terminals cannot be used for _hhhh_oooo_mmmm_eeee without losing some of the other
     features on the terminal.)

     If	the device has row or column absolute-cursor addressing, these can be
     given as single parameter capabilities _hhhh_pppp_aaaa	(horizontal position absolute)
     and _vvvv_pppp_aaaa (vertical position	absolute).  Sometimes these are	shorter	than
     the more general two-parameter sequence (as with the Hewlett-Packard
     2645) and can be used in preference to _cccc_uuuu_pppp.  If there are parameterized
     local motions (for	example, move _n	spaces to the right) these can be
     given as _cccc_uuuu_dddd, _cccc_uuuu_bbbb,	_cccc_uuuu_ffff, and _cccc_uuuu_uuuu with a single parameter indicating	how
     many spaces to move.  These are primarily useful if the device does not
     have _cccc_uuuu_pppp, such as the Tektronix 4025.

     If	the device needs to be in a special mode when running a	program	that
     uses these	capabilities, the codes	to enter and exit this mode can	be
     given as _ssss_mmmm_cccc_uuuu_pppp and	_rrrr_mmmm_cccc_uuuu_pppp.	This arises, for example, from terminals, such
     as	the Concept, with more than one	page of	memory.	 If the	device has
     only memory relative cursor addressing and	not screen relative cursor
     addressing, a one screen-sized window must	be fixed into the device for
     cursor addressing to work properly.  This is also used for	the Tektronix
     4025, where _ssss_mmmm_cccc_uuuu_pppp sets the	command	character to be	the one	used by
     _tttt_eeee_rrrr_mmmm_iiii_nnnn_ffff_oooo.	If the _ssss_mmmm_cccc_uuuu_pppp sequence will not restore the screen after	an
     _rrrr_mmmm_cccc_uuuu_pppp sequence is output (to the state prior to outputting	_rrrr_mmmm_cccc_uuuu_pppp),
     specify _nnnn_rrrr_rrrr_mmmm_cccc.

   SSSSeeeeccccttttiiiioooonnnn 1111----4444::::	AAAArrrreeeeaaaa CCCClllleeeeaaaarrrrssss
     If	the terminal can clear from the	current	position to the	end of the
     line, leaving the cursor where it is, this	should be given	as _eeee_llll.	If the
     terminal can clear	from the beginning of the line to the current position
     inclusive,	leaving	the cursor where it is,	this should be given as	_eeee_llll_1111.
     If	the terminal can clear from the	current	position to the	end of the
     display, then this	should be given	as _eeee_dddd.	_eeee_dddd is only defined from	the
     first column of a line.  (Thus, it	can be simulated by a request to
     delete a large number of lines, if	a true _eeee_dddd is not available.)

   SSSSeeeeccccttttiiiioooonnnn 1111----5555::::	IIIInnnnsssseeeerrrrtttt////DDDDeeeelllleeeetttteeee LLLLiiiinnnneeee
     If	the terminal can open a	new blank line before the line where the
     cursor is,	this should be given as	_iiii_llll_1111; this is done only from the	first
     position of a line.  The cursor must then appear on the newly blank line.



								       PPPPaaaaggggeeee 11119999






NNNN									     NNNN



     If	the terminal can delete	the line which the cursor is on, then this
     should be given as	_dddd_llll_1111; this is done only from the	first position on the
     line to be	deleted.  Versions of _iiii_llll_1111 and _dddd_llll_1111 which	take a single
     parameter and insert or delete that many lines can	be given as _iiii_llll and _dddd_llll.

     If	the terminal has a settable destructive	scrolling region (like the
     VT100) the	command	to set this can	be described with the _cccc_ssss_rrrr capability,
     which takes two parameters:  the top and bottom lines of the scrolling
     region.  The cursor position is, alas, undefined after using this
     command.  It is possible to get the effect	of insert or delete line using
     this command - the	_ssss_cccc and _rrrr_cccc (save	and restore cursor) commands are also
     useful.  Inserting	lines at the top or bottom of the screen can also be
     done using	_rrrr_iiii or _iiii_nnnn_dddd on many terminals without a true insert/delete line,
     and is often faster even on terminals with	those features.

     To	determine whether a terminal has destructive scrolling regions or
     non-destructive scrolling regions,	create a scrolling region in the
     middle of the screen, place data on the bottom line of the	scrolling
     region, move the cursor to	the top	line of	the scrolling region, and do a
     reverse index (_rrrr_iiii)	followed by a delete line (_dddd_llll_1111)	or index (_iiii_nnnn_dddd).	 If
     the data that was originally on the bottom	line of	the scrolling region
     was restored into the scrolling region by the _dddd_llll_1111 or _iiii_nnnn_dddd, then the
     terminal has non-destructive scrolling regions.  Otherwise, it has
     destructive scrolling regions.  Do	not specify _cccc_ssss_rrrr	if the terminal	has
     non-destructive scrolling regions,	unless _iiii_nnnn_dddd, _rrrr_iiii,	_iiii_nnnn_dddd_nnnn, _rrrr_iiii_nnnn, _dddd_llll, and _dddd_llll_1111
     all simulate destructive scrolling.

     If	the terminal has the ability to	define a window	as part	of memory,
     which all commands	affect,	it should be given as the parameterized	string
     _wwww_iiii_nnnn_dddd.  The	four parameters	are the	starting and ending lines in memory
     and the starting and ending columns in memory, in that order.

     If	the terminal can retain	display	memory above, then the _dddd_aaaa capability
     should be given; if display memory	can be retained	below, then _dddd_bbbb should
     be	given.	These indicate that deleting a line or scrolling a full	screen
     may bring non-blank lines up from below or	that scrolling back with _rrrr_iiii
     may bring down non-blank lines.

   SSSSeeeeccccttttiiiioooonnnn 1111----6666::::	IIIInnnnsssseeeerrrrtttt////DDDDeeeelllleeeetttteeee CCCChhhhaaaarrrraaaacccctttteeeerrrr
     There are two basic kinds of intelligent terminals	with respect to
     insert/delete character operations	which can be described using _tttt_eeee_rrrr_mmmm_iiii_nnnn_ffff_oooo_....
     The most common insert/delete character operations	affect only the
     characters	on the current line and	shift characters off the end of	the
     line rigidly.  Other terminals, such as the Concept 100 and the Perkin
     Elmer Owl,	make a distinction between typed and untyped blanks on the
     screen, shifting upon an insert or	delete only to an untyped blank	on the
     screen which is either eliminated,	or expanded to two untyped blanks.
     You can determine the kind	of terminal you	have by	clearing the screen
     and then typing text separated by cursor motions.	Type ``_aaaa_bbbb_cccc    _dddd_eeee_ffff''
     using local cursor	motions	(not spaces) between the _aaaa_bbbb_cccc and the _dddd_eeee_ffff.
     Then position the cursor before the _aaaa_bbbb_cccc and put the terminal in insert
     mode.  If typing characters causes	the rest of the	line to	shift rigidly



								       PPPPaaaaggggeeee 22220000






NNNN									     NNNN



     and characters to fall off	the end, then your terminal does not
     distinguish between blanks	and untyped positions.	If the _aaaa_bbbb_cccc shifts over
     to	the _dddd_eeee_ffff	which then move	together around	the end	of the current line
     and onto the next as you insert, you have the second type of terminal,
     and should	give the capability _iiii_nnnn,	which stands for ``insert null.''
     While these are two logically separate attributes (one line versus
     multiline insert mode, and	special	treatment of untyped spaces) we	have
     seen no terminals whose insert mode cannot	be described with the single
     attribute.

     _tttt_eeee_rrrr_mmmm_iiii_nnnn_ffff_oooo can describe both	terminals that have an insert mode and
     terminals which send a simple sequence to open a blank position on	the
     current line.  Give as _ssss_mmmm_iiii_rrrr the sequence to get into insert mode.	Give
     as	_rrrr_mmmm_iiii_rrrr the sequence to leave insert mode.	 Now give as _iiii_cccc_hhhh_1111 any sequence
     needed to be sent just before sending the character to be inserted.  Most
     terminals with a true insert mode will not	give _iiii_cccc_hhhh_1111; terminals that send
     a sequence	to open	a screen position should give it here.	(If your
     terminal has both,	insert mode is usually preferable to _iiii_cccc_hhhh_1111.  Do not
     give both unless the terminal actually requires both to be	used in
     combination.)  If post-insert padding is needed, give this	as a number of
     milliseconds padding in _iiii_pppp	(a string option).  Any	other sequence which
     may need to be sent after an insert of a single character may also	be
     given in _iiii_pppp.  If your terminal needs both to be placed into an `insert
     mode' and a special code to precede each inserted character, then both
     _ssss_mmmm_iiii_rrrr/rmir and _iiii_cccc_hhhh_1111	can be given, and both will be used.  The _iiii_cccc_hhhh
     capability, with one parameter, _n,	will insert _n blanks.

     If	padding	is necessary between characters	typed while not	in insert
     mode, give	this as	a number of milliseconds padding in _rrrr_mmmm_pppp.

     It	is occasionally	necessary to move around while in insert mode to
     delete characters on the same line	(for example, if there is a tab	after
     the insertion position).  If your terminal	allows motion while in insert
     mode you can give the capability _mmmm_iiii_rrrr to speed up inserting	in this	case.
     Omitting _mmmm_iiii_rrrr will affect only speed.  Some	terminals (notably
     Datamedia's) must not have	_mmmm_iiii_rrrr because of the way their insert mode
     works.

     Finally, you can specify _dddd_cccc_hhhh_1111 to delete a single character, _dddd_cccc_hhhh with one
     parameter,	_n, to delete _n characters, and delete mode by giving _ssss_mmmm_dddd_cccc and
     _rrrr_mmmm_dddd_cccc to enter and exit delete mode	(any mode the terminal needs to	be
     placed in for _dddd_cccc_hhhh_1111	to work).

     A command to erase	_n characters (equivalent to outputting _n blanks
     without moving the	cursor)	can be given as	_eeee_cccc_hhhh with one parameter.

   SSSSeeeeccccttttiiiioooonnnn 1111----7777::::	HHHHiiiigggghhhhlllliiiigggghhhhttttiiiinnnngggg,,,, UUUUnnnnddddeeeerrrrlllliiiinnnniiiinnnngggg,,,, aaaannnndddd VVVViiiissssiiiibbbblllleeee BBBBeeeellllllllssss
     Your device may have one or more kinds of display attributes that allow
     you to highlight selected characters when they appear on the screen.  The
     following display modes (shown with the names by which they are set) may
     be	available:  a blinking screen (_bbbb_llll_iiii_nnnn_kkkk), bold or extra-bright characters
     (_bbbb_oooo_llll_dddd), dim or half-bright	characters (_dddd_iiii_mmmm), blanking or invisible	text



								       PPPPaaaaggggeeee 22221111






NNNN									     NNNN



     (_iiii_nnnn_vvvv_iiii_ssss), protected	text (_pppp_rrrr_oooo_tttt), a reverse-video screen (_rrrr_eeee_vvvv), and an
     alternate character set (_ssss_mmmm_aaaa_cccc_ssss to enter this mode and _rrrr_mmmm_aaaa_cccc_ssss to exit it).
     (If a command is necessary	before you can enter alternate character set
     mode, give	the sequence in	_eeee_nnnn_aaaa_cccc_ssss or "enable alternate-character-set"
     mode.)  Turning on	any of these modes singly may or may not turn off
     other modes.

     _ssss_gggg_rrrr_0000 should be used to turn off all video enhancement capabilities.  It
     should always be specified	because	it represents the only way to turn off
     some capabilities,	such as	_dddd_iiii_mmmm or _bbbb_llll_iiii_nnnn_kkkk.

     You should	choose one display method as _s_t_a_n_d_o_u_t _m_o_d_e [see	_cccc_uuuu_rrrr_ssss_eeee_ssss(3X)]
     and use it	to highlight error messages and	other kinds of text to which
     you want to draw attention.  Choose a form	of display that	provides
     strong contrast but that is easy on the eyes.  (We	recommend reverse-
     video plus	half-bright or reverse-video alone.)  The sequences to enter
     and exit standout mode are	given as _ssss_mmmm_ssss_oooo and _rrrr_mmmm_ssss_oooo,	respectively.  If the
     code to change into or out	of standout mode leaves	one or even two	blank
     spaces on the screen, as the TVI 912 and Teleray 1061 do, then _xxxx_mmmm_cccc	should
     be	given to tell how many spaces are left.

     Sequences to begin	underlining and	end underlining	can be specified as
     _ssss_mmmm_uuuu_llll and _rrrr_mmmm_uuuu_llll _,,,, respectively.  If the device has a	sequence to underline
     the current character and to move the cursor one space to the right (such
     as	the Micro-Term MIME), this sequence can	be specified as	_uuuu_cccc.

     Terminals with the	``magic	cookie'' glitch	(_xxxx_mmmm_cccc_)))) deposit special
     ``cookies'' when they receive mode-setting	sequences, which affect	the
     display algorithm rather than having extra	bits for each character.  Some
     terminals,	such as	the Hewlett-Packard 2621, automatically	leave standout
     mode when they move to a new line or the cursor is	addressed.  Programs
     using standout mode should	exit standout mode before moving the cursor or
     sending a newline,	unless the _mmmm_ssss_gggg_rrrr	capability, asserting that it is safe
     to	move in	standout mode, is present.

     If	the terminal has a way of flashing the screen to indicate an error
     quietly (a	bell replacement), then	this can be given as _ffff_llll_aaaa_ssss_hhhh; it must
     not move the cursor.  A good flash	can be done by changing	the screen
     into reverse video, pad for 200 ms, then return the screen	to normal
     video.

     If	the cursor needs to be made more visible than normal when it is	not on
     the bottom	line (to make, for example, a non-blinking underline into an
     easier to find block or blinking underline) give this sequence as _cccc_vvvv_vvvv_iiii_ssss.
     The boolean _cccc_hhhh_tttt_ssss should also be given.  If	there is a way to make the
     cursor completely invisible, give that as _cccc_iiii_vvvv_iiii_ssss.  The capability _cccc_nnnn_oooo_rrrr_mmmm
     should be given which undoes the effects of either	of these modes.

     If	your terminal generates	underlined characters by using the underline
     character (with no	special	sequences needed) even though it does not
     otherwise overstrike characters, then you should specify the capability
     _uuuu_llll.  For devices on which a character overstriking	another	leaves both



								       PPPPaaaaggggeeee 22222222






NNNN									     NNNN



     characters	on the screen, specify the capability _oooo_ssss.  If overstrikes are
     erasable with a blank, then this should be	indicated by specifying	_eeee_oooo.

     If	there is a sequence to set arbitrary combinations of modes, this
     should be given as	_ssss_gggg_rrrr (set attributes), taking nine parameters.  Each
     parameter is either _0000 or non-zero,	as the corresponding attribute is on
     or	off.  The nine parameters are, in order:  standout, underline,
     reverse, blink, dim, bold,	blank, protect,	alternate character set.  Not
     all modes need to be supported by _ssss_gggg_rrrr; only those for which corresponding
     separate attribute	commands exist should be supported.  For example,
     let's assume that the terminal in question	needs the following escape
     sequences to turn on various modes.
		     tparm
		   parameter	 attribute	escape sequence

				 none		_\\\\_EEEE_[[[[_0000_mmmm
		      _pppp_1111	 standout	_\\\\_EEEE_[[[[_0000_;;;;_4444_;;;;_7777_mmmm
		      _pppp_2222	 underline	_\\\\_EEEE_[[[[_0000_;;;;_3333_mmmm
		      _pppp_3333	 reverse	_\\\\_EEEE_[[[[_0000_;;;;_4444_mmmm
		      _pppp_4444	 blink		_\\\\_EEEE_[[[[_0000_;;;;_5555_mmmm
		      _pppp_5555	 dim		_\\\\_EEEE_[[[[_0000_;;;;_7777_mmmm
		      _pppp_6666	 bold		_\\\\_EEEE_[[[[_0000_;;;;_3333_;;;;_4444_mmmm
		      _pppp_7777	 invis		_\\\\_EEEE_[[[[_0000_;;;;_8888_mmmm
		      _pppp_8888	 protect	not available
		      _pppp_9999	 altcharset	_^^^^_OOOO (off) _^^^^_NNNN (on)

     Note that each escape sequence requires a _0000 to turn off other modes
     before turning on its own mode.  Also note	that, as suggested above,
     _s_t_a_n_d_o_u_t is set up	to be the combination of _r_e_v_e_r_s_e and _d_i_m.  Also,
     because this terminal has no _b_o_l_d mode, _b_o_l_d is set up as the combination
     of	_r_e_v_e_r_s_e	and _u_n_d_e_r_l_i_n_e.	In addition, to	allow combinations, such as
     _u_n_d_e_r_l_i_n_e+_b_l_i_n_k, the sequence to use would	be _\\\\_EEEE_[[[[_0000_;;;;_3333_;;;;_5555_mmmm.  The terminal
     doesn't have _p_r_o_t_e_c_t mode,	either,	but that cannot	be simulated in	any
     way, so _pppp_8888	is ignored.  The _a_l_t_c_h_a_r_s_e_t mode is different in that it is
     either _^^^^_OOOO or _^^^^_NNNN, depending	on whether it is off or	on.  If	all modes were
     to	be turned on, the sequence would be _\\\\_EEEE_[[[[_0000_;;;;_3333_;;;;_4444_;;;;_5555_;;;;_7777_;;;;_8888_mmmm_^^^^_NNNN.

     Now look at when different	sequences are output.  For example, _;;;;_3333 is
     output when either	_pppp_2222 or _pppp_6666 is true, that is, if either _u_n_d_e_r_l_i_n_e or _b_o_l_d
     modes are turned on.  Writing out the above sequences, along with their
     dependencies, gives the following:
	     sequence	   when	to output	terminfo translation
	     _\\\\_EEEE_[[[[_0000	  always		_\\\\_EEEE_[[[[_0000
	     _;;;;_3333		  if _pppp_2222	or _pppp_6666		_%%%%_????_%%%%_pppp_2222_%%%%_pppp_6666_%%%%_||||_%%%%_tttt_;;;;_3333_%%%%_;;;;
	     _;;;;_4444		  if _pppp_1111	or _pppp_3333 or _pppp_6666	_%%%%_????_%%%%_pppp_1111_%%%%_pppp_3333_%%%%_||||_%%%%_pppp_6666_%%%%_||||_%%%%_tttt_;;;;_4444_%%%%_;;;;
	     _;;;;_5555		  if _pppp_4444			_%%%%_????_%%%%_pppp_4444_%%%%_tttt_;;;;_5555_%%%%_;;;;
	     _;;;;_7777		  if _pppp_1111	or _pppp_5555		_%%%%_????_%%%%_pppp_1111_%%%%_pppp_5555_%%%%_||||_%%%%_tttt_;;;;_7777_%%%%_;;;;
	     _;;;;_8888		  if _pppp_7777			_%%%%_????_%%%%_pppp_7777_%%%%_tttt_;;;;_8888_%%%%_;;;;
	     _mmmm		  always		_mmmm
	     _^^^^_NNNN	or _^^^^_OOOO	  if _pppp_9999	_^^^^_NNNN, else _^^^^_OOOO	_%%%%_????_%%%%_pppp_9999_%%%%_tttt_^^^^_NNNN_%%%%_eeee_^^^^_OOOO_%%%%_;;;;





								       PPPPaaaaggggeeee 22223333






NNNN									     NNNN



     Putting this all together into the	_ssss_gggg_rrrr sequence gives:

     _ssss_gggg_rrrr_====_\\\\_EEEE_[[[[_0000_%%%%_????_%%%%_pppp_2222_%%%%_pppp_6666_%%%%_||||_%%%%_tttt_;;;;_3333_%%%%_;;;;_%%%%_????_%%%%_pppp_1111_%%%%_pppp_3333_%%%%_||||_%%%%_pppp_6666_%%%%
	  _||||_%%%%_tttt_;;;;_4444_%%%%_;;;;_%%%%_????_%%%%_pppp_5555_%%%%_tttt_;;;;_5555_%%%%_;;;;_%%%%_????_%%%%_pppp_1111_%%%%_pppp_5555_%%%%
	  _||||_%%%%_tttt_;;;;_7777_%%%%_;;;;_%%%%_????_%%%%_pppp_7777_%%%%_tttt_;;;;_8888_%%%%_;;;;_mmmm_%%%%_????_%%%%_pppp_9999_%%%%_tttt_^^^^_NNNN_%%%%_eeee_^^^^_OOOO_%%%%_;;;;_,,,,

     Remember that _ssss_gggg_rrrr and _ssss_gggg_rrrr_0000	must always be specified.

   SSSSeeeeccccttttiiiioooonnnn 1111----8888::::	KKKKeeeeyyyyppppaaaadddd
     If	the device has a keypad	that transmits sequences when the keys are
     pressed, this information can also	be specified.  Note that it is not
     possible to handle	devices	where the keypad only works in local (this
     applies, for example, to the unshifted Hewlett-Packard 2621 keys).	 If
     the keypad	can be set to transmit or not transmit,	specify	these
     sequences as _ssss_mmmm_kkkk_xxxx and _rrrr_mmmm_kkkk_xxxx.  Otherwise the	keypad is assumed to always
     transmit.

     The sequences sent	by the left arrow, right arrow,	up arrow, down arrow,
     and home keys can be given	as _kkkk_cccc_uuuu_bbbb_1111_,,,, _kkkk_cccc_uuuu_ffff_1111_,,,, _kkkk_cccc_uuuu_uuuu_1111_,,,,	_kkkk_cccc_uuuu_dddd_1111_,,,, and _kkkk_hhhh_oooo_mmmm_eeee,
     respectively.  If there are function keys such as f0, f1, ..., f63, the
     sequences they send can be	specified as _kkkk_ffff_0000_,,,, _kkkk_ffff_1111_,,,, _...._...._...._,,,, _kkkk_ffff_6666_3333.  If the
     first 11 keys have	labels other than the default f0 through f10, the
     labels can	be given as _llll_ffff_0000_,,,, _llll_ffff_1111_,,,, _...._...._...._,,,, _llll_ffff_1111_0000.  The codes transmitted	by
     certain other special keys	can be given:  _kkkk_llll_llll (home down),	_kkkk_bbbb_ssss
     (backspace), _kkkk_tttt_bbbb_cccc (clear all tabs), _kkkk_cccc_tttt_aaaa_bbbb (clear the tab stop in this
     column), _kkkk_cccc_llll_rrrr (clear screen or erase key),	_kkkk_dddd_cccc_hhhh_1111 (delete character), _kkkk_dddd_llll_1111
     (delete line), _kkkk_rrrr_mmmm_iiii_rrrr (exit	insert mode), _kkkk_eeee_llll (clear to end	of line), _kkkk_eeee_dddd
     (clear to end of screen), _kkkk_iiii_cccc_hhhh_1111 (insert character or enter	insert mode),
     _kkkk_iiii_llll_1111 (insert line), _kkkk_nnnn_pppp (next page), _kkkk_pppp_pppp (previous	page), _kkkk_iiii_nnnn_dddd (scroll
     forward/down), _kkkk_rrrr_iiii	(scroll	backward/up), _kkkk_hhhh_tttt_ssss (set	a tab stop in this
     column).  In addition, if the keypad has a	3 by 3 array of	keys including
     the four arrow keys, the other five keys can be given as _kkkk_aaaa_1111, _kkkk_aaaa_3333,	_kkkk_bbbb_2222,
     _kkkk_cccc_1111, and _kkkk_cccc_3333.  These keys are useful when the effects of a	3 by 3
     directional pad are needed.  Further keys are defined above in the
     capabilities list.

     Strings to	program	function keys can be specified as _pppp_ffff_kkkk_eeee_yyyy, _pppp_ffff_llll_oooo_cccc,	and
     _pppp_ffff_xxxx.  A string to program screen labels should be specified as _pppp_llll_nnnn.  Each
     of	these strings takes two	parameters: a function key identifier and a
     string to program it with.	 _pppp_ffff_kkkk_eeee_yyyy causes pressing the given key to	be the
     same as the user typing the given string; _pppp_ffff_llll_oooo_cccc causes the	string to be
     executed by the terminal in local mode; and _pppp_ffff_xxxx causes the	string to be
     transmitted to the	computer.  The capabilities _nnnn_llll_aaaa_bbbb, _llll_wwww and _llll_hhhh define the
     number of programmable screen labels and their width and height.  If
     there are commands	to turn	the labels on and off, give them in _ssss_mmmm_llll_nnnn
     and _rrrr_mmmm_llll_nnnn.	_ssss_mmmm_llll_nnnn is	normally output	after one or more _pppp_llll_nnnn sequences	to
     make sure that the	change becomes visible.

   SSSSeeeeccccttttiiiioooonnnn 1111----9999::::	TTTTaaaabbbbssss aaaannnndddd IIIInnnniiiittttiiiiaaaalllliiiizzzzaaaattttiiiioooonnnn
     If	the device has hardware	tabs, the command to advance to	the next tab
     stop can be given as _hhhh_tttt (usually control I).  A ``backtab'' command that
     moves leftward to the next	tab stop can be	given as _cccc_bbbb_tttt.  By convention,



								       PPPPaaaaggggeeee 22224444






NNNN									     NNNN



     if	tty modes show that tabs are being expanded by the computer rather
     than being	sent to	the device, programs should not	use _hhhh_tttt or _cccc_bbbb_tttt (even if
     they are present) because the user	may not	have the tab stops properly
     set.  If the device has hardware tabs that	are initially set every	_n
     spaces when the device is powered up, the numeric parameter _iiii_tttt is given,
     showing the number	of spaces the tabs are set to.	This is	normally used
     by	_tttt_pppp_uuuu_tttt _iiii_nnnn_iiii_tttt [see _tttt_pppp_uuuu_tttt(1)]	to determine whether to	set the	mode for
     hardware tab expansion and	whether	to set the tab stops.  If the device
     has tab stops that	can be saved in	nonvolatile memory, the	_tttt_eeee_rrrr_mmmm_iiii_nnnn_ffff_oooo
     description can assume that they are properly set.	 If there are commands
     to	set and	clear tab stops, they can be given as _tttt_bbbb_cccc (clear all tab
     stops) and	_hhhh_tttt_ssss (set a tab stop in the current column of every row).

     Other capabilities	include:  _iiii_ssss_1111, _iiii_ssss_2222, and	_iiii_ssss_3333, initialization strings
     for the device; _iiii_pppp_rrrr_oooo_gggg, the	path name of a program to be run to initialize
     the device; and _iiii_ffff, the name of a file containing long initialization
     strings.  These strings are expected to set the device into modes
     consistent	with the rest of the _tttt_eeee_rrrr_mmmm_iiii_nnnn_ffff_oooo description.  They must be sent
     to	the device each	time the user logs in and be output in the following
     order:  run the program _iiii_pppp_rrrr_oooo_gggg; output _iiii_ssss_1111;	output _iiii_ssss_2222; set	the margins
     using _mmmm_gggg_cccc,	_ssss_mmmm_gggg_llll and _ssss_mmmm_gggg_rrrr; set the tabs using _tttt_bbbb_cccc and _hhhh_tttt_ssss; print the file
     _iiii_ffff; and finally output _iiii_ssss_3333.  This is usually done using the _iiii_nnnn_iiii_tttt option
     of	_tttt_pppp_uuuu_tttt.

     Most initialization is done with _iiii_ssss_2222.  Special device modes can be	set up
     without duplicating strings by putting the	common sequences in _iiii_ssss_2222	and
     special cases in _iiii_ssss_1111 and _iiii_ssss_3333.  Sequences that do a	reset from a totally
     unknown state can be given	as _rrrr_ssss_1111,	_rrrr_ssss_2222, _rrrr_ffff, and _rrrr_ssss_3333, analogous to _iiii_ssss_1111,
     _iiii_ssss_2222, _iiii_ssss_3333, and _iiii_ffff.	(The method using files, _iiii_ffff and	_rrrr_ffff, is used for	a few
     terminals,	from _////_uuuu_ssss_rrrr_////_ssss_hhhh_aaaa_rrrr_eeee_////_llll_iiii_bbbb_////_tttt_aaaa_bbbb_ssss_eeee_tttt_////_****; however, the recommended method
     is	to use the initialization and reset strings.)  These strings are
     output by _tttt_pppp_uuuu_tttt reset, which is used when the terminal gets	into a wedged
     state.  Commands are normally placed in _rrrr_ssss_1111, _rrrr_ssss_2222, _rrrr_ssss_3333, and	_rrrr_ffff only	if
     they produce annoying effects on the screen and are not necessary when
     logging in.  For example, the command to set a terminal into 80-column
     mode would	normally be part of _iiii_ssss_2222, but on	some terminals it causes an
     annoying glitch on	the screen and is not normally needed because the
     terminal is usually already in 80-column mode.

     If	a more complex sequence	is needed to set the tabs than can be
     described by using	_tttt_bbbb_cccc and	_hhhh_tttt_ssss, the sequence can be placed	in _iiii_ssss_2222 or _iiii_ffff.

     Any margin	can be cleared with _mmmm_gggg_cccc.  (For instructions on how to specify
     commands to set and clear margins,	see "Margins" below under "PRINTER
     CAPABILITIES.")

   SSSSeeeeccccttttiiiioooonnnn 1111----11110000:::: DDDDeeeellllaaaayyyyssss
     Certain capabilities control padding in the _tttt_tttt_yyyy driver.  These are
     primarily needed by hard-copy terminals, and are used by _tttt_pppp_uuuu_tttt _iiii_nnnn_iiii_tttt	to set
     tty modes appropriately.  Delays embedded in the capabilities _cccc_rrrr, _iiii_nnnn_dddd,
     _cccc_uuuu_bbbb_1111, _ffff_ffff, and _tttt_aaaa_bbbb can be used to set the appropriate delay	bits to	be set
     in	the tty	driver.	 If _pppp_bbbb (padding	baud rate) is given, these values can



								       PPPPaaaaggggeeee 22225555






NNNN									     NNNN



     be	ignored	at baud	rates below the	value of _pppp_bbbb.

   SSSSeeeeccccttttiiiioooonnnn 1111----11111111:::: SSSSttttaaaattttuuuussss	LLLLiiiinnnneeeessss
     If	the terminal has an extra ``status line'' that is not normally used by
     software, this fact can be	indicated.  If the status line is viewed as an
     extra line	below the bottom line, into which one can cursor address
     normally (such as the Heathkit h19's 25th line, or	the 24th line of a
     VT100 which is set	to a 23-line scrolling region),	the capability _hhhh_ssss
     should be given.  Special strings that go to a given column of the	status
     line and return from the status line can be given as _tttt_ssss_llll and _ffff_ssss_llll.	(_ffff_ssss_llll
     must leave	the cursor position in the same	place it was before _tttt_ssss_llll.  If
     necessary,	the _ssss_cccc and _rrrr_cccc strings can be included in _tttt_ssss_llll and _ffff_ssss_llll to	get
     this effect.)  The	capability _tttt_ssss_llll takes one parameter, which is the
     column number of the status line the cursor is to be moved	to.

     If	escape sequences and other special commands, such as tab, work while
     in	the status line, the flag _eeee_ssss_llll_oooo_kkkk	can be given.  A string	which turns
     off the status line (or otherwise erases its contents) should be given as
     _dddd_ssss_llll.  If the terminal has commands	to save	and restore the	position of
     the cursor, give them as _ssss_cccc and _rrrr_cccc.  The status line is normally assumed
     to	be the same width as the rest of the screen, for example, _cccc_oooo_llll_ssss.	 If
     the status	line is	a different width (possibly because the	terminal does
     not allow an entire line to be loaded) the	width, in columns, can be
     indicated with the	numeric	parameter _wwww_ssss_llll.

   SSSSeeeeccccttttiiiioooonnnn 1111----11112222:::: LLLLiiiinnnneeee GGGGrrrraaaapppphhhhiiiiccccssss
     If	the device has a line drawing alternate	character set, the mapping of
     glyph to character	would be given in _aaaa_cccc_ssss_cccc.	 The definition	of this	string
     is	based on the alternate character set used in the DEC VT100 terminal,
     extended slightly with some characters from the AT&T 4410v1 terminal.

						   vt100+
			glyph name		  character

			arrow pointing right	      _++++
			arrow pointing left	      _,,,,
			arrow pointing down	      _....
			solid square block	      _0000
			lantern	symbol		      _IIII
			arrow pointing up	      _----
			diamond			      _````
			checker	board (stipple)	      _aaaa
			degree symbol		      _ffff
			plus/minus		      _gggg
			board of squares	      _hhhh
			lower right corner	      _jjjj
			upper right corner	      _kkkk
			upper left corner	      _llll
			lower left corner	      _mmmm
			plus			      _nnnn
			scan line 1		      _oooo




								       PPPPaaaaggggeeee 22226666






NNNN									     NNNN



			horizontal line		      _qqqq
			scan line 9		      _ssss
			left tee (|-)		      _tttt
			right tee (-|)		      _uuuu
			bottom tee (_|)		      _vvvv
			top tee	(_|)		      _wwww
			vertical line		      _xxxx
			bullet			      _~~~~

     The best way to describe a	new device's line graphics set is to add a
     third column to the above table with the characters for the new device
     that produce the appropriate glyph	when the device	is in the alternate
     character set mode.  For example,

					    vt100+   new tty
		       glyph name	     char     char

		       upper left corner      _llll		_RRRR
		       lower left corner      _mmmm		_FFFF
		       upper right corner     _kkkk		_TTTT
		       lower right corner     _jjjj		_GGGG
		       horizontal line	      _qqqq		_,,,,
		       vertical	line	      _xxxx		_....

     Now write down the	characters left	to right, as in
     ``_aaaa_cccc_ssss_cccc_====_llll_RRRR_mmmm_FFFF_kkkk_TTTT_jjjj_GGGG_qqqq_\\\\_,,,,_xxxx_....''.

     In	addition, _tttt_eeee_rrrr_mmmm_iiii_nnnn_ffff_oooo allows you to define	multiple character sets.  See
     Section 2-5 for details.

   SSSSeeeeccccttttiiiioooonnnn 1111----11113333:::: CCCCoooolllloooorrrr MMMMaaaannnniiiippppuuuullllaaaattttiiiioooonnnn
     Let us define two methods of color	manipulation: the Tektronix method and
     the HP method.  The Tektronix method uses a set of	N predefined colors
     (usually 8) from which a user can select "current"	foreground and
     background	colors.	 Thus a	terminal can support up	to N colors mixed into
     N*N color-pairs to	be displayed on	the screen at the same time.  When
     using an HP method	the user cannot	define the foreground independently of
     the background, or	vice-versa.  Instead, the user must define an entire
     color-pair	at once.  Up to	M color-pairs, made from 2*M different colors,
     can be defined this way.  Most existing color terminals belong to one of
     these two classes of terminals.

     The numeric variables _cccc_oooo_llll_oooo_rrrr_ssss and _pppp_aaaa_iiii_rrrr_ssss define the number of colors	and
     color-pairs that can be displayed on the screen at	the same time.	If a
     terminal can change the definition	of a color (for	example, the Tektronix
     4100 and 4200 series terminals), this should be specified with _cccc_cccc_cccc	(can
     change color).  To	change the definition of a color (Tektronix 4200
     method), use _iiii_nnnn_iiii_tttt_cccc	(initialize color).  It	requires four arguments: color
     number (ranging from 0 to _cccc_oooo_llll_oooo_rrrr_ssss-1) and three RGB (red, green, and	blue)
     values or three HLS colors	(Hue, Lightness, Saturation).  Ranges of RGB
     and HLS values are	terminal dependent.




								       PPPPaaaaggggeeee 22227777






NNNN									     NNNN



     Tektronix 4100 series terminals only use HLS color	notation.  For such
     terminals (or dual-mode terminals to be operated in HLS mode) one must
     define a boolean variable _hhhh_llll_ssss; that would instruct	the _cccc_uuuu_rrrr_ssss_eeee_ssss _iiii_nnnn_iiii_tttt______cccc_oooo_llll_oooo_rrrr
     routine to	convert	its RGB	arguments to HLS before	sending	them to	the
     terminal.	The last three arguments to the	_iiii_nnnn_iiii_tttt_cccc string would then	be HLS
     values.

     If	a terminal can change the definitions of colors, but uses a color
     notation different	from RGB and HLS, a mapping to either RGB or HLS must
     be	developed.

     To	set current foreground or background to	a given	color, use _ssss_eeee_tttt_aaaa_ffff (set
     ANSI foreground) and _ssss_eeee_tttt_aaaa_bbbb	(set ANSI background).	They require one
     parameter:	the number of the color.  To initialize	a color-pair (HP
     method), use _iiii_nnnn_iiii_tttt_pppp	(initialize pair).  It requires	seven parameters: the
     number of a color-pair (range=0 to	_pppp_aaaa_iiii_rrrr_ssss-1), and six RGB values: three
     for the foreground	followed by three for the background.  (Each of	these
     groups of three should be in the order RGB.)  When	_iiii_nnnn_iiii_tttt_cccc or _iiii_nnnn_iiii_tttt_pppp are
     used, RGB or HLS arguments	should be in the order "red, green, blue" or
     "hue, lightness, saturation"), respectively.  To make a color-pair
     current, use _ssss_cccc_pppp (set color-pair).	 It takes one parameter, the number of
     a color-pair.

     Some terminals (for example, most color terminal emulators	for PCs) erase
     areas of the screen with current background color.	 In such cases,	_bbbb_cccc_eeee
     (background color erase) should be	defined.  The variable _oooo_pppp (original
     pair) contains a sequence for setting the foreground and the background
     colors to what they were at the terminal start-up time.  Similarly, _oooo_cccc
     (original colors) contains	a control sequence for setting all colors (for
     the Tektronix method) or color-pairs (for the HP method) to the values
     they had at the terminal start-up time.

     Some color	terminals substitute color for video attributes.  Such video
     attributes	should not be combined with colors.  Information about these
     video attributes should be	packed into the	_nnnn_cccc_vvvv (no	color video) variable.
     There is a	one-to-one correspondence between the nine least significant
     bits of that variable and the video attributes.  The following table
     depicts this correspondence.

					  Bit	   Decimal
			  Attribute	Position    Value
			 _________________________________
			 _AAAA______SSSS_TTTT_AAAA_NNNN_DDDD_OOOO_UUUU_TTTT	   0	       1
			 _AAAA______UUUU_NNNN_DDDD_EEEE_RRRR_LLLL_IIII_NNNN_EEEE	   1	       2
			 _AAAA______RRRR_EEEE_VVVV_EEEE_RRRR_SSSS_EEEE	   2	       4
			 _AAAA______BBBB_LLLL_IIII_NNNN_KKKK	   3	       8
			 _AAAA______DDDD_IIII_MMMM		   4	      16
			 _AAAA______BBBB_OOOO_LLLL_DDDD		   5	      32
			 _AAAA______IIII_NNNN_VVVV_IIII_SSSS	   6	      64
			 _AAAA______PPPP_RRRR_OOOO_TTTT_EEEE_CCCC_TTTT	   7	     128





								       PPPPaaaaggggeeee 22228888






NNNN									     NNNN



			 _AAAA______AAAA_LLLL_TTTT_CCCC_HHHH_AAAA_RRRR_SSSS_EEEE_TTTT	   8	     256
     When a particular video attribute should not be used with colors, the
     corresponding _nnnn_cccc_vvvv bit should be set to 1; otherwise it should be set to
     zero.  To determine the information to pack into the _nnnn_cccc_vvvv variable,	you
     must add together the decimal values corresponding	to those attributes
     that cannot coexist with colors.  For example, if the terminal uses
     colors to simulate	reverse	video (bit number 2 and	decimal	value 4) and
     bold (bit number 5	and decimal value 32), the resulting value for _nnnn_cccc_vvvv
     will be 36	(4 + 32).

   SSSSeeeeccccttttiiiioooonnnn 1111----11114444:::: MMMMiiiisssscccceeeellllllllaaaannnneeeeoooouuuussss
     If	the terminal requires other than a null	(zero) character as a pad,
     then this can be given as _pppp_aaaa_dddd.  Only the first character of the _pppp_aaaa_dddd
     string is used.  If the terminal does not have a pad character, specify
     _nnnn_pppp_cccc.

     If	the terminal can move up or down half a	line, this can be indicated
     with _hhhh_uuuu (half-line	up) and	_hhhh_dddd (half-line down).  This is primarily	useful
     for superscripts and subscripts on	hardcopy terminals.  If	a hardcopy
     terminal can eject	to the next page (form feed), give this	as _ffff_ffff (usually
     control L).

     If	there is a command to repeat a given character a given number of times
     (to save time transmitting	a large	number of identical characters)	this
     can be indicated with the parameterized string _rrrr_eeee_pppp.  The first parameter
     is	the character to be repeated and the second is the number of times to
     repeat it.	 Thus, _tttt_pppp_aaaa_rrrr_mmmm_((((_rrrr_eeee_pppp_eeee_aaaa_tttt______cccc_hhhh_aaaa_rrrr_,,,, _''''_xxxx_''''_,,,, _1111_0000_)))) is the same as _xxxx_xxxx_xxxx_xxxx_xxxx_xxxx_xxxx_xxxx_xxxx_xxxx_....

     If	the terminal has a settable command character, such as the Tektronix
     4025, this	can be indicated with _cccc_mmmm_dddd_cccc_hhhh.  A	prototype command character is
     chosen which is used in all capabilities.	This character is given	in the
     _cccc_mmmm_dddd_cccc_hhhh capability to identify it.  The following convention	is supported
     on	some UNIX systems:  If the environment variable	_CCCC_CCCC exists, all
     occurrences of the	prototype character are	replaced with the character in
     _CCCC_CCCC.

     Terminal descriptions that	do not represent a specific kind of known
     terminal, such as _s_w_i_t_c_h, _d_i_a_l_u_p, _p_a_t_c_h, and _n_e_t_w_o_r_k, should include the
     _gggg_nnnn	(generic) capability so	that programs can complain that	they do	not
     know how to talk to the terminal.	(This capability does not apply	to
     _v_i_r_t_u_a_l terminal descriptions for which the escape	sequences are known.)
     If	the terminal is	one of those supported by the UNIX system virtual
     terminal protocol,	the terminal number can	be given as _vvvv_tttt.	 A line-turn-
     around sequence to	be transmitted before doing reads should be specified
     in	_rrrr_ffff_iiii.

     If	the device uses	xon/xoff handshaking for flow control, give _xxxx_oooo_nnnn.
     Padding information should	still be included so that routines can make
     better decisions about costs, but actual pad characters will not be
     transmitted.  Sequences to	turn on	and off	xon/xoff handshaking may be
     given in _ssss_mmmm_xxxx_oooo_nnnn and	_rrrr_mmmm_xxxx_oooo_nnnn.	If the characters used for handshaking are not
     _^^^^_SSSS	and _^^^^_QQQQ,	they may be specified with _xxxx_oooo_nnnn_cccc	and _xxxx_oooo_ffff_ffff_cccc.



								       PPPPaaaaggggeeee 22229999






NNNN									     NNNN



     If	the terminal has a ``meta key''	which acts as a	shift key, setting the
     8th bit of	any character transmitted, this	fact can be indicated with _kkkk_mmmm.
     Otherwise,	software will assume that the 8th bit is parity	and it will
     usually be	cleared.  If strings exist to turn this	``meta mode'' on and
     off, they can be given as _ssss_mmmm_mmmm and _rrrr_mmmm_mmmm.

     If	the terminal has more lines of memory than will	fit on the screen at
     once, the number of lines of memory can be	indicated with _llll_mmmm.  A value of
     _llll_mmmm#0 indicates that the number of lines is	not fixed, but that there is
     still more	memory than fits on the	screen.

     Media copy	strings	which control an auxiliary printer connected to	the
     terminal can be given as _mmmm_cccc_0000:  print the contents of the screen, _mmmm_cccc_4444:
     turn off the printer, and _mmmm_cccc_5555:  turn on the printer.  When	the printer is
     on, all text sent to the terminal will be sent to the printer.  A
     variation,	_mmmm_cccc_5555_pppp, takes one	parameter, and leaves the printer on for as
     many characters as	the value of the parameter, then turns the printer
     off.  The parameter should	not exceed 255.	 If the	text is	not displayed
     on	the terminal screen when the printer is	on, specify _mmmm_cccc_5555_iiii (silent
     printer).	All text, including _mmmm_cccc_4444, is transparently passed to the
     printer while an _mmmm_cccc_5555_pppp is in effect.

   SSSSeeeeccccttttiiiioooonnnn 1111----11115555:::: SSSSppppeeeecccciiiiaaaallll CCCCaaaasssseeeessss
     The working model used by _tttt_eeee_rrrr_mmmm_iiii_nnnn_ffff_oooo	fits most terminals reasonably well.
     However, some terminals do	not completely match that model, requiring
     special support by	_tttt_eeee_rrrr_mmmm_iiii_nnnn_ffff_oooo.  These are not meant to be construed as
     deficiencies in the terminals; they are just differences between the
     working model and the actual hardware.  They may be unusual devices or,
     for some reason, do not have all the features of the _tttt_eeee_rrrr_mmmm_iiii_nnnn_ffff_oooo model
     implemented.

     Terminals that cannot display tilde (~) characters, such as certain
     Hazeltine terminals, should indicate _hhhh_zzzz.

     Terminals that ignore a linefeed immediately after	an _aaaa_mmmm wrap, such as
     the Concept 100, should indicate _xxxx_eeee_nnnn_llll.  Those terminals whose cursor
     remains on	the right-most column until another character has been
     received, rather than wrapping immediately	upon receiving the right-most
     character,	such as	the VT100, should also indicate	_xxxx_eeee_nnnn_llll.

     If	_eeee_llll is required to get rid of standout (instead of writing normal text
     on	top of it), _xxxx_hhhh_pppp	should be given.

     Those Teleray terminals whose tabs	turn all characters moved over to
     blanks, should indicate _xxxx_tttt	(destructive tabs).  This capability is	also
     taken to mean that	it is not possible to position the cursor on top of a
     ``magic cookie.''	Therefore, to erase standout mode, it is necessary,
     instead, to use delete and	insert line.

     Those Beehive Superbee terminals which do not transmit the	escape or
     control-C characters, should specify _xxxx_ssss_bbbb, indicating that the f1 key is
     to	be used	for escape and the f2 key for control C.



								       PPPPaaaaggggeeee 33330000






NNNN									     NNNN



   SSSSeeeeccccttttiiiioooonnnn 1111----11116666:::: SSSSiiiimmmmiiiillllaaaarrrr TTTTeeeerrrrmmmmiiiinnnnaaaallllssss
     If	there are two very similar terminals, one can be defined as being just
     like the other with certain exceptions.  The string capability _uuuu_ssss_eeee	can be
     given with	the name of the	similar	terminal.  The capabilities given
     before _uuuu_ssss_eeee	override those in the terminal type invoked by _uuuu_ssss_eeee.  A
     capability	can be canceled	by placing _x_x_@@@@ to the left of the capability
     definition, where _x_x is the capability.  For example, the entry

       _aaaa_tttt_tttt_4444_4444_2222_4444_----_2222_||||_TTTT_eeee_llll_eeee_tttt_yyyy_pppp_eeee _4444_4444_2222_4444 _iiii_nnnn _dddd_iiii_ssss_pppp_llll_aaaa_yyyy _ffff_uuuu_nnnn_cccc_tttt_iiii_oooo_nnnn _gggg_rrrr_oooo_uuuu_pppp _iiii_iiii_,,,,
	 _rrrr_eeee_vvvv_@@@@_,,,, _ssss_gggg_rrrr_@@@@_,,,, _ssss_mmmm_uuuu_llll_@@@@_,,,, _uuuu_ssss_eeee_====_aaaa_tttt_tttt_4444_4444_2222_4444_,,,,

     defines an	AT&T 4424 terminal that	does not have the _rrrr_eeee_vvvv, _ssss_gggg_rrrr, and	_ssss_mmmm_uuuu_llll
     capabilities, and hence cannot do highlighting.  This is useful for
     different modes for a terminal, or	for different user preferences.	 More
     than one _uuuu_ssss_eeee capability may be given.

   PPPPAAAARRRRTTTT	2222:::: PPPPRRRRIIIINNNNTTTTEEEERRRR CCCCAAAAPPPPAAAABBBBIIIILLLLIIIITTTTIIIIEEEESSSS
     The _tttt_eeee_rrrr_mmmm_iiii_nnnn_ffff_oooo database allows you to define	capabilities of	printers as
     well as terminals.	 To find out what capabilities are available for
     printers as well as for terminals,	see the	two lists under	"DEVICE
     CAPABILITIES" that	list capabilities by variable and by capability	name.

   SSSSeeeeccccttttiiiioooonnnn 2222----1111::::	RRRRoooouuuunnnnddddiiiinnnngggg VVVVaaaalllluuuueeeessss
     Because parameterized string capabilities work only with integer values,
     we	recommend that _tttt_eeee_rrrr_mmmm_iiii_nnnn_ffff_oooo	designers create strings that expect numeric
     values that have been rounded.  Application designers should note this
     and should	always round values to the nearest integer before using	them
     with a parameterized string capability.

   SSSSeeeeccccttttiiiioooonnnn 2222----2222::::	PPPPrrrriiiinnnntttteeeerrrr	RRRReeeessssoooolllluuuuttttiiiioooonnnn
     A printer's resolution is defined to be the smallest spacing of
     characters	it can achieve.	 In general printers have independent
     resolution	horizontally and vertically.  Thus the vertical	resolution of
     a printer can be determined by measuring the smallest achievable distance
     between consecutive printing baselines, while the horizontal resolution
     can be determined by measuring the	smallest achievable distance between
     the left-most edges of consecutive	printed, identical, characters.

     All printers are assumed to be capable of printing	with a uniform
     horizontal	and vertical resolution.  The view of printing that _tttt_eeee_rrrr_mmmm_iiii_nnnn_ffff_oooo
     currently presents	is one of printing inside a uniform matrix:  All
     characters	are printed at fixed positions relative	to each	``cell'' in
     the matrix; furthermore, each cell	has the	same size given	by the
     smallest horizontal and vertical step sizes dictated by the resolution.
     (The cell size can	be changed as will be seen later.)

     Many printers are capable of ``proportional printing,'' where the
     horizontal	spacing	depends	on the size of the character last printed.
     _tttt_eeee_rrrr_mmmm_iiii_nnnn_ffff_oooo does not make use	of this	capability, although it	does provide
     enough capability definitions to allow an application to simulate
     proportional printing.




								       PPPPaaaaggggeeee 33331111






NNNN									     NNNN



     A printer must not	only be	able to	print characters as close together as
     the horizontal and	vertical resolutions suggest, but also of ``moving''
     to	a position an integral multiple	of the smallest	distance away from a
     previous position.	 Thus printed characters can be	spaced apart a
     distance that is an integral multiple of the smallest distance, up	to the
     length or width of	a single page.

     Some printers can have different resolutions depending on different
     ``modes.''	 In ``normal mode,'' the existing _tttt_eeee_rrrr_mmmm_iiii_nnnn_ffff_oooo capabilities	are
     assumed to	work on	columns	and lines, just	like a video terminal.	Thus
     the old _llll_iiii_nnnn_eeee_ssss capability would give the length of a page in lines,	and
     the _cccc_oooo_llll_ssss capability would give the	width of a page	in columns.  In
     ``micro mode,'' many _tttt_eeee_rrrr_mmmm_iiii_nnnn_ffff_oooo capabilities	work on	increments of lines
     and columns.  With	some printers the micro	mode may be concomitant	with
     normal mode, so that all the capabilities work at the same	time.

   SSSSeeeeccccttttiiiioooonnnn 2222----3333::::	SSSSppppeeeecccciiiiffffyyyyiiiinnnngggg PPPPrrrriiiinnnntttteeeerrrr RRRReeeessssoooolllluuuuttttiiiioooonnnn
     The printing resolution of	a printer is given in several ways.  Each
     specifies the resolution as the number of smallest	steps per distance:

		       Specification of	Printer	Resolution
		     Characteristic Number of Smallest Steps
		    __________________________________________
		    _oooo_rrrr_hhhh_iiii       Steps per inch horizontally
		    _oooo_rrrr_vvvv_iiii       Steps per inch vertically
		    _oooo_rrrr_cccc	       Steps per column
		    _oooo_rrrr_llll	       Steps per line

     When printing in normal mode, each	character printed causes movement to
     the next column, except in	special	cases described	later; the distance
     moved is the same as the per-column resolution.  Some printers cause an
     automatic movement	to the next line when a	character is printed in	the
     rightmost position; the distance moved vertically is the same as the
     per-line resolution.  When	printing in micro mode,	these distances	can be
     different,	and may	be zero	for some printers.
		       Specification of	Printer	Resolution
			 Automatic Motion after	Printing
		     ________________________________________
		     _N_o_r_m_a_l _M_o_d_e:
		     _oooo_rrrr_cccc	Steps moved horizontally
		     _oooo_rrrr_llll	Steps moved vertically

		     _M_i_c_r_o _M_o_d_e:
		     _mmmm_cccc_ssss	Steps moved horizontally
		     _mmmm_llll_ssss	Steps moved vertically

     Some printers are capable of printing wide	characters.  The distance
     moved when	a wide character is printed in normal mode may be different
     from when a regular width character is printed.  The distance moved when
     a wide character is printed in micro mode may also	be different from when
     a regular character is printed in micro mode, but the differences are
     assumed to	be related:  If	the distance moved for a regular character is
     the same whether in normal	mode or	micro mode (_mmmm_cccc_ssss=_oooo_rrrr_cccc), then the


								       PPPPaaaaggggeeee 33332222






NNNN									     NNNN



     distance moved for	a wide character is also the same whether in normal
     mode or micro mode.  This doesn't mean the	normal character distance is
     necessarily the same as the wide character	distance, just that the
     distances don't change with a change in normal to micro mode.  However,
     if	the distance moved for a regular character is different	in micro mode
     from the distance moved in	normal mode (_mmmm_cccc_ssss<_oooo_rrrr_cccc), the micro mode distance
     is	assumed	to be the same for a wide character printed in micro mode, as
     the table below shows.

		       Specification of	Printer	Resolution
		  Automatic Motion after Printing Wide Character
	      ______________________________________________________
	      _N_o_r_m_a_l _M_o_d_e _o_r _M_i_c_r_o _M_o_d_e	(_mmmm_cccc_ssss = _oooo_rrrr_cccc):
	      _wwww_iiii_dddd_cccc_ssss		 Steps moved horizontally

	      _M_i_c_r_o _M_o_d_e (_mmmm_cccc_ssss <	_oooo_rrrr_cccc):
	      _mmmm_cccc_ssss		 Steps moved horizontally

     There may be control sequences to change the number of columns per	inch
     (the character pitch) and to change the number of lines per inch (the
     line pitch).  If these are	used, the resolution of	the printer changes,
     but the type of change depends on the printer:

		       Specification of	Printer	Resolution
		       Changing	the Character/Line Pitches
	      ______________________________________________________
	      _cccc_pppp_iiii    Change character pitch
	      _cccc_pppp_iiii_xxxx   If	set, _cccc_pppp_iiii changes _oooo_rrrr_hhhh_iiii, otherwise changes _oooo_rrrr_cccc
	      _llll_pppp_iiii    Change line pitch
	      _llll_pppp_iiii_xxxx   If	set, _llll_pppp_iiii changes _oooo_rrrr_vvvv_iiii, otherwise changes _oooo_rrrr_llll

	      _cccc_hhhh_rrrr    Change steps per column
	      _cccc_vvvv_rrrr    Change steps per line

     The _cccc_pppp_iiii and _llll_pppp_iiii string capabilities are each used with a single argument,
     the pitch in columns (or characters) and lines per	inch, respectively.
     The _cccc_hhhh_rrrr and _cccc_vvvv_rrrr string capabilities are each used with a single argument,
     the number	of steps per column and	line, respectively.

     Using any of the control sequences	in these strings will imply a change
     in	some of	the values of _oooo_rrrr_cccc, _oooo_rrrr_hhhh_iiii, _oooo_rrrr_llll, and _oooo_rrrr_vvvv_iiii.	 Also, the distance
     moved when	a wide character is printed, _wwww_iiii_dddd_cccc_ssss, changes in relation	to
     _oooo_rrrr_cccc.  The distance	moved when a character is printed in micro mode, _mmmm_cccc_ssss,
     changes similarly,	with one exception: if the distance is 0 or 1, then no
     change is assumed (see items marked with |-	in the following table).

     Programs that use _cccc_pppp_iiii, _llll_pppp_iiii, _cccc_hhhh_rrrr, or _cccc_vvvv_rrrr should recalculate	the printer
     resolution	(and should recalculate	other values see "Effect of Changing
     Printing Resolution" under	"Dot-Mapped Graphics").
			Specification of Printer Resolution
		  Effects of Changing the Character/Line Pitches




								       PPPPaaaaggggeeee 33333333






NNNN									     NNNN



		 ________________________________________________
			    _B_e_f_o_r_e		      _A_f_t_e_r
		  _______________________________________________
		  Using	_cccc_pppp_iiii with _cccc_pppp_iiii_xxxx clear:
		  orhi'				 oooorrrrhhhhiiii
		  orc'				 orc=o_r_h_i_
						     Vcpi
		  Using	_cccc_pppp_iiii with _cccc_pppp_iiii_xxxx set:
		  orhi'				 orhi=orc.V
		  orc'				 orc	   cpi

		  Using	_llll_pppp_iiii with _llll_pppp_iiii_xxxx clear:
		  orvi'				 orvio_r_v_i_
		  orl'				 orl=V
						      lpi
		  Using	_llll_pppp_iiii with _llll_pppp_iiii_xxxx set:		 .
		  orvi'				 orvi=orl Vlpi
		  orl'				 orl
		  Using	_cccc_hhhh_rrrr_::::
		  orhi'				 orhi
		  orc'				 V
						  chr
		  Using	_cccc_vvvv_rrrr_::::
		  orvi'				 orvi
		  orl'				 Vcvr
		  Using	_cccc_pppp_iiii or _cccc_hhhh_rrrr_::::
		  widcs'			 widcs=widcs'_o_r_c_
		  mcs'				 mcs=mcs'_o_r_c_orc'
							 orc'
     V	 , V   , V   , and V	are the	arguments used with _cccc_pppp_iiii, _llll_pppp_iiii, _cccc_hhhh_rrrr, and
     _ccccc_vvvvp_rrrri, relsppiecticvherly.	 Thecvprrime marks (') indicate the old values.

   SSSSeeeeccccttttiiiioooonnnn 2222----4444::::	CCCCaaaappppaaaabbbbiiiilllliiiittttiiiieeeessss tttthhhhaaaatttt CCCCaaaauuuusssseeee	MMMMoooovvvveeeemmmmeeeennnntttt
     In	the following descriptions, ``movement'' refers	to the motion of the
     ``current position.''  With video terminals this would be the cursor;
     with some printers	this is	the carriage position.	Other printers have
     different equivalents.  In	general, the current position is where a
     character would be	displayed if printed.

     _tttt_eeee_rrrr_mmmm_iiii_nnnn_ffff_oooo has string capabilities for control sequences that cause
     movement a	number of full columns or lines.  It also has equivalent
     string capabilities for control sequences that cause movement a number of
     smallest steps.
			  String Capabilities for Motion
			__________________________________
			_mmmm_cccc_uuuu_bbbb_1111	Move 1 step left
			_mmmm_cccc_uuuu_ffff_1111	Move 1 step right
			_mmmm_cccc_uuuu_uuuu_1111	Move 1 step up
			_mmmm_cccc_uuuu_dddd_1111	Move 1 step down

			_mmmm_cccc_uuuu_bbbb	Move _N steps left




								       PPPPaaaaggggeeee 33334444






NNNN									     NNNN



			_mmmm_cccc_uuuu_ffff	Move _N steps right
			_mmmm_cccc_uuuu_uuuu	Move _N steps up
			_mmmm_cccc_uuuu_dddd	Move _N steps down

			_mmmm_hhhh_pppp_aaaa	Move _N steps from the left
			_mmmm_vvvv_pppp_aaaa	Move _N steps from the top

     The latter	six strings are	each used with a single	argument, _N.

     Sometimes the motion is limited to	less than the width or length of a
     page.  Also, some printers	don't accept absolute motion to	the left of
     the current position.  _tttt_eeee_rrrr_mmmm_iiii_nnnn_ffff_oooo has capabilities for specifying these
     limits.

				 Limits	to Motion
		__________________________________________________
		_mmmm_jjjj_uuuu_mmmm_pppp	Limit on use of	_mmmm_cccc_uuuu_bbbb_1111, _mmmm_cccc_uuuu_ffff_1111, _mmmm_cccc_uuuu_uuuu_1111, _mmmm_cccc_uuuu_dddd_1111
		_mmmm_aaaa_dddd_dddd_rrrr	Limit on use of	_mmmm_hhhh_pppp_aaaa, _mmmm_vvvv_pppp_aaaa
		_xxxx_hhhh_pppp_aaaa	If set,	_hhhh_pppp_aaaa and	_mmmm_hhhh_pppp_aaaa can't move	left
		_xxxx_vvvv_pppp_aaaa	If set,	_vvvv_pppp_aaaa and	_mmmm_vvvv_pppp_aaaa can't move	up

     If	a printer needs	to be in a ``micro mode'' for the motion capabilities
     described above to	work, there are	string capabilities defined to contain
     the control sequence to enter and exit this mode.	A boolean is available
     for those printers	where using a carriage return causes an	automatic
     return to normal mode.

			    Entering/Exiting Micro Mode
			 _________________________________
			 _ssss_mmmm_iiii_cccc_mmmm	 Enter micro mode
			 _rrrr_mmmm_iiii_cccc_mmmm	 Exit micro mode

			 _cccc_rrrr_xxxx_mmmm	 Using _cccc_rrrr exits	micro mode

     The movement made when a character	is printed in the rightmost position
     varies among printers.  Some make no movement, some move to the beginning
     of	the next line, others move to the beginning of the same	line.
     _tttt_eeee_rrrr_mmmm_iiii_nnnn_ffff_oooo has boolean capabilities for describing all three	cases.

			   What	Happens	After Character
			  Printed in Rightmost Position
		  ______________________________________________
		  _ssss_aaaa_mmmm	Automatic move to beginning of same line

     Some printers can be put in a mode	where the normal direction of motion
     is	reversed.  This	mode can be especially useful when there are no
     capabilities for leftward or upward motion, because those capabilities
     can be built from the motion reversal capability and the rightward	or
     downward motion capabilities.  It is best to leave	it up to an
     application to build the leftward or upward capabilities, though, and not
     enter them	in the _tttt_eeee_rrrr_mmmm_iiii_nnnn_ffff_oooo	database.  This	allows several reverse motions
     to	be strung together without intervening wasted steps that leave and
     reenter reverse mode.


								       PPPPaaaaggggeeee 33335555






NNNN									     NNNN



			  Entering/Exiting Reverse Modes
		    ___________________________________________
		    _ssss_llll_mmmm	    Reverse sense of horizontal	motions
		    _rrrr_llll_mmmm	    Restore sense of horizontal	motions
		    _ssss_uuuu_mmmm	    Reverse sense of vertical motions
		    _rrrr_uuuu_mmmm	    Restore sense of vertical motions

		    _W_h_i_l_e _s_e_n_s_e	_o_f _h_o_r_i_z_o_n_t_a_l _m_o_t_i_o_n_s _r_e_v_e_r_s_e_d:
		    _mmmm_cccc_uuuu_bbbb_1111   Move 1 step	right
		    _mmmm_cccc_uuuu_ffff_1111   Move 1 step	left
		    _mmmm_cccc_uuuu_bbbb    Move _N steps right
		    _mmmm_cccc_uuuu_ffff    Move _N steps left
		    _cccc_uuuu_bbbb_1111    Move 1 column right
		    _cccc_uuuu_ffff_1111    Move 1 column left
		    _cccc_uuuu_bbbb	    Move _N columns right
		    _cccc_uuuu_ffff	    Move _N columns left
		    _W_h_i_l_e _s_e_n_s_e	_o_f _v_e_r_t_i_c_a_l _m_o_t_i_o_n_s _r_e_v_e_r_s_e_d:
		    _mmmm_cccc_uuuu_uuuu_1111   Move 1 step	down
		    _mmmm_cccc_uuuu_dddd_1111   Move 1 step	up
		    _mmmm_cccc_uuuu_uuuu    Move _N steps down
		    _mmmm_cccc_uuuu_dddd    Move _N steps up
		    _cccc_uuuu_uuuu_1111    Move 1 line	down
		    _cccc_uuuu_dddd_1111    Move 1 line	up
		    _cccc_uuuu_uuuu	    Move _N lines down
		    _cccc_uuuu_dddd	    Move _N lines up

     The reverse motion	modes should not affect	the _mmmm_vvvv_pppp_aaaa and _mmmm_hhhh_pppp_aaaa absolute
     motion capabilities.  The reverse vertical	motion mode should, however,
     also reverse the action of	the line ``wrapping'' that occurs when a
     character is printed in the right-most position.  Thus printers that have
     the standard _tttt_eeee_rrrr_mmmm_iiii_nnnn_ffff_oooo capability _aaaa_mmmm defined should	experience motion to
     the beginning of the previous line	when a character is printed in the
     right-most	position under reverse vertical	motion mode.

     The action	when any other motion capabilities are used in reverse motion
     modes is not defined; thus, programs must exit reverse motion modes
     before using other	motion capabilities.

     Two miscellaneous capabilities complete the list of new motion
     capabilities.  One	of these is needed for printers	that move the current
     position to the beginning of a line when certain control characters, such
     as	``line-feed'' or ``form-feed,''	are used.  The other is	used for the
     capability	of suspending the motion that normally occurs after printing a
     character.

			   Miscellaneous Motion	Strings
	 ________________________________________________________________
	 _dddd_oooo_cccc_rrrr	 List of control characters causing _cccc_rrrr
	 _zzzz_eeee_rrrr_oooo_mmmm	 Prevent auto motion after printing next single	character






								       PPPPaaaaggggeeee 33336666






NNNN									     NNNN



   MMMMaaaarrrrggggiiiinnnnssss
     _tttt_eeee_rrrr_mmmm_iiii_nnnn_ffff_oooo provides two strings for setting margins on terminals: one for
     the left and one for the right margin.  Printers, however,	have two
     additional	margins, for the top and bottom	margins	of each	page.
     Furthermore, some printers	require	not using motion strings to move the
     current position to a margin and then fixing the margin there, but
     require the specification of where	a margin should	be regardless of the
     current position.	Therefore _tttt_eeee_rrrr_mmmm_iiii_nnnn_ffff_oooo offers six additional strings for
     defining margins with printers.

				 Setting Margins
		    __________________________________________
		    _ssss_mmmm_gggg_llll    Set	left margin at current column
		    _ssss_mmmm_gggg_rrrr    Set	right margin at	current	column
		    _ssss_mmmm_gggg_bbbb    Set	bottom margin at current line
		    _ssss_mmmm_gggg_tttt    Set	top margin at current line

		    _ssss_mmmm_gggg_bbbb_pppp   Set	bottom margin at line _N
		    _ssss_mmmm_gggg_llll_pppp   Set	left margin at column _N
		    _ssss_mmmm_gggg_rrrr_pppp   Set	right margin at	column _N
		    _ssss_mmmm_gggg_tttt_pppp   Set	top margin at line _N

     The last four strings are used with one or	more arguments that give the
     position of the margin or margins to set.	If both	of _ssss_mmmm_gggg_llll_pppp and _ssss_mmmm_gggg_rrrr_pppp are
     set, each is used with a single argument, _N, that gives the column	number
     of	the left and right margin, respectively.  If both of _ssss_mmmm_gggg_tttt_pppp and _ssss_mmmm_gggg_bbbb_pppp
     are set, each is used to set the top and bottom margin, respectively:
     _ssss_mmmm_gggg_tttt_pppp is used with	a single argument, _N, the line number of the top
     margin; however, _ssss_mmmm_gggg_bbbb_pppp is used with two arguments,	_N and _M, that give the
     line number of the	bottom margin, the first counting from the top of the
     page and the second counting from the bottom.  This accommodates the two
     styles of specifying the bottom margin in different manufacturers'
     printers.	When coding a _tttt_eeee_rrrr_mmmm_iiii_nnnn_ffff_oooo entry for a printer that	has a settable
     bottom margin, only the first or second parameter should be used,
     depending on the printer.	When writing an	application that uses _ssss_mmmm_gggg_bbbb_pppp to
     set the bottom margin, both arguments must	be given.

     If	only one of _ssss_mmmm_gggg_llll_pppp and _ssss_mmmm_gggg_rrrr_pppp is set, then it is used with two
     arguments,	the column number of the left and right	margins, in that
     order.  Likewise, if only one of _ssss_mmmm_gggg_tttt_pppp and	_ssss_mmmm_gggg_bbbb_pppp is set, then it is used
     with two arguments	that give the top and bottom margins, in that order,
     counting from the top of the page.	 Thus when coding a _tttt_eeee_rrrr_mmmm_iiii_nnnn_ffff_oooo entry for
     a printer that requires setting both left and right or top	and bottom
     margins simultaneously, only one of _ssss_mmmm_gggg_llll_pppp and _ssss_mmmm_gggg_rrrr_pppp or _ssss_mmmm_gggg_tttt_pppp and _ssss_mmmm_gggg_bbbb_pppp
     should be defined;	the other should be left blank.	 When writing an
     application that uses these string	capabilities, the pairs	should be
     first checked to see if each in the pair is set or	only one is set, and
     should then be used accordingly.

     In	counting lines or columns, line	zero is	the top	line and column	zero
     is	the left-most column.  A zero value for	the second argument with _ssss_mmmm_gggg_bbbb_pppp
     means the bottom line of the page.



								       PPPPaaaaggggeeee 33337777






NNNN									     NNNN



     All margins can be	cleared	with _mmmm_gggg_cccc.

   SSSShhhhaaaaddddoooowwwwssss,,,, IIIIttttaaaalllliiiiccccssss,,,, WWWWiiiiddddeeee CCCChhhhaaaarrrraaaacccctttteeeerrrrssss,,,, SSSSuuuuppppeeeerrrrssssccccrrrriiiippppttttssss,,,, SSSSuuuubbbbssssccccrrrriiiippppttttssss
     Five new sets of strings are used to describe the capabilities printers
     have of enhancing printed text.

				Enhanced Printing
	       ____________________________________________________
	       _ssss_ssss_hhhh_mmmm    Enter shadow-printing mode
	       _rrrr_ssss_hhhh_mmmm    Exit shadow-printing mode

	       _ssss_iiii_tttt_mmmm    Enter italicizing mode
	       _rrrr_iiii_tttt_mmmm    Exit italicizing	mode
	       _ssss_wwww_iiii_dddd_mmmm   Enter wide character mode
	       _rrrr_wwww_iiii_dddd_mmmm   Exit wide character mode

	       _ssss_ssss_uuuu_pppp_mmmm   Enter superscript mode
	       _rrrr_ssss_uuuu_pppp_mmmm   Exit superscript	mode
	       _ssss_uuuu_pppp_cccc_ssss   List of characters available as superscripts
	       _ssss_ssss_uuuu_bbbb_mmmm   Enter subscript mode
	       _rrrr_ssss_uuuu_bbbb_mmmm   Exit subscript mode
	       _ssss_uuuu_bbbb_cccc_ssss   List of characters available as subscripts

     If	a printer requires the _ssss_ssss_hhhh_mmmm control sequence before every character to
     be	shadow-printed,	the _rrrr_ssss_hhhh_mmmm string	is left	blank.	Thus programs that
     find a control sequence in	_ssss_ssss_hhhh_mmmm but none in _rrrr_ssss_hhhh_mmmm should use the _ssss_ssss_hhhh_mmmm
     control sequence before every character to	be shadow-printed; otherwise,
     the _ssss_ssss_hhhh_mmmm control sequence should be used once before the set of
     characters	to be shadow-printed, followed
     by	_rrrr_ssss_hhhh_mmmm.  The same	is also	true of	each of	the _ssss_iiii_tttt_mmmm/_rrrr_iiii_tttt_mmmm, _ssss_wwww_iiii_dddd_mmmm/_rrrr_wwww_iiii_dddd_mmmm,
     _ssss_ssss_uuuu_pppp_mmmm/_rrrr_ssss_uuuu_pppp_mmmm, and _ssss_ssss_uuuu_bbbb_mmmm/ _rrrr_ssss_uuuu_bbbb_mmmm pairs.

     Note that _tttt_eeee_rrrr_mmmm_iiii_nnnn_ffff_oooo	also has a capability for printing emboldened text
     (_bbbb_oooo_llll_dddd).  While shadow printing and	emboldened printing are	similar	in
     that they ``darken'' the text, many printers produce these	two types of
     print in slightly different ways.	Generally, emboldened printing is done
     by	overstriking the same character	one or more times.  Shadow printing
     likewise usually involves overstriking, but with a	slight movement	up
     and/or to the side	so that	the character is ``fatter.''

     It	is assumed that	enhanced printing modes	are independent	modes, so that
     it	would be possible, for instance, to shadow print italicized
     subscripts.

     As	mentioned earlier, the amount of motion	automatically made after
     printing a	wide character should be given in _wwww_iiii_dddd_cccc_ssss.

     If	only a subset of the printable ASCII characters	can be printed as
     superscripts or subscripts, they should be	listed in _ssss_uuuu_pppp_cccc_ssss	or _ssss_uuuu_bbbb_cccc_ssss
     strings, respectively.  If	the _ssss_ssss_uuuu_pppp_mmmm or _ssss_ssss_uuuu_bbbb_mmmm strings contain control
     sequences,	but the	corresponding _ssss_uuuu_pppp_cccc_ssss or _ssss_uuuu_bbbb_cccc_ssss strings are empty,	it is
     assumed that all printable	ASCII characters are available as superscripts



								       PPPPaaaaggggeeee 33338888






NNNN									     NNNN



     or	subscripts.

     Automatic motion made after printing a superscript	or subscript is
     assumed to	be the same as for regular characters.	Thus, for example,
     printing any of the following three examples will result in equivalent
     motion:

	  _BBBB_iiii  _BBBB	  _BBBB_iiii
	       _iiii
     Note that the existing _mmmm_ssss_gggg_rrrr boolean capability describes whether motion
     control sequences can be used while in ``standout mode.''	This
     capability	is extended to cover the enhanced printing modes added here.
     _mmmm_ssss_gggg_rrrr should be set	for those printers that	accept any motion control
     sequences without affecting shadow, italicized, widened, superscript, or
     subscript printing.  Conversely, if _mmmm_ssss_gggg_rrrr is not set, a program should end
     these modes before	attempting any motion.

   SSSSeeeeccccttttiiiioooonnnn 2222----5555::::	AAAAlllltttteeeerrrrnnnnaaaatttteeee CCCChhhhaaaarrrraaaacccctttteeeerrrr SSSSeeeettttssss
     In	addition to allowing you to define line	graphics (described in Section
     1-12), _tttt_eeee_rrrr_mmmm_iiii_nnnn_ffff_oooo lets you define alternate character sets.	The following
     capabilities cover	printers and terminals with multiple selectable	or
     definable character sets.

			     Alternate Character Sets
	     _________________________________________________________
	     _ssss_cccc_ssss     Select character set _N

	     _ssss_cccc_ssss_dddd    Start definition of character set _N, _M characters
	     _dddd_eeee_ffff_cccc    Define character _A, _B dots	wide, descender	_D
	     _rrrr_cccc_ssss_dddd    End definition of character set _N
	     _cccc_ssss_nnnn_mmmm    List of character set names

	     _dddd_aaaa_iiii_ssss_yyyy   Printer has manually changed print-wheels

     The _ssss_cccc_ssss, _rrrr_cccc_ssss_dddd, and	_cccc_ssss_nnnn_mmmm strings are used with a single argument, _N, a
     number from 0 to 63 that identifies the character set.  The _ssss_cccc_ssss_dddd string
     is	also used with the argument _N and another, _M, that gives the number of
     characters	in the set.  The _dddd_eeee_ffff_cccc string is	used with three	arguments:  _A
     gives the ASCII code representation for the character, _B gives the	width
     of	the character in dots, and _D is	zero or	one depending on whether the
     character is a ``descender'' or not.  The _dddd_eeee_ffff_cccc string is also followed by
     a string of ``image-data''	bytes that describe how	the character looks
     (see below).

     Character set 0 is	the default character set present after	the printer
     has been initialized.  Not	every printer has 64 character sets, of
     course; using _ssss_cccc_ssss with an argument	that doesn't select an available
     character set should cause	a null result from _tttt_pppp_aaaa_rrrr_mmmm.

     If	a character set	has to be defined before it can	be used, the _ssss_cccc_ssss_dddd
     control sequence is to be used before defining the	character set, and the
     _rrrr_cccc_ssss_dddd is to	be used	after.	They should also cause a null result from
     _tttt_pppp_aaaa_rrrr_mmmm when	used with an argument _N	that doesn't apply.  If	a character


								       PPPPaaaaggggeeee 33339999






NNNN									     NNNN



     set still has to be selected after	being defined, the _ssss_cccc_ssss control
     sequence should follow the	_rrrr_cccc_ssss_dddd control sequence.	By examining the
     results of	using each of the _ssss_cccc_ssss, _ssss_cccc_ssss_dddd, and _rrrr_cccc_ssss_dddd strings with a character
     set number	in a call to _tttt_pppp_aaaa_rrrr_mmmm, a program can determine which of the three
     are needed.

     Between use of the	_ssss_cccc_ssss_dddd and _rrrr_cccc_ssss_dddd strings, the _dddd_eeee_ffff_cccc	string should be used
     to	define each character.	To print any character on printers covered by
     _tttt_eeee_rrrr_mmmm_iiii_nnnn_ffff_oooo, the ASCII code is sent to the printer.  This is true for
     characters	in an alternate	set as well as ``normal'' characters.  Thus
     the definition of a character includes the	ASCII code that	represents it.
     In	addition, the width of the character in	dots is	given, along with an
     indication	of whether the character should	descend	below the print	line
     (such as the lower	case letter ``g'' in most character sets).  The	width
     of	the character in dots also indicates the number	of image-data bytes
     that will follow the _dddd_eeee_ffff_cccc string.	These image-data bytes indicate	where
     in	a dot-matrix pattern ink should	be applied to ``draw'' the character;
     the number	of these bytes and their form are defined below	under ``Dot-
     Mapped Graphics.''

     It's easiest for the creator of _tttt_eeee_rrrr_mmmm_iiii_nnnn_ffff_oooo entries to refer to each
     character set by number; however, these numbers will be meaningless to
     the application developer.	 The _cccc_ssss_nnnn_mmmm string alleviates this problem by
     providing names for each number.

     When used with a character	set number in a	call to	_tttt_pppp_aaaa_rrrr_mmmm, the _cccc_ssss_nnnn_mmmm	string
     will produce the equivalent name.	These names should be used as a
     reference only.  No naming	convention is implied, although	anyone who
     creates a _tttt_eeee_rrrr_mmmm_iiii_nnnn_ffff_oooo	entry for a printer should use names consistent	with
     the names found in	user documents for the printer.	 Application
     developers	should allow a user to specify a character set by number
     (leaving it up to the user	to examine the _cccc_ssss_nnnn_mmmm string to determine	the
     correct number), or by name, where	the application	examines the _cccc_ssss_nnnn_mmmm
     string to determine the corresponding character set number.

     These capabilities	are likely to be used only with	dot-matrix printers.
     If	they are not available,	the strings should not be defined.  For
     printers that have	manually changed print-wheels or font cartridges, the
     boolean _dddd_aaaa_iiii_ssss_yyyy is set.

   SSSSeeeeccccttttiiiioooonnnn 2222----6666::::	DDDDooootttt----MMMMaaaattttrrrriiiixxxx GGGGrrrraaaapppphhhhiiiiccccssss
     Dot-matrix	printers typically have	the capability of reproducing
     ``raster-graphics'' images.  Three	new numeric capabilities and three new
     string capabilities can
     help a program draw raster-graphics images	independent of the type	of
     dot-matrix	printer	or the number of pins or dots the printer can handle
     at	one time.
				Dot-Matrix Graphics
	      _______________________________________________________
	      _nnnn_pppp_iiii_nnnn_ssss    Number of pins, _N, in print-head





								       PPPPaaaaggggeeee 44440000






NNNN									     NNNN



	      _ssss_pppp_iiii_nnnn_vvvv    Spacing of pins vertically in pins per inch
	      _ssss_pppp_iiii_nnnn_hhhh    Spacing of dots horizontally in dots per	inch
	      _pppp_oooo_rrrr_dddd_eeee_rrrr   Matches software	bits to	print-head pins
	      _ssss_bbbb_iiii_mmmm     Start printing bit image	graphics, _B bits wide
	      _rrrr_bbbb_iiii_mmmm     End printing bit	image graphics

     The _ssss_bbbb_iiii_mmmm sring is used with a single argument, _B, the width of the	image
     in	dots.

     The model of dot-matrix or	raster-graphics	that _tttt_eeee_rrrr_mmmm_iiii_nnnn_ffff_oooo presents is
     similar to	the technique used for most dot-matrix printers:  each pass of
     the printer's print-head is assumed to produce a dot-matrix that is _N
     dots high and _B dots wide.	 This is typically a wide, squat, rectangle of
     dots.  The	height of this rectangle in dots will vary from	one printer to
     the next; this is given in	the _nnnn_pppp_iiii_nnnn_ssss numeric capability.  The size	of the
     rectangle in fractions of an inch will also vary; it can be deduced from
     the _ssss_pppp_iiii_nnnn_vvvv and _ssss_pppp_iiii_nnnn_hhhh numeric capabilities.	With these three values	an
     application can divide a complete raster-graphics image into several
     horizontal	strips,	perhaps	interpolating to account for different dot
     spacing vertically	and horizontally.

     The _ssss_bbbb_iiii_mmmm and _rrrr_bbbb_iiii_mmmm strings are used	to start and end a dot-matrix image,
     respectively.  The	_ssss_bbbb_iiii_mmmm string is used with a single argument that	gives
     the width of the dot-matrix in dots.  A sequence of ``image-data bytes''
     are sent to the printer after the _ssss_bbbb_iiii_mmmm string and before the _rrrr_bbbb_iiii_mmmm string.
     The number	of bytes is a integral multiple	of the width of	the dot-
     matrix; the multiple and the form of each byte is determined by the
     _pppp_oooo_rrrr_dddd_eeee_rrrr string as described	below.

     The _pppp_oooo_rrrr_dddd_eeee_rrrr	string is a comma separated list of pin	numbers	optionally
     followed by an numerical offset.  The offset, if given, is	separated from
     the list with a semicolon.	 The position of each pin number in the	list
     corresponds to a bit in an	8-bit data byte.  The pins are numbered
     consecutively from	1 to _nnnn_pppp_iiii_nnnn_ssss, with 1 being the top pin.  Note that the
     term ``pin'' is used loosely here;	``ink-jet'' dot-matrix printers	don't
     have pins,	but can	be considered to have an equivalent method of applying
     a single dot of ink to paper.  The	bit positions in _pppp_oooo_rrrr_dddd_eeee_rrrr	are in groups
     of	8, with	the first position in each group the most significant bit and
     the last position the least significant bit.  An application produces 8-
     bit bytes in the order of the groups in _pppp_oooo_rrrr_dddd_eeee_rrrr.

     An	application computes the ``image-data bytes'' from the internal	image,
     mapping vertical dot positions in each print-head pass into 8-bit bytes,
     using a 1 bit where ink should be applied and 0 where no ink should be
     applied.  This can	be reversed (0 bit for ink, 1 bit for no ink) by
     giving a negative pin number.  If a position is skipped in	_pppp_oooo_rrrr_dddd_eeee_rrrr,	a 0
     bit is used.  If a	position has a lower case `x' instead of a pin number,
     a 1 bit is	used in	the skipped position.  For consistency,	a lower	case
     `o' can be	used to	represent a 0 filled, skipped bit.  There must be a
     multiple of 8 bit positions used or skipped in _pppp_oooo_rrrr_dddd_eeee_rrrr; if not, 0 bits are
     used to fill the last byte	in the least significant bits.	The offset, if
     given, is added to	each data byte;	the offset can be negative.



								       PPPPaaaaggggeeee 44441111






NNNN									     NNNN



     Some examples may help clarify the	use of the _pppp_oooo_rrrr_dddd_eeee_rrrr string.  The AT&T
     470, AT&T 475 and C.Itoh 8510 printers provide eight pins for graphics.
     The pins are identified top to bottom by the 8 bits in a byte, from least
     significant to most.  The _pppp_oooo_rrrr_dddd_eeee_rrrr strings for these	printers would be
     _8888_,,,,_7777_,,,,_6666_,,,,_5555_,,,,_4444_,,,,_3333_,,,,_2222_,,,,_1111.  The AT&T	478 and	AT&T 479 printers also provide eight
     pins for graphics.	 However, the pins are identified in the reverse
     order.  The _pppp_oooo_rrrr_dddd_eeee_rrrr	strings	for these printers would be _1111_,,,,_2222_,,,,_3333_,,,,_4444_,,,,_5555_,,,,_6666_,,,,_7777_,,,,_8888.
     The AT&T 5310, AT&T 5320, DEC LA100, and DEC LN03 printers	provide	six
     pins for graphics.	 The pins are identified top to	bottom by the decimal
     values 1, 2, 4, 8,	16 and 32.  These correspond to	the low	six bits in an
     8-bit byte, although the decimal values are further offset	by the value
     63.  The _pppp_oooo_rrrr_dddd_eeee_rrrr string for	these printers would be	_,,,,_,,,,_6666_,,,,_5555_,,,,_4444_,,,,_3333_,,,,_2222_,,,,_1111_;;;;_6666_3333, or
     alternately _oooo_,,,,_oooo_,,,,_6666_,,,,_5555_,,,,_4444_,,,,_3333_,,,,_2222_,,,,_1111_;;;;_6666_3333.

   SSSSeeeeccccttttiiiioooonnnn 2222----7777::::	EEEEffffffffeeeecccctttt ooooffff CCCChhhhaaaannnnggggiiiinnnngggg PPPPrrrriiiinnnnttttiiiinnnngggg RRRReeeessssoooolllluuuuttttiiiioooonnnn
     If	the control sequences to change	the character pitch or the line	pitch
     are used, the pin or dot spacing may change:
			       Dot-Matrix Graphics
		       Changing	the Character/Line Pitches
		      ______________________________________
		      _cccc_pppp_iiii	Change character pitch
		      _cccc_pppp_iiii_xxxx	If set,	_cccc_pppp_iiii changes _ssss_pppp_iiii_nnnn_hhhh

		      _llll_pppp_iiii	Change line pitch
		      _llll_pppp_iiii_xxxx	If set,	_llll_pppp_iiii changes _ssss_pppp_iiii_nnnn_vvvv

     Programs that use _cccc_pppp_iiii or _llll_pppp_iiii should recalculate the dot spacing:
				Dot-Matrix Graphics
		  Effects of Changing the Character/Line Pitches
		 _________________________________________________
			   Before		      _A_f_t_e_r
		 _________________________________________________























								       PPPPaaaaggggeeee 44442222










     Using _cccc_pppp_iiii with _cccc_pppp_iiii_xxxx clear:

     spinh'			    spinh
     Using _cccc_pppp_iiii with _cccc_pppp_iiii_xxxx set:
						._o_r_h_i_
     spinh'			    spinh=spinh' orhi'
     Using _llll_pppp_iiii with _llll_pppp_iiii_xxxx clear:

     spinv'			    spinv
     Using _llll_pppp_iiii with _llll_pppp_iiii_xxxx set:
						._o_r_h_i_
     spinv'			    spinv=spinv' orhi'
     Using _cccc_hhhh_rrrr_::::

     spinh'			    spinh
     Using _cccc_vvvv_rrrr_::::

     spinv'			    spinv

     oooorrrrhhhhiiii'''' and oooorrrrhhhhiiii are	the values of the horizontal resolution	in steps per
     inch, before using	_cccc_pppp_iiii and	after using _cccc_pppp_iiii, respectively.	Likewise,
     oooorrrrvvvviiii'''' and oooorrrrvvvviiii are	the values of the vertical resolution in steps per
     inch, before using	_llll_pppp_iiii and	after using _llll_pppp_iiii, respectively.	Thus, the
     changes in	the dots per inch for dot-matrix graphics follow the changes
     in	steps per inch for printer resolution.

   SSSSeeeeccccttttiiiioooonnnn 2222----8888::::	PPPPrrrriiiinnnntttt QQQQuuuuaaaalllliiiittttyyyy
     Many dot-matrix printers can alter	the dot	spacing	of printed text	to
     produce near ``letter quality'' printing or ``draft quality'' printing.
     Usually it	is important to	be able	to choose one or the other because the
     rate of printing generally	falls off as the quality improves.  There are
     three new strings used to describe	these capabilities.

				   Print Quality
		       _____________________________________
		       _ssss_nnnn_llll_qqqq    Set near-letter quality print
		       _ssss_nnnn_rrrr_mmmm_qqqq   Set normal quality print
		       _ssss_dddd_rrrr_ffff_qqqq   Set draft quality print

     The capabilities are listed in decreasing levels of quality.  If a
     printer doesn't have all three levels, one	or two of the strings should
     be	left blank as appropriate.

   SSSSeeeeccccttttiiiioooonnnn 2222----9999::::	PPPPrrrriiiinnnnttttiiiinnnngggg RRRRaaaatttteeee aaaannnndddd BBBBuuuuffffffffeeeerrrr SSSSiiiizzzzeeee
     Because there is no standard protocol that	can be used to keep a program
     synchronized with a printer, and because modern printers can buffer data
     before printing it, a program generally cannot determine at any time what
     has been printed.	Two new	numeric	capabilities can help a	program
     estimate what has been printed.






								       PPPPaaaaggggeeee 44443333










			      Print Rate/Buffer	Size
		___________________________________________________
		_cccc_pppp_ssss	Nominal	print rate in characters per second
		_bbbb_uuuu_ffff_ssss_zzzz	Buffer capacity	in characters

     _cccc_pppp_ssss is the	nominal	or average rate	at which the printer prints
     characters; if this value is not given, the rate should be	estimated at
     one-tenth the prevailing baud rate.  _bbbb_uuuu_ffff_ssss_zzzz	is the maximum number of
     subsequent	characters buffered before the guaranteed printing of an
     earlier character,	assuming proper	flow control has been used.  If	this
     value is not given	it is assumed that the printer does not	buffer
     characters, but prints them as they are received.

     As	an example, if a printer has a 1000-character buffer, then sending the
     letter ``a'' followed by 1000 additional characters is guaranteed to
     cause the letter ``a'' to print.  If the same printer prints at the rate
     of	100 characters per second, then	it should take 10 seconds to print all
     the characters in the buffer, less	if the buffer is not full.  By keeping
     track of the characters sent to a printer,	and knowing the	print rate and
     buffer size, a program can	synchronize itself with	the printer.

     Note that most printer manufacturers advertise the	maximum	print rate,
     not the nominal print rate.  A good way to	get a value to put in for _cccc_pppp_ssss
     is	to generate a few pages	of text, count the number of printable
     characters, and then see how long it takes	to print the text.

     Applications that use these values	should recognize the variability in
     the print rate.  Straight text, in	short lines, with no embedded control
     sequences will probably print at close to the advertised print rate and
     probably faster than the rate in _cccc_pppp_ssss.  Graphics data with a lot of
     control sequences,	or very	long lines of text, will print at well below
     the advertised rate and below the rate in _cccc_pppp_ssss.  If	the application	is
     using _cccc_pppp_ssss to decide how long it should take a printer to print a block of
     text, the application should pad the estimate.  If	the application	is
     using _cccc_pppp_ssss to decide how much text has already been	printed, it should
     shrink the	estimate.  The application will	thus err in favor of the user,
     who wants,	above all, to see all the output in its	correct	place.

FFFFIIIILLLLEEEESSSS
     _////_uuuu_ssss_rrrr_////_ssss_hhhh_aaaa_rrrr_eeee_////_llll_iiii_bbbb_////_tttt_eeee_rrrr_mmmm_iiii_nnnn_ffff_oooo_////_????_////_****
			  compiled terminal description	database

     _////_uuuu_ssss_rrrr_////_ssss_hhhh_aaaa_rrrr_eeee_////_llll_iiii_bbbb_////_...._CCCC_OOOO_RRRR_EEEE_tttt_eeee_rrrr_mmmm_////_????_////_****
			  subset of compiled terminal description database

     _////_uuuu_ssss_rrrr_////_ssss_hhhh_aaaa_rrrr_eeee_////_llll_iiii_bbbb_////_tttt_aaaa_bbbb_ssss_eeee_tttt_////_****
			  tab settings for some	terminals, in a	format
			  appropriate to be output to the terminal (escape
			  sequences that set margins and tabs)






								       PPPPaaaaggggeeee 44444444










SSSSEEEEEEEE AAAALLLLSSSSOOOO
     _cccc_uuuu_rrrr_ssss_eeee_ssss(3X), _llll_ssss(1),	_pppp_gggg(1), _pppp_rrrr_iiii_nnnn_tttt_ffff(3S), _ssss_tttt_tttt_yyyy(1), _tttt_iiii_cccc(1M), _tttt_pppp_uuuu_tttt(1), _tttt_tttt_yyyy(1),
     _vvvv_iiii(1)

NNNNOOOOTTTTEEEESSSS
     The most effective	way to prepare a terminal description is by imitating
     the description of	a similar terminal in _tttt_eeee_rrrr_mmmm_iiii_nnnn_ffff_oooo and to build up a
     description gradually, using partial descriptions with a screen oriented
     editor, such as _vvvv_iiii, to check that they are	correct.  To easily test a new
     terminal description the environment variable _TTTT_EEEE_RRRR_MMMM_IIII_NNNN_FFFF_OOOO can	be set to the
     pathname of a directory containing	the compiled description, and programs
     will look there rather than in _////_uuuu_ssss_rrrr_////_ssss_hhhh_aaaa_rrrr_eeee_////_llll_iiii_bbbb_////_tttt_eeee_rrrr_mmmm_iiii_nnnn_ffff_oooo.











































								       PPPPaaaaggggeeee 44445555



