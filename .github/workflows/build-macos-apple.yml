name: Build macos apple 64 (macos-latest)

on:
  workflow_dispatch:
    inputs:
      refToBuild:
        description: 'Branch, tag or commit SHA1 to build'
        default: ''
        required: false
        type: string

      refToHelpAsset:
        description: 'Run-ID of build with help-ehf asset (not used)'
        default: ''
        required: false
        type: string

jobs:
  build:
    runs-on: macos-latest
    name: Build on ${{ matrix.distro }} ${{ matrix.arch }}

    steps:
      - name: Install dependencies
        run: |
           echo INFO: uname -a
           uname -a
           echo INFO: sw_vers
           sw_vers
           echo INFO: OpenSSL 1
           ls /opt/homebrew/opt/openssl@3/
           echo INFO: OpenSSL 2
           ls /opt/homebrew/opt/openssl@3/lib
           brew install xquartz
        
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.refToBuild }}

      - name: Compile macos-apple mec
        run: |
          mkdir downloads
          mkdir packages
          cd ./microemacs/src
          ./build.sh -t c -a apple

      - name: Compile macos-apple mew
        run: |
          cd ./microemacs/src
          ./build.sh -t w -a apple

      - name: Create macos-apple binaries download
        run: |
          cd ./microemacs/bin
          mv macos14-apple64-* macos14-apple64
          rm ./.gitignore
          cd ..
          mv release_readme.txt readme.txt
          export MEVER=`./bin/macos14-apple64/mec -p @contribs/ver.emf`
          zip -r ../downloads/Jasspa_MicroEmacs_${MEVER}_bin_macos_apple_binaries bin LICENSE readme.txt

      - name: Create macos-apple mesc
        run: |
          export MEVER=`./microemacs/bin/macos14-apple64/mec -p @microemacs/contribs/ver.emf`
          cd ./microemacs/mesingle
          rm -rf bin
          mkdir -p bin/macos14-apple64
          ../bin/macos14-apple64/mec -p "@./mesgen" -f -p ../bin/macos14-apple64/mec -t ../bin/macos14-apple64/tfs -o bin/macos14-apple64/mesc
          cp ../LICENSE ./
          cp ../readme.txt ./
          zip -r ../../downloads/Jasspa_MicroEmacs_${MEVER}_abin_macos_apple_mesc bin LICENSE readme.txt

      - name: Create macos-apple mesw
        run: |
          export MEVER=`./microemacs/bin/macos14-apple64/mec -p @microemacs/contribs/ver.emf`
          cd ./microemacs/mesingle
          rm -rf bin
          mkdir -p bin/macos14-apple64
          ../bin/macos14-apple64/mec -p "@./mesgen" -f -p ../bin/macos14-apple64/mew -t ../bin/macos14-apple64/tfs -o bin/macos14-apple64/mesw
          zip -r ../../downloads/Jasspa_MicroEmacs_${MEVER}_abin_macos_apple_mesw bin LICENSE readme.txt

      - name: Create macos-apple OpenSSL download
        run: |
          cd ./microemacs/
          export MEVER=`./bin/macos14-apple64/mec -p @contribs/ver.emf`
          rm -rf tfs
          mkdir -p tfs/bin/macos14-apple64
          cd tfs/bin/macos14-apple64
          cp /opt/homebrew/opt/openssl@3/lib/libcrypto.3.dylib .
          cp /opt/homebrew/opt/openssl@3/lib/libssl.3.dylib .
          cp /opt/homebrew/opt/openssl@3/LICENSE.txt .
          cp /opt/homebrew/opt/openssl@3/README.md .
          CRYPT_PATH=`otool -L libssl.3.dylib | grep libcrypt | cut -f 1 -d ' '`
          install_name_tool -id @loader_path/libcrypto.3.dylib libcrypto.3.dylib
          install_name_tool -id @loader_path/libssl.3.dylib libssl.3.dylib
          install_name_tool -change $CRYPT_PATH @loader_path/libcrypto.3.dylib libssl.3.dylib
          codesign --force --deep --sign - libcrypto.3.dylib
          codesign --force --deep --sign - libssl.3.dylib
          echo OTOOL crypto
          otool -L libcrypto.3.dylib
          echo OTOOL ssl
          otool -L libssl.3.dylib
          cd ../..
          zip -r ../../downloads/Jasspa_MicroEmacs_${MEVER}_bin_macos_apple_openssl bin
          cd ..
          ./bin/macos14-apple64/tfs ../packages/Jasspa_MicroEmacs_${MEVER}_openssl_macos14_apple64.tfs tfs

      - name: Create macos iconset package
        run: |
          cd ./microemacs/
          export MEVER=`./bin/macos14-apple64/mec -p @contribs/ver.emf`
          cd icons/logo/
          mkdir MicroEmacs.iconset
          cp me_logo_512_32.png MicroEmacs.iconset/icon_512.png
          cp me_logo_256_32.png MicroEmacs.iconset/icon_256.png
          cp me_logo_128_32.png MicroEmacs.iconset/icon_128.png
          cp me_logo_64.png MicroEmacs.iconset/icon_64.png
          cp me_logo_32.png MicroEmacs.iconset/icon_32.png
          cp me_logo_16.png MicroEmacs.iconset/icon_16.png
          iconutil -c icns -o MicroEmacs.icns MicroEmacs.iconset
          mkdir tfs
          mv MicroEmacs.icns tfs/
          ../../bin/macos14-apple64/tfs ../../../packages/Jasspa_MicroEmacs_macos_icons.tfs tfs

      - name: Upload macos-apple downloads
        uses: actions/upload-artifact@v4
        with: 
          name: macos-apple-downloads
          path: downloads
          
      - name: Upload macos-apple packages
        uses: actions/upload-artifact@v4
        with: 
          name: macos-apple-packages
          path: packages
