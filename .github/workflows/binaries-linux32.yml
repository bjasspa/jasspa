name: Binaries Linux32 (Ubuntu)

on:
  workflow_dispatch:
    branches: [ master ]

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-20.04
    name: Build on ${{ matrix.distro }} ${{ matrix.arch }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
     
    - name: Compile nroff tools
      run: |
        make
      working-directory: ./nroff

    - name: Compile mec
      run: |
        ./build.sh -t c
      working-directory: ./microemacs/src

    - name: Compile mew
      run: |
        ./build.sh -t w
      working-directory: ./microemacs/src

    - name: Generate docs
      run: |
        export PATH=`pwd`/microemacs/bin/linux5-intel64-gcc9:`pwd`/nroff/bin/linux:$PATH
        export MEPATH=`pwd`/microemacs/macros
        cd ./microemacs/doc
        make me.ehf

    - name: Create packages
      run: |
        mkdir binaries-linux32
        cd ./microemacs/src
        cp ./.linux32gcc-release-mec/mec ../../binaries-linux32/
        cp ./.linux32gcc-release-mew/mew ../../binaries-linux32/
        cd ../../binaries-linux32/
        zip linux32-bin mec mew
        rm mec mew
        cd ../microemacs/doc
        cp me.ehf ../../binaries-linux32/
        
    - name: Create mesc
      run: |
        ../src/.linux32gcc-release-mec/mec -p "@mesgen" -f -p ../src/.linux32gcc-release-mec/mec -t ../3rdparty/tfs/.linux32gcc-release/tfs -o ../../binaries-linux32/mesc-linux32
      working-directory: ./microemacs/mesingle

    - name: Create mesw
      run: |
        ../src/.linux32gcc-release-mec/mec -p "@mesgen" -f -p ../src/.linux32gcc-release-mew/mew -t ../3rdparty/tfs/.linux32gcc-release/tfs -o ../../binaries-linux32/mesw-linux32
      working-directory: ./microemacs/mesingle

    - name: Upload Artifact GitHub Action Linux64
      uses: actions/upload-artifact@v3
      with: 
        name: binaries-linux32
        path: binaries-linux32
    
