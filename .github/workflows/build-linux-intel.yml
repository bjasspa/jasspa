name: Build linux intel 64 (ubuntu-22)

on:
  workflow_dispatch:
    inputs:
      refToBuild:
        description: 'Branch, tag or commit SHA1 to build'
        default: ''
        required: false
        type: string

      refToHelpAsset:
        description: 'Run-ID of build with help-ehf asset (not used)'
        default: ''
        required: false
        type: string

jobs:
  build:
    runs-on: ubuntu-22.04
    name: Build on ${{ matrix.distro }} ${{ matrix.arch }}

    steps:
      - name: Install dependencies
        run: |
           echo INFO: uname -a
           uname -a
           echo INSTALL: OpenSSL@3.0
           /home/linuxbrew/.linuxbrew/bin/brew install openssl@3.0
           echo INFO: OpenSSL 1
           ls /home/linuxbrew/.linuxbrew/opt/openssl@3.0/
           echo INFO: OpenSSL 2
           ls /home/linuxbrew/.linuxbrew/opt/openssl@3.0/lib
           sudo apt install libxft-dev
           pkg-config --cflags xft
           
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.refToBuild }}
       
      - name: Compile nroff tools
        run: |
          mkdir downloads
          mkdir packages
          cd ./nroff
          make

      - name: Compile linux-intel mec
        run: |
          cd ./microemacs/src
          ./build.sh -t c -v OPENSSLPATH=/home/linuxbrew/.linuxbrew/opt/openssl@3.0/include

      - name: Compile linux-intel mew
        run: |
          cd ./microemacs/src
          ./build.sh -t w -v OPENSSLPATH=/home/linuxbrew/.linuxbrew/opt/openssl@3.0/include

      - name: Create linux-intel binaries download
        run: |
          cd ./microemacs/bin
          mv linux6-intel64-gcc11 linux6-intel64
          rm ./.gitignore
          cd ..
          mv release_readme.txt readme.txt
          export MEVER=`./bin/linux6-intel64/mec -p @contribs/ver.emf`
          zip -r ../downloads/Jasspa_MicroEmacs_${MEVER}_bin_linux_intel_binaries bin LICENSE readme.txt

      - name: Create linux-intel mesc
        run: |
          export MEVER=`./microemacs/bin/linux6-intel64/mec -p @microemacs/contribs/ver.emf`
          cd ./microemacs/mesingle
          rm -rf bin/linux6-intel64
          mkdir -p bin/linux6-intel64
          ../bin/linux6-intel64/mec -p "@./mesgen" -f -p ../bin/linux6-intel64/mec -t ../bin/linux6-intel64/tfs -o bin/linux6-intel64/mesc
          cp ../LICENSE ./
          cp ../readme.txt ./
          zip -r ../../downloads/Jasspa_MicroEmacs_${MEVER}_abin_linux_intel_mesc bin LICENSE readme.txt
          
      - name: Create linux-intel mesw
        run: |
          export MEVER=`./microemacs/bin/linux6-intel64/mec -p @microemacs/contribs/ver.emf`
          cd ./microemacs/mesingle
          rm -rf bin/linux6-intel64
          mkdir -p bin/linux6-intel64
          ../bin/linux6-intel64/mec -p "@./mesgen" -f -p ../bin/linux6-intel64/mew -t ../bin/linux6-intel64/tfs -o bin/linux6-intel64/mesw
          zip -r ../../downloads/Jasspa_MicroEmacs_${MEVER}_abin_linux_intel_mesw bin LICENSE readme.txt

      - name: Create linux-intel OpenSSL download
        run: |
          cd ./microemacs/
          export MEVER=`./bin/linux6-intel64/mec -p @contribs/ver.emf`
          rm -rf tfs
          mkdir -p tfs/bin/linux6-intel64
          cd tfs/bin/linux6-intel64
          cp /home/linuxbrew/.linuxbrew/opt/openssl@3.0/lib/libcrypto.so .
          cp /home/linuxbrew/.linuxbrew/opt/openssl@3.0/lib/libssl.so .
          cp /home/linuxbrew/.linuxbrew/opt/openssl@3.0/LICENSE.txt .
          cp /home/linuxbrew/.linuxbrew/opt/openssl@3.0/README.md .
          cd ../..
          zip -r ../../downloads/Jasspa_MicroEmacs_${MEVER}_bin_linux_intel_openssl bin
          cd ..
          ./bin/linux6-intel64/tfs ../packages/Jasspa_MicroEmacs_${MEVER}_openssl_linux6_intel64.tfs tfs

      - name: Generate docs
        run: |
          export PATH=`pwd`/microemacs/bin/linux6-intel64:`pwd`/nroff/bin/linux:$PATH
          export MEPATH=`pwd`/microemacs/macros
          export MEVER=`mec -p @microemacs/contribs/ver.emf`
          cd ./microemacs/doc
          make me.ehf
          rm -rf tfs
          mkdir -p tfs/macros
          cp me.ehf tfs/macros
          cd tfs
          cp ../../LICENSE ./
          cp ../../readme.txt ./
          zip -r ../../../downloads/Jasspa_MicroEmacs_${MEVER}_help_ehf macros LICENSE readme.txt
          cd ..
          ../bin/linux6-intel64/tfs ../../packages/Jasspa_MicroEmacs_${MEVER}_hlpehf.tfs tfs

      - name: Generate macros
        run: |
          cd ./microemacs/
          export MEVER=`./bin/linux6-intel64/mec -p @contribs/ver.emf`
          cd macros
          make -f Makefile release
          cd ../release/jasspa/
          cp ../../LICENSE ./
          cp ../../readme.txt ./
          zip -r ../../../downloads/Jasspa_MicroEmacs_${MEVER}_macros macros LICENSE readme.txt
          cd ..
          ../bin/linux6-intel64/tfs ../../packages/Jasspa_MicroEmacs_${MEVER}_macros.tfs jasspa

      - name: Generate app icon package
        run: |
          cd ./microemacs/icons/logo
          mkdir -p jasspa/hicolor/16x16/apps
          cp me_logo_16.png jasspa/hicolor/16x16/apps/com.jasspa.MicroEmacs.png
          mkdir -p jasspa/hicolor/32x32/apps
          cp me_logo_32.png jasspa/hicolor/32x32/apps/com.jasspa.MicroEmacs.png
          mkdir -p jasspa/hicolor/48x48/apps
          cp me_logo_48.png jasspa/hicolor/48x48/apps/com.jasspa.MicroEmacs.png
          mkdir -p jasspa/hicolor/64x64/apps
          cp me_logo_64.png jasspa/hicolor/64x64/apps/com.jasspa.MicroEmacs.png
          mkdir -p jasspa/hicolor/128x128/apps
          cp me_logo_128_32.png jasspa/hicolor/128x128/apps/com.jasspa.MicroEmacs.png
          ../../bin/linux6-intel64/tfs ../../../packages/Jasspa_MicroEmacs_linux_icons.tfs jasspa

      - name: Upload linux-intel downloads
        uses: actions/upload-artifact@v4
        with: 
          name: linux-intel-downloads
          path: downloads
          
      - name: Upload linux-intel packages
        uses: actions/upload-artifact@v4
        with: 
          name: linux-intel-packages
          path: packages
      
      - name: Upload help ehf
        uses: actions/upload-artifact@v4
        with: 
          name: help-ehf
          path: microemacs/doc/me.ehf
      
