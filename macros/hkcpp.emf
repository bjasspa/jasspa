;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; C++ mode hook
;
; Notes:
;       There is a distinction between C++ and C because of problems with
;       hilighting. ".cpp", ".cc" and ".hpp" are assumed to be C++ files.
;       Also recognise magic-string for C++ as:- "-!- cmode; c++ -!-" in
;       the first line.
;
; Copyright (c) 1997-2001 JASSPA.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

define-macro fhook-cpp
    ; if arg is 0 this is a new file so add template 
    !if &not @#
        ; Is it an include h file or a c file?
        !if &seq &mid $buffer-bname &rsin "." $buffer-bname 1 "h"
            etfinsrt "hpp"
        !else
            etfinsrt "cpp"
        !endif
    !endif
    set-variable $buffer-mask "luh1"
    buffer-initialize
    buffer-initialize-hooks
!emacro

; buffer-initialize variables
set-variable .fhook-cpp.name "C++"
set-variable .fhook-cpp.setup &reg "/history" "fhook/cpp" "bdfghnopx"
set-variable .fhook-cpp.setup-mask "abdefghikmnoptux>"
set-variable .fhook-cpp.tags "ctags"
set-variable .fhook-cpp.comment "|//||/|// | //||"
set-variable .fhook-cpp.command-flag  "|th|th|t|t|t|t|t|t|bo|bo|"
set-variable .fhook-cpp.command-name  "|c-slashify|c-deslashify||c-hash-set-define|c-hash-unset-define|c-hash-eval|c-hash-eval|c-hash-del|comment-restyle|comment-restyle|"
set-variable .fhook-cpp.command-nbind "|||||||1||||"
set-variable .fhook-cpp.command-kbind "|||||||||esc q|esc o|"
set-variable .fhook-cpp.command-desc  "|Slashify region|Deslashify region||&Set #define|&Unset #define|Evaluate &#'s|Evaluate #'s use &Narrow|&Remove # evaluation|||"

; Set up the folds for C++
set-variable .fhook-cpp.fold-open  "^{"
set-variable .fhook-cpp.fold-close "^}"

!if &and &sin "h" .fhook-cpp.setup &band .hilight.flags 0x02 
    ; High-light C++ Mode
    !if &not &exist .hilight.cpp
        set-variable .hilight.cpp &pinc .hilight.next 1
    !endif
    0 hilight .hilight.cpp  2 50             $global-scheme
    hilight .hilight.cpp 0x3a "#" "\\"       .scheme.prepro
    hilight .hilight.cpp   18 "//"           .scheme.comment
    hilight .hilight.cpp   20 "/\\*" "*/" "" .scheme.comment
    hilight .hilight.cpp    4 "\"" "\"" "\\" .scheme.string
    hilight .hilight.cpp    0 "'.'"          .scheme.quote
    hilight .hilight.cpp    0 "'\\\\.'"      .scheme.quote
    hilight .hilight.cpp    0 "'\\\\'"       .scheme.error
    hilight .hilight.cpp    0 "'\\\\''"      .scheme.quote
    !if &band .hilight.flags 0x04
        hilight .hilight.cpp    0 "^[[:alpha:]][0-9a-zA-Z_:]*\\}\\s (" .scheme.function
        hilight .hilight.cpp    0 "^[[:alpha:]][0-9a-zA-Z_:]*\\}(" .scheme.function
    !endif
    hilight .hilight.cpp    0 "^\\w+\\}:"    .scheme.link
    ; keywords
    hilight .hilight.cpp    1 "asm"          .scheme.keyword
    hilight .hilight.cpp    1 "break"        .scheme.keyword
    hilight .hilight.cpp    1 "case"         .scheme.keyword
    hilight .hilight.cpp    1 "catch"        .scheme.keyword
    hilight .hilight.cpp    1 "continue"     .scheme.keyword
    hilight .hilight.cpp    1 "default"      .scheme.keyword
    hilight .hilight.cpp    1 "delete"       .scheme.keyword
    hilight .hilight.cpp    1 "do"           .scheme.keyword
    hilight .hilight.cpp    1 "else"         .scheme.keyword
    hilight .hilight.cpp    1 "for"          .scheme.keyword
    hilight .hilight.cpp    1 "goto"         .scheme.keyword
    hilight .hilight.cpp    1 "if"           .scheme.keyword
    hilight .hilight.cpp    1 "new"          .scheme.keyword
    hilight .hilight.cpp    1 "operator"     .scheme.keyword
    hilight .hilight.cpp    1 "private"      .scheme.keyword
    hilight .hilight.cpp    1 "protected"    .scheme.keyword
    hilight .hilight.cpp    1 "public"       .scheme.keyword
    hilight .hilight.cpp    1 "return"       .scheme.keyword
    hilight .hilight.cpp    1 "sizeof"       .scheme.keyword
    hilight .hilight.cpp    1 "switch"       .scheme.keyword
    hilight .hilight.cpp    1 "this"         .scheme.keyword
    hilight .hilight.cpp    1 "throw"        .scheme.keyword
    hilight .hilight.cpp    1 "try"          .scheme.keyword
    hilight .hilight.cpp    1 "while"        .scheme.keyword
    ; types
    hilight .hilight.cpp    1 "auto"         .scheme.type
    hilight .hilight.cpp    1 "bool"         .scheme.type
    hilight .hilight.cpp    1 "char"         .scheme.type
    hilight .hilight.cpp    1 "class"        .scheme.type
    hilight .hilight.cpp    1 "complex"      .scheme.type
    hilight .hilight.cpp    1 "const"        .scheme.type
    hilight .hilight.cpp    1 "double"       .scheme.type
    hilight .hilight.cpp    1 "enum"         .scheme.type
    hilight .hilight.cpp    1 "extern"       .scheme.type
    hilight .hilight.cpp    1 "float"        .scheme.type
    hilight .hilight.cpp    1 "friend"       .scheme.type
    hilight .hilight.cpp    1 "inline"       .scheme.type
    hilight .hilight.cpp    1 "int"          .scheme.type
    hilight .hilight.cpp    1 "long"         .scheme.type
    hilight .hilight.cpp    1 "namespace"    .scheme.type
    hilight .hilight.cpp    1 "register"     .scheme.type
    hilight .hilight.cpp    1 "short"        .scheme.type
    hilight .hilight.cpp    1 "signed"       .scheme.type
    hilight .hilight.cpp    1 "size_t"       .scheme.type
    hilight .hilight.cpp    1 "static"       .scheme.type
    hilight .hilight.cpp    1 "struct"       .scheme.type
    hilight .hilight.cpp    1 "template"     .scheme.type
    hilight .hilight.cpp    1 "typedef"      .scheme.type
    hilight .hilight.cpp    1 "union"        .scheme.type
    hilight .hilight.cpp    1 "unsigned"     .scheme.type
    hilight .hilight.cpp    1 "virtual"      .scheme.type
    hilight .hilight.cpp    1 "void"         .scheme.type
    hilight .hilight.cpp    1 "volatile"     .scheme.type
    ; Add some system types
    hilight .hilight.cpp    1 "FILE"         .scheme.type
    ; Pre-processor directives
    hilight .hilight.cpp    0 "__DATE__"     .scheme.prepro
    hilight .hilight.cpp    0 "__FILE__"     .scheme.prepro
    hilight .hilight.cpp    0 "__LINE__"     .scheme.prepro
    hilight .hilight.cpp    0 "__STDC__"     .scheme.prepro
    hilight .hilight.cpp    0 "__TIME__"     .scheme.prepro
    !if &band .hilight.flags 0x08
        ; hilight constants, e.g. numbers
        hilight .hilight.cpp 1 "[[:digit:]]+"       .scheme.constant
        hilight .hilight.cpp 1 "-[[:digit:]]+"      .scheme.constant
        hilight .hilight.cpp 1 "0[xX][[:xdigit:]]+" .scheme.constant
        hilight .hilight.cpp 1 "[[:digit:]]+\\.[[:digit:]]+"  .scheme.constant
        hilight .hilight.cpp 1 "-[[:digit:]]+\\.[[:digit:]]+" .scheme.constant
    !endif
!endif
;
; setup fuctions to auto-load from cmacros
define-macro-file cmacros c-slashify c-deslashify c-hash-eval c-hash-set-define c-hash-unset-define c-hash-del

ml-write "[C++ file hook loaded]"

; load in user extensions if found
!force execute-file "mycpp"

