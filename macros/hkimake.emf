;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;  Imakefile hook
;
;  Copyright (c) 1999-2001 JASSPA
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

define-macro fhook-imake
    ; if arg is 0 this is a new file so add template 
    !if &not @#
        etfinsrt "imake"
    !endif
    set-variable $buffer-mask "luh1"
    buffer-initialize
    ; execute user extensions if enabled
    !if &exist my-fhook-imake
        my-fhook-imake
    !endif
!emacro

; buffer-initialize variables
set-variable .fhook-imake.name "Imakefile"
set-variable .fhook-imake.setup &reg "/history" "fhook/imake" "hinopTx"
set-variable .fhook-imake.setup-mask "aehikmnoptux"
set-variable .fhook-imake.comment "|/*|*/|*| * |f|"

!if &and &sin "h" .fhook-imake.setup &band .hilight.flags 0x02 
    !if &not &exist .hilight.imake
        set-variable .hilight.imake &pinc .hilight.next 1
    !endif
    ; Imakefile file highlighting
    0 hilight  .hilight.imake 2  50             $global-scheme
    hilight .hilight.imake 0  ":"               .scheme.variable       
    hilight .hilight.imake 4  "\"" "\"" "\\"    .scheme.string
    hilight .hilight.imake 20 "/\\*" "*/" ""    .scheme.comment
    hilight .hilight.imake 0  "/\\*\\."         $global-scheme
    hilight .hilight.imake 18 "#"               .scheme.prepro
    hilight .hilight.imake 4  "\\$(" ")" ""     .scheme.variable    
    hilight .hilight.imake 1  "\\$O"            .scheme.variable    
    hilight .hilight.imake 1  "\\$T"            .scheme.variable    
    hilight .hilight.imake 0  "\\.SUFFIXES"     .scheme.keyword   
    hilight .hilight.imake 0  "\\.IGNORE"       .scheme.keyword   
    hilight .hilight.imake 0  "\\.DEFAULT"      .scheme.keyword   
    hilight .hilight.imake 0  "\\.PRECIOUS"     .scheme.keyword   
    hilight .hilight.imake 1  "\\$@"            .scheme.keyword   
    hilight .hilight.imake 1  "\\$\\$@"         .scheme.keyword   
    hilight .hilight.imake 1  "\\$\\*"          .scheme.keyword   
    hilight .hilight.imake 1  "\\$<"            .scheme.keyword   
!endif

ml-write "[Imakefile file hook loaded]"

; load in user extensions if found
!force execute-file "myimake"
