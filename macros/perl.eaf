 "" "\ecCControl Flow:\ecA <<<<FOLDER>"
if "if (\p) {\r\r}\P" "   if"
elsif "elsif (\p) {\r\r}\P" "   elsif"
ef "elsif (\p) {\r\r}\P"
else "else {\r\p\r}\P" "   else"
el "else {\r\p\r}\P"
while "while (\p) {\r\r}\P" "   while"
wh "while (\p) {\r\r}\P"
foreach "foreach (@\p) {\r\r}\P" "   foreach"
for "for (my $x = 0 ; $x < \p ; $x++) {\r\r}\P" "   for"
sub "sub \p{\r\r}\P" "   sub"
p "package \p;\r\P" "   package"
s "sub \p{\r\r}\P"
 "" "</FOLDER>"

 "" "\ecCFile Handling:\ecA <<<<FOLDER>"
open "open (\pFILE, \"FILE\") or die \"Could not open file at $!\" ;\r\rclose (FILE);\P" "   open file"
whilef "while (<FILE>) {\r next if /^\\n/ ;\r \p\r }\P" "   while file"
 "" "</FOLDER>"

 "" "\ecCTk Stuff:\ecA <<<<FOLDER>"
tk "use Tk ;\r\r our $mw ;\rsub gui_build {\r$mw = MainWindow->new;\r$mw->title(\"my title\");\r\r\p\rMainLoop;\r}\P" "   use Tk"
adj "my $adj = $mw->Adjuster(-side => 'left', => -widget => $txt)->pack(-side => 'left', -fill => 'y', -expand => 0);" "  Adjuster"
-o "-\p => '',\P" "    -option"
-c "-command => sub { \p ;} \P"   "   -command"
-f "-font => 'Helvetica 12 bold'" "   -font"
 "" "</FOLDER>"

 "" "\ecCTk Menues:\ecA <<<<FOLDER>"
com "\p$widget->command(-label => '', -underline => 0, -command => sub { ; } );\p"
menu "my $menu1 = $mw->Menubutton(-text => \"Menu1\",\r-underline => 0,\r-menuitems => [\r['command' => 'Command1',\r-command => \\&on_Command1\r],\r['command' => 'Command2',\r-command => \\&on_Command2\r],\r'-',\r['command' => 'Command3',\r-command => \\&on_Command3\r]\r] )->pack(-side => 'left');\r" "   Complete Menue"
mn "my $f_menu = $mw->Frame()->pack(-side => 'top', -expand => 1, -fill => 'x');\r" ;
mnfile "my $mn_file = $f_menu->Menubutton(-text => 'File', underline => 0)->pack(-side => 'left');\r" "   menu File"
mnedit "my $mn_edit = $f_menu->Menubutton(-text => 'Edit', underline => 0)->pack(-side => 'left');\r" "   menu File"
mnexit "my $mn_file_exit = $mn_file->command(-label => 'E~xit', -command => sub { exit(0); } ) ;\r" "   menu Exit"
mncom "my $mn_\p = $mn_->command(-label => '', -command => sub { } ) ;\P" "   Command"
mnsep "$mn_\p->separator();\P" "   Separator"
 "" "</FOLDER>"

 "" "\ecCPerl Builtins:\ecA <<<<FOLDER>"
split "split (/\\s+/, \p);\P" "   split"
grep  "grep(/\p/, @list)\P" "   grep"
 "" "</FOLDER>"

 "" "\ecCDate::Format:\ecA <<<<FOLDER>"
useDate "use Date::Format ;\r" "   use Date::Format" 
localtime "my ($sec, $min, $hour, $mday, $mon, $year, $wday, $yday)  = localtime ;\r $year += 1900 ; $mon++ ; $yday++ ;\r" "   localtime"
timepr "print STDERR \"\n\nStarting/Ending Programs\p at: \" . time2str(\"%Y-%m-%d %R\" , time) .\"\n\" x 2 ;\r\P" "   print time"
 "" "</FOLDER>"
