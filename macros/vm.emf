; -!- emf -!-
; This is part of the JASSPA MicroEmacs macro files
; Copyright (C) 1996-2009 JASSPA (www.jasspa.com)
; See the file me.emf for copying and conditions.
;
; Synopsis:    View Mail - Mail handling system
; Authors:     Steven Phillips
;
!if &seq .hilight.mail "ERROR"
    execute-file "mail"
!endif
!if &seq .hilight.vm "ERROR"
    set-variable .hilight.vm &pinc .hilight.next 1
    set-variable .hilight.vmhl &pinc .hilight.next 1
    set-variable .osd.vm-help &pinc .osd.next 1
    set-variable .osd.mails &pinc .osd.next 1
    set-variable .osd.mailf &pinc .osd.next 1
    set-variable .osd.mailff &pinc .osd.next 1
    set-variable .osd.mailfc &pinc .osd.next 1
!endif

0 hilight  .hilight.vm 0         .scheme.no1
hilight .hilight.vm 0x400  0 9   .scheme.no2
hilight .hilight.vm 0x400  9 31  $global-scheme
hilight .hilight.vm 0x400 31 41  .scheme.prepro

0 hilight  .hilight.vmh 2 100                     $global-scheme
hilight .hilight.vmh 0x44 "\ecA" "" "\\}\e" "" "" $global-scheme
hilight .hilight.vmh 0x44 "\ecB" "" "\\}\e" "" "" .scheme.under   ; underline
hilight .hilight.vmh 0x44 "\ecC" "" "\\}\e" "" "" .scheme.italic  ; italic
hilight .hilight.vmh 0x44 "\ecD" "" "\\}\e" "" "" .scheme.bold    ; bold
hilight .hilight.vmh 0x44 "\ecE" "" "\\}\e" "" "" .scheme.header  ; Header
hilight .hilight.vmh 0x44 "\ecF" "" "\\}\e" "" "" .scheme.comment ; image
hilight .hilight.vmh 0xc0 "\esA" "" .hilight.mail $global-scheme
hilight .hilight.vmh 0x40 "\esB" ""               $global-scheme
hilight .hilight.vmh 0xc0 "\els" "" .hilight.vmhl $global-scheme ; link start
hilight .hilight.vmh 0x44 "\elm" "" "\ele" "" ""  .scheme.link   ; link name
 
0 hilight .hilight.vmhl 0                         $global-scheme
hilight .hilight.vmhl 0x80 "\\}\elm" .hilight.vmh $global-scheme
hilight .hilight.vmhl 0x40 "." ""                 $global-scheme

0 define-macro vm-setup
    set-variable %vm-curbuf $buffer-bname
    set-variable %vm-curmtot &cat "%vmt" %vm-curbuf
    set-variable %vm-curmcur &cat "%vmc" %vm-curbuf
    set-variable %vm-curmpos &cat "%vmp" %vm-curbuf
    find-buffer &rig %vm-curbuf 1
    set-variable $window-line &ind %vm-curmpos
    popup-window &cat %vm-curbuf "-list"
    goto-line &ind %vm-curmcur
    popup-window %vm-curbuf
!emacro

0 define-macro vm-setup-list
    !if &not &seq "-list" &rig $buffer-bname &sub &len $buffer-bname 5
        ml-write "Buffer is not a mail-list"
        !abort
    !endif
    set-variable %vm-curbuf &lef $buffer-bname &sub &len $buffer-bname 5
    set-variable %vm-curmtot &cat "%vmt" %vm-curbuf
    set-variable %vm-curmcur &cat "%vmc" %vm-curbuf
    set-variable %vm-curmpos &cat "%vmp" %vm-curbuf
    !if &gre $window-line &ind %vm-curmtot
        set-variable $window-line &ind %vm-curmtot
    !endif
    !if &not &equ &ind %vm-curmcur $window-line
        set-variable #l0 $window-line
        set-variable &ind %vm-curmcur #l0
        popup-window %vm-curbuf
        find-buffer &rig %vm-curbuf 1
        beginning-of-buffer
        #l0 search-forward "^from [!-z]* +[MTWFS][ouehra][neduitn] [JFMAJSOND][aepuico][nbrynlgptvc] +[0-9]+ [0-2][0-9]:[0-5][0-9]:[0-5][0-9]"
        set-variable &ind %vm-curmpos $window-line
        vm-show-current
        popup-window %vm-curbuf
    !else
        popup-window %vm-curbuf
        find-buffer &rig %vm-curbuf 1
        set-variable $window-line &ind %vm-curmpos
        find-buffer %vm-curbuf
    !endif
!emacro


; converts =XX strings to a single char, numeric arg must be the
; end line number
0 define-macro vm-convert-quoted-printable-text
    !force &sub $window-line @# search-forward "="
    !while $status
        backward-delete-char
        !if &seq @wc "\n"
            ; an inserted line split, remove it
            forward-delete-char
            set-variable @# &sub @# 1
        !else
            set-variable #l7 &cat "0x" @wc
            forward-delete-char
            set-variable #l7 &cat #l7 @wc
            forward-delete-char
            insert-string &itoa #l7
            !if &seq &itoa #l7 "\n"
                set-variable @# &add @# 1
            !endif
        !endif
        !force &sub $window-line @# search-forward "="
    !done
    set-variable $window-line @#
!emacro

0 define-macro vm-init-mail-section
    ; work out the size of the header
    set-variable #l9 @1
    set-variable #l0 $window-line
    !force &sub #l0 @# search-forward "^$"
    set-variable #l1 &add $window-line 1
    ; Try and find the encoding method first
    set-variable $window-line #l0
    !force &sub #l0 #l1 search-forward "^Content-Transfer-Encoding:"
    !if $status
        set-variable #l8 &trl &rig @wl 26
    !else
        ; default is ordinary 7bit
        set-variable #l8 "7bit"
    !endif
    ; Try and find the content string
    set-variable $window-line #l0
    !force &sub #l0 #l1 search-forward "^Content-Type:"
    !if $status
        set-variable #l2 &trl &rig @wl 13
    !else
        set-variable #l2 "unknown"
    !endif
    !if &iseq &lef #l8 6 "base64"
        ; if its encoded there's nothing else we can do but display as a data Insert!
        set-variable $window-line #l0
        !force &sub #l0 #l1 search-forward "[^e]name="
        !if $status
            !if &seq @wc "\""
                set-variable #l3 &lget &rig @wl $window-col 1
            !else
                set-variable #l3 &rig @wl $window-col
            !endif
        !else
            !force &sub #l0 #l1 search-forward "^Content-Description:"
            !if $status
                set-variable #l3 &trb &rig @wl 20
            !else
                ; X-Content-Name: ?
                set-variable #l3 "unknown"
            !endif
            set-variable $window-line #l0
            end-of-line
            insert-string &spr " name=\"%s\"" #l3
        !endif
        set-variable $window-line #l0
        ; remove the file name just incase it confuses the extraction
        !force &sub #l0 #l1 search-forward "filename="
        !if $status
            set-variable $window-col &sub $window-col 9
            1 kill-line
            -1 yank
        !endif
        !if &sin "M" #l9
            set-variable #l2 &spr "Data Insert, base64, Name=\"%s\"" #l3
        !else
            ; not a sub section, must create boundary & insert type
            set-variable $window-line @#
            !if &seq @wc ""
                insert-string "--------------MicroEmacs-Boundary\nMicroEmacs-Info: text\n"
            !else
                insert-string "--------------MicroEmacs-Boundary\nMicroEmacs-Info: text\n\n"
            !endif
            set-variable $window-line #l1
            insert-string &spr "--------------MicroEmacs-Boundary\nMicroEmacs-Info: Data Insert, base64, Name=\"%s\"\n" #l3
            insert-string &spr "Content-Type:%s\n    name=\"%s\"\nContent-Transfer-Encoding: base64\n\n" #l2 #l3
            set-variable @# &add @# 9
        !endif
    !elif &iseq &lef #l2 9 "multipart"
        !force &sub #l0 #l1 search-forward "boundary="
        !if &not $status
            ml-write &spr "[Error with multipart on line %d]" $window-line
        !else
            !if &seq @wc "\""
                set-variable #l2 &lget &rig @wl $window-col 1
            !else
                set-variable #l2 &rig @wl $window-col
            !endif
            ; make the search string regex compliant
            str-to-regex #l2
            set-variable #l2 &cat "^--" #l2
            !force &sub $window-line @# search-forward #l2
            !if &not $status
                set-variable $window-line @#
            !endif
            !while &not &equ $window-line @#
                set-variable #l3 $window-line
                forward-char
                !force &sub #l3 @# search-forward #l2
                !if $status
                    set-variable #l4 $window-line
                !else
                    !if &equ &add #l3 1 @#
                        ; an empty next part insert a line
                        set-variable $window-line &pinc @# 1
                        insert-newline
                    !endif
                    set-variable #l4 @#
                !endif
                set-variable $window-line #l3
                forward-line
                !if &and &seq @wl "" &equ #l4 @#
                    !if &or &sin "M" #l9 &sin "I" #l9
                        insert-string "MicroEmacs-Info: del\n"
                    !else
                        insert-string "MicroEmacs-Info: end\n"
                    !endif
                    set-variable $window-line &add @# 1
                !else
                    #l4 vm-init-mail-section &cat #l9 "M"
                !endif
                ; line may have been inserted so adjust the end point
                set-variable @# &add @# &sub $window-line #l4
            !done
        !endif
        set-variable #l2 "del"
    !elif &iseq &lef #l2 9 "text/html"
        !if &not &sin "M" #l9
            set-variable #l9 &cat #l9 "B"
            set-variable $window-line @#
            !if &seq @wc ""
                insert-string "--------------MicroEmacs-Boundary\nMicroEmacs-Info: text\n"
            !else
                insert-string "--------------MicroEmacs-Boundary\nMicroEmacs-Info: text\n\n"
            !endif
            set-variable @# &add @# 3
        !endif
        ; See if we need to convert =XX to chars - must only do once
        ; so if this is a repair don't do it
        !if &not &sin "R" #l9
            !if &iseq &lef #l8 16 "quoted-printable"
                set-variable $window-line #l1
                @# vm-convert-quoted-printable-text
                set-variable @# $window-line
            !endif
        !endif
        set-variable #l2 "HTML Insert"
    !elif &iseq &lef #l2 7 "message"
        set-variable $window-line #l1
        forward-word
        beginning-of-line
        insert-string "--------------MicroEmacs-Boundary\n"
        set-variable @# &add @# 1
        @# vm-init-mail-section &cond &sin "R" #l9 "RM" "M"
        set-variable @# $window-line
        !if &not &sin "M" #l9
            set-variable #l9 &cat #l9 "B"
        !endif
        set-variable #l2 "Include Message"
    !else
        ; unknown or plain text section
        ; Plain text, see if we need to convert =XX to chars - must only do once
        ; so if this is a repair don't do it
        !if &not &sin "R" #l9
            !if &iseq &lef #l8 16 "quoted-printable"
                set-variable $window-line #l1
                @# vm-convert-quoted-printable-text
                set-variable @# $window-line
            !endif
        !endif
        ; check for uuencoded data inserts (begin - end)
        set-variable $window-line #l1
        !force &sub $window-line @# search-forward "^begin [0-7][0-7][0-7] "
        !while $status
            set-variable #l2 &trb &rig @wl $window-col
            set-variable #l3 $window-line
            !force &sub #l3 @# search-forward "^end"
            !if $status
                set-variable #l4 &add $window-line 4
                set-variable $window-line #l3
                insert-string &spr "--------------MicroEmacs-Boundary\nMicroEmacs-Info: Data Insert, uuencoded, Name=\"%s\"\n\n" #l2
                set-variable $window-line #l4
                insert-string "--------------MicroEmacs-Boundary\nMicroEmacs-Info: text\n\n"
                backward-line
                set-variable @# &add @# 6
                !if &not &sin "M" #l9
                    set-variable #l9 &cat #l9 "B"
                !endif
                !force &sub $window-line @# search-forward "^begin [0-7][0-7][0-7] "
            !endif
        !done
        set-variable #l2 "text"
    !endif
    !if &sin "B" #l9
        ; forced section, must create boundary & insert type
        set-variable $window-line #l1
        insert-string &spr "--------------MicroEmacs-Boundary\nMicroEmacs-Info: %s\n\n" #l2
        set-variable @# &add @# 3
    !elif &sin "M" #l9
        ; multipart section, must insert type
        set-variable $window-line #l0
        insert-string &spr "MicroEmacs-Info: %s\n" #l2
        set-variable @# &add @# 1
    !endif
    set-variable $window-line @#
!emacro

0 define-macro vm-ready-box
    set-variable %vm-curbuf  &cat "*" $buffer-bname
    set-variable %vm-curmtot &cat "%vmt" %vm-curbuf
    set-variable %vm-curmcur &cat "%vmc" %vm-curbuf
    set-variable %vm-curmpos &cat "%vmp" %vm-curbuf
    -1 find-buffer $buffer-bname
    delete-other-windows
    !force delete-buffer &cat %vm-curbuf "-list"
    find-buffer &cat %vm-curbuf "-list"
    -1 buffer-mode "undo"
    find-buffer &rig %vm-curbuf 1
     1 buffer-mode "magic"
     1 buffer-mode "hide"
    -1 buffer-mode "exact"
    -1 buffer-mode "undo"
    beginning-of-buffer
    set-variable &ind %vm-curmtot 0
    set-variable &ind %vm-curmcur -1
    !repeat
        set-variable &ind %vm-curmtot &add &ind %vm-curmtot 1
        set-variable #l3 $window-line
        ml-write &spr "Processing message %d on line %d" &ind %vm-curmtot #l3
        forward-line
        beginning-of-line
        !if &set #l2 &not &seq &lef @wl 11 "MicroEmacs:"
            !if &equ &ind %vm-curmcur -1
                set-variable &ind %vm-curmcur &ind %vm-curmtot
                set-variable &ind %vm-curmpos #l3
            !endif
            insert-string "MicroEmacs:N\n"
            backward-line
        !endif
        set-variable #l0 &trb &rig @wl 11
        vm-get-mail-info
        !if &seq %vm-from ""
            set-variable #l9 &rig %vm-to 3
            vm-get-who
            set-variable #l9 &cat "To: " #l9
        !else
            set-variable #l9 &rig %vm-from 5
            vm-get-who
        !endif
        find-buffer &cat %vm-curbuf "-list"
        insert-string &spr "%3d %s%n%s" &ind %vm-curmtot #l0 &sub 5 &len #l0 " " #l9
        !if &gre $window-col 30
            set-variable $window-col 30
            1 kill-line
            -1 yank
            2 insert-space
        !else
            &sub 32 $window-col insert-space
        !endif
        !if &not &seq &set #l4 %vm-subject ""
            set-variable #l4 &rep &rig #l4 9 "\n" ""
        !endif
        !if &seq &mid %vm-date 12 1 " "
            insert-string &spr "0%s %s %s\n" &mid %vm-date 11 5 &mid %vm-date 19 2 #l4
        !else
            insert-string &spr "%s %s %s\n" &mid %vm-date 11 6 &mid %vm-date 20 2 #l4
        !endif
        find-buffer &rig %vm-curbuf 1
        !force search-forward "^from [!-z]* +[MTWFS][ouehra][neduitn] [JFMAJSOND][aepuico][nbrynlgptvc] +[0-9]+ [0-2][0-9]:[0-5][0-9]:[0-5][0-9]"
        !if $status
            beginning-of-line
        !else
            end-of-buffer
        !endif
        !if #l2
            set-variable #l2 $window-line
            goto-line #l3
            #l2 vm-init-mail-section ""
        !endif
    !until &seq @wc ""
    !if &equ &ind %vm-curmcur -1
        set-variable &ind %vm-curmcur &ind %vm-curmtot
        set-variable &ind %vm-curmpos #l3
    !endif
    find-buffer &cat %vm-curbuf "-list"
    -1 buffer-mode "edit"
     1 buffer-mode "view"
    buffer-bind-create "bo" "esc h" .osd.vm-help osd
    set-variable $buffer-input vm-list-input
    set-variable $buffer-hilight .hilight.vm
    set-variable :mouse-word-select vm-list-mouse
    find-buffer &rig %vm-curbuf 1
    vm-show-current
!emacro


0 define-macro vm-moveto
    goto-line &ind %vm-curmpos
!emacro

0 define-macro vm-moveto-curend
    !if &equ &ind %vm-curmcur &ind %vm-curmtot
        end-of-buffer
    !else
        2 forward-line
        search-forward "^MicroEmacs:"
        beginning-of-line
        backward-line
    !endif
!emacro

0 define-macro vm-moveto-next
    !if &equ &ind %vm-curmcur &ind %vm-curmtot
        set-variable &ind %vm-curmcur 1
        set-variable &ind %vm-curmpos 1
        beginning-of-buffer
        !abort
    !endif
    2 forward-line
    search-forward "^MicroEmacs:"
    beginning-of-line
    backward-line
    set-variable &ind %vm-curmcur &add &ind %vm-curmcur 1
    set-variable &ind %vm-curmpos $window-line
!emacro

0 define-macro vm-moveto-prev
    !if &equ &ind %vm-curmcur 1
        set-variable &ind %vm-curmcur &ind %vm-curmtot
        end-of-buffer
        search-backward "^MicroEmacs:[ A-Z]*$"
        backward-line
        set-variable &ind %vm-curmpos $window-line
        !abort
    !endif
    search-backward "^MicroEmacs:[ A-Z]*$"
    backward-line
    set-variable &ind %vm-curmpos $window-line
    set-variable &ind %vm-curmcur &sub &ind %vm-curmcur 1
!emacro

; sets buffer variables for the mail info and move to the end of the info section
0 define-macro vm-get-mail-info
    set-variable #l0 $window-line
    !force search-forward "^$"
    set-variable #l1 &add $window-line 1
    set-variable #l2 0
    set-variable #l3 "|microemacs|subject|date|from|to|cc|"
    !repeat
        !if &seq &set #l4 &lget #l3 &inc #l2 1 ""
            !if &seq %vm-date ""
                set-variable $window-line &sub #l1 1
                !force -1 search-forward "^from [!-z]* +\\([MTWFS]..\\) \\([JFMAJSOND]..\\) +\\([0-9]+\\) \\([0-2][0-9]:[0-5][0-9]:[0-5][0-9]\\) \\([0-9]+\\)"
                !if $status
                    set-variable %vm-date &spr "Date: %s, %2d %s %4d %s +0000" @s1 @s3 @s2 @s5 @s4
                !else
                    set-variable %vm-date &spr "Date: Mon,  1 Jan 2000 00:00:00 +0000"
                !endif
            !endif
            set-variable $window-line &sub #l1 1
            !return
        !endif
        set-variable $window-line #l0
        set-variable #l5 &cat "%vm-" #l4
        set-variable &ind #l5 ""
        !force &sub $window-line #l1 search-forward &spr "^%s:" #l4
        !while $status
            beginning-of-line
            set-mark
            forward-line
            !if &sin @wc " \t"
                !jump -2
            !endif
            copy-region
            set-variable &ind #l5 &cat &ind #l5 @y
            -1 yank
            !force &sub $window-line #l1 search-forward &spr "^%s:" #l4
        !done
    !until 0
!emacro

0 define-macro vm-show-current
    vm-moveto
    delete-other-windows
    2 split-window-vertically
    change-window-depth 15
    find-buffer &cat %vm-curbuf "-list"
    goto-line &ind %vm-curmcur
    next-window
    !force 0 delete-buffer %vm-curbuf 
    find-buffer %vm-curbuf
    -1 buffer-mode "undo"
    -1 buffer-mode "exact"
    find-buffer &rig %vm-curbuf 1
    set-variable #l0 $window-line
    vm-moveto-curend
    set-variable #l2 $window-line
    set-variable $window-line #l0
    !force &sub $window-line #l2 search-forward "^MicroEmacs-Info: "
    !if $status
        set-variable #l3 &rig @wl $window-col
        !repeat
            !force &sub $window-line #l2 search-forward "^$"
            set-mark
            !force &sub $window-line #l2 search-forward "^MicroEmacs-Info: "
            !if $status
                set-variable #l4 &rig @wl $window-col
                !force search-backward "^--"
            !else
                set-variable #l4 "e"
                set-variable $window-line #l2
            !endif
            !if &seq &lef #l3 1 "t"
                copy-region
                find-buffer %vm-curbuf
                yank
                -1 yank
                find-buffer &rig %vm-curbuf 1
            !elif &seq &lef #l3 1 "I"
                set-variable #l5 $window-line
                vm-get-mail-info
                set-variable $window-line #l5
                find-buffer %vm-curbuf
                insert-string &spr "%n\n---- %s\n%n\n" &sub $window-width 1 "-" #l3 &sub $window-width 1 "-"
                insert-string %vm-subject
                insert-string %vm-from
                insert-string %vm-date
                insert-string %vm-to
                insert-string %vm-cc
                find-buffer &rig %vm-curbuf 1
            !elif &not &seq &lef #l3 1 "d"
                find-buffer %vm-curbuf
                insert-string &spr "%n\n---- %s\n%n\n" &sub $window-width 1 "-" #l3 &sub $window-width 1 "-"
                find-buffer &rig %vm-curbuf 1
            !endif
            set-variable #l3 #l4
        !until &seq &lef #l3 1 "e"
        set-variable $window-line #l0
        vm-get-mail-info
        set-variable $window-line #l0
        -1 find-buffer $buffer-bname
    !else
        set-variable $window-line #l0
        vm-get-mail-info
        set-mark
        set-variable $window-line #l2
        copy-region
        set-variable $window-line #l0
        -1 find-buffer $buffer-bname
        yank
        -1 yank
    !endif
    beginning-of-buffer
    insert-string &spr "Status: (%s of %s) %s" &ind %vm-curmcur &ind %vm-curmtot &rig %vm-microemacs 11
    insert-string %vm-subject
    insert-string %vm-from
    insert-string %vm-date
    insert-string %vm-to
    insert-string %vm-cc
    beginning-of-buffer
    -1 buffer-mode "edit"
    set-variable $buffer-hilight .hilight.mail
    1 buffer-mode "view"
    buffer-bind-create "bo" "esc h" .osd.vm-help osd
    set-variable $buffer-input vm-input
    next-window
!emacro

0 define-macro vm-remove-vm-info
    beginning-of-buffer
    !force search-forward "^MicroEmacs:"
    !while $status
        beginning-of-line
        set-mark
        forward-line
        -1 kill-region
        !force search-forward "^MicroEmacs:"
    !done
    beginning-of-buffer
    !force search-forward "^MicroEmacs-Info:"
    !while $status
        beginning-of-line
        set-mark
        forward-line
        -1 kill-region
        !force search-forward "^MicroEmacs-Info:"
    !done
    beginning-of-buffer
    !force search-forward "^--------------MicroEmacs-Boundary"
    !while $status
        beginning-of-line
        set-mark
        forward-line
        -1 kill-region
        !force search-forward "^--------------MicroEmacs-Boundary"
    !done
!emacro

0 define-macro vm-fix-box
    vm-setup
    delete-buffer $buffer-bname
    find-buffer &rig %vm-curbuf 1
    ; find valid MicroEmacs: ids and change to --MicroEmacs:
    beginning-of-buffer
    !while $status
        beginning-of-line
        forward-line
        !if &seq &lef @wl 11 "MicroEmacs:"
            insert-string "--"
        !endif
        !force search-forward "^from [!-z]* +[MTWFS][ouehra][neduitn] [JFMAJSOND][aepuico][nbrynlgptvc] +[0-9]+ [0-2][0-9]:[0-5][0-9]:[0-5][0-9]"
    !done
    ; Now remove any other MicroEmacs string
    vm-remove-vm-info
    ; Now loop through the box putting the information back in
    beginning-of-buffer
    !while &not &seq @wc ""
        set-variable #l0 $window-line
        !force search-forward "^$"
        set-variable #l1 $window-line
        forward-char
        !force search-forward "^from [!-z]* +[MTWFS][ouehra][neduitn] [JFMAJSOND][aepuico][nbrynlgptvc] +[0-9]+ [0-2][0-9]:[0-5][0-9]:[0-5][0-9]"
        !if &not $status
            end-of-buffer
        !endif
        set-variable #l2 $window-line
        set-variable $window-line #l0
        forward-line
        !if &seq &lef @wl 13 "--MicroEmacs:"
            set-variable #l3 &trb &rig @wl 13
            set-mark
            forward-line
            -1 kill-region
        !else
            set-variable #l2 &add #l2 1
            set-variable #l3 ""
        !endif
        insert-string &spr "MicroEmacs:%s\n" #l3
        set-variable $window-line #l0
        #l2 vm-init-mail-section "R"
    !done
    vm-ready-box
!emacro

0 define-macro vm-show-next
    vm-setup
    delete-buffer $buffer-bname
    find-buffer &rig %vm-curbuf 1
    !force vm-moveto-next
    vm-show-current
!emacro

0 define-macro vm-show-prev
    vm-setup
    delete-buffer $buffer-bname
    find-buffer &rig %vm-curbuf 1
    !force vm-moveto-prev
    vm-show-current
!emacro

; Returns the mail box in #p9 or #p9 = ""
0 define-macro vm-test-archive
    set-variable #l0 $window-line
    vm-get-mail-info
    set-variable $window-line #l0
    !if &sin "A" %vm-microemacs
        set-variable #p0 ""
        !return
    !endif
    set-variable #l4 &reg "/history/mail/archive/field" "\b\b"
    set-variable #l5 &reg "/history/mail/archive/match" "\b\b"
    set-variable #l6 &reg "/history/mail/archive/box"   "\b\b"
    set-variable #l0 0
    !while &not &seq &set #l1 &lget #l5 &inc #l0 1 ""
        set-variable #l2 &cat "%vm-" &lget #l4 #l0
        !if &isin #l1 &ind #l2
            set-variable #p9 &lget #l6 #l0
            !return
        !endif
    !done
    set-variable #p9 ""
!emacro

0 define-macro vm-archive-box
    vm-setup
    set-variable #l0 @ml24 "Mail box" %vm-mail-dir
    find-buffer &rig %vm-curbuf 1
    set-mark
    vm-moveto-curend
    copy-region
    exchange-point-and-mark
    find-file #l0
    end-of-buffer
    yank
    -1 yank
    find-buffer %vm-curbuf
    vm-add-flag "A"
!emacro

0 define-macro vm-Archive-box
    vm-setup
    delete-buffer $buffer-bname
    set-variable #l0 &rig %vm-curbuf 1
    find-buffer #l0
    set-variable &ind %vm-curmcur 1
    set-variable &ind %vm-curmpos 1
    !repeat
        vm-moveto
        vm-test-archive
        !if &seq #l9 ""
        !elif &not &seq #l9 #l0
            set-mark
            vm-moveto-curend
            copy-region
            exchange-point-and-mark
            forward-line
            end-of-line
            insert-string "A"
            find-file #l9
            1 buffer-mode "hide"
            end-of-buffer
            yank
            -1 yank
            find-buffer &rig %vm-curbuf 1
        !endif
        !force vm-moveto-next
    !until &not $status
    vm-ready-box
!emacro

0 define-macro vm-del-windows
    set-variable #l0 $buffer-bname
    !force 0 popup-window &cat #l0 "-list"
    !if $status
        -1 find-buffer $buffer-bname
        previous-window
        !if &seq $buffer-bname #l0
            delete-window
        !else
            next-window
        !endif
    !endif
    !force -1 find-buffer #l0
!emacro

0 define-macro vm-visit-box
    set-variable #l0 @ml24 "Mail box" %vm-mail-dir
    !force 0 find-file #l0
    !if &not $status
        ml-write "Mail box does not exist"
        !bell
        !abort
    !endif
    set-variable #l1 &rig #l0 &rsin "/" #l0
    !if &not &seq $buffer-bname #l1
        delete-buffer $buffer-bname
        ml-write &spr "[A buffer with the name %s already exists]" #l0
        !bell
        !abort
    !endif
    vm-ready-box
!emacro

; First argument must be the required flag - format must be "f"
0 define-macro vm-add-flag
    beginning-of-buffer
    set-variable #l0 @1
    !if &not &sin #l0 @wl
        -1 buffer-mode "view"
        end-of-line
        insert-string #l0
        beginning-of-line
        -1 buffer-mode "edit"
         1 buffer-mode "view"
        find-buffer &cat %vm-curbuf "-list"
        -1 buffer-mode "view"
        forward-word
        forward-char
        !force -1 search-forward " "
        backward-delete-char
        insert-string #l0
        beginning-of-line
        -1 buffer-mode "edit"
         1 buffer-mode "view"
        find-buffer &rig %vm-curbuf 1
        forward-line
        end-of-line
        insert-string #l0
        beginning-of-line
        backward-line
        find-buffer %vm-curbuf
    !endif
!emacro

0 define-macro vm-tsave-box
    vm-setup
    delete-buffer $buffer-bname
    find-buffer &rig %vm-curbuf 1
    set-variable &ind %vm-curmcur 1
    set-variable &ind %vm-curmpos 1
    !force vm-moveto-prev
    !repeat
        set-mark
        forward-line
        !if &sin "D" @wl
            vm-moveto-curend
            -1 kill-region
            set-variable &ind %vm-curmtot &sub &ind %vm-curmtot 1
        !else
            !if &set #l0 &sin "N" @wl
                #l0 forward-char
                backward-delete-char
            !endif
            backward-line
        !endif
        !force vm-moveto-prev
    !until &not $status
!emacro

0 define-macro vm-save-box
    vm-tsave-box
    vm-ready-box
!emacro

0 define-macro vm-Save-box
    vm-tsave-box
    save-buffer
    vm-ready-box
!emacro

0 define-macro vm-delete-mail
    vm-setup
    vm-add-flag "D"
    !if &les &ind %vm-curmcur &ind %vm-curmtot
        find-buffer &rig %vm-curbuf 1
        !force vm-moveto-next
        vm-show-current
    !endif
!emacro

0 define-macro vm-undo-mail
    vm-setup
    !if &set #l0 &sin "D" @wl
        -1 buffer-mode "view"
        set-variable $window-col #l0
        backward-delete-char
        beginning-of-line
        -1 buffer-mode "edit"
         1 buffer-mode "view"
        find-buffer &cat %vm-curbuf "-list"
        -1 buffer-mode "view"
        set-variable $window-col &sin "D" @wl
        backward-delete-char
        set-variable $window-col 8
        insert-space
        beginning-of-line
        -1 buffer-mode "edit"
         1 buffer-mode "view"
        find-buffer &rig %vm-curbuf 1
        forward-line
        set-variable $window-col &sin "D" @wl
        backward-delete-char
        beginning-of-line
        backward-line
        find-buffer %vm-curbuf
    !endif
!emacro

0 define-macro vm-delete-box
    vm-setup
    find-buffer &rig %vm-curbuf 1
    !force delete-buffer $buffer-bname @mn
    !if $status
        delete-buffer %vm-curbuf
        delete-buffer &cat %vm-curbuf "-list"
    !else
        find-buffer %vm-curbuf
    !endif
!emacro

; returns #p9 = from, #p8 = subject
0 define-macro vm-get-from-sub
    set-variable #p9 ""
    set-variable #p8 ""
    !while &not &seq @wc "\n"
        !if   &seq &lef @wl 5 "From:"
            set-variable #p9 &trl &rig @wl 5
        !elif &seq &lef @wl 8 "Subject:"
            set-variable #p8 &trl &rig @wl 8
        !endif
        beginning-of-line
        forward-line
    !done
!emacro

0 define-macro vm-reply
    vm-setup
    beginning-of-buffer
    !if &seq %vm-from ""
        ml-write "Unable to find who to reply to "
        !bell
        !abort
    !endif
    vm-add-flag "R"
    set-variable #l0 &trl &rig %vm-from 5
    set-variable #l1 &trl &rig %vm-subject 8
    mail
    !if &gre $window-line 1
        ml-write "Already creating mail"
        !abort
    !endif
    end-of-line
    insert-string #l0
    forward-delete-char
    end-of-line
    insert-string "Re: "
    insert-string #l1
    forward-delete-char
    search-forward "--text follows this line--"
    forward-line
    beginning-of-line
    -1 buffer-mode "edit"
!emacro

0 define-macro vm-Reply
    beginning-of-buffer
    forward-line
    set-mark
    end-of-buffer
    copy-region
    vm-reply
    newline
    yank
    -1 yank
    set-variable #l0 $window-line
    exchange-point-and-mark
    set-variable #l1 $window-line
    &sub #l0 #l1 replace-string "^" "> "
    set-variable $window-line #l1
    -1 buffer-mode "edit"
!emacro

; #p9 contains the From string
0 define-macro vm-get-who
    !if &sin "(" #p9
        set-variable #p9 &rig #p9 &sin "(" #p9
        !if &sin ")" #p9
            set-variable #p9 &lef #p9 &sub &sin ")" #p9 1
        !endif
    !elif &sin "\"" #p9
        set-variable #p9 &rig #p9 &sin "\"" #p9
        !if &sin "\"" #p9
            set-variable #p9 &lef #p9 &sub &sin "\"" #p9 1
        !endif
    !elif &sin "<" #p9
        set-variable #p9 &lef #p9 &sub &sin "<" #p9 1
    !endif
    set-variable #p9 &trb #p9
!emacro

0 define-macro vm-goto-list
    vm-setup
    popup-window &cat %vm-curbuf "-list"
!emacro

0 define-macro vm-forward
    vm-setup
    !if &seq %vm-from ""
        set-variable #l9 "<unknown>"
    !else
        set-variable #l9 &rig %vm-from 5
        vm-get-who
    !endif
    find-buffer &rig %vm-curbuf 1
    2 forward-line
    set-mark
    vm-moveto-curend
    copy-region
    exchange-point-and-mark
    find-buffer %vm-curbuf
    vm-add-flag "F"
    mail
    search-forward "--text follows this line--"
    forward-line
    beginning-of-line
    newline
    yank
    -1 yank
    insert-string "-------- end --------"
    exchange-point-and-mark
    insert-string "------- start -------\n"
    ; Remove any MicroEmacs additions
    vm-remove-vm-info
    beginning-of-buffer
    forward-line
    end-of-line
    insert-string "Forwarded message from "
    insert-string #l9
    beginning-of-buffer
    end-of-line
    -1 buffer-mode "edit"
!emacro

0 define-macro vm-get-mail
    !if &seq &cat "*" %vm-mail-box $buffer-bname
        ml-write "Checking for new mail..."
        !force 0 mail-check
        !if $status
            find-buffer %vm-mail-box
            end-of-buffer
            insert-file %vm-mail-src
            3 narrow-buffer
            ; use append file so hte buffer status is not altered
            6 append-buffer &cat %vm-mail-dir "incoming.box"
            narrow-buffer
            find-buffer "*vm-empty-buffer"
            -1 buffer-mode "ctrlz"
            5 append-buffer %vm-mail-src
            delete-buffer $buffer-bname
            find-buffer %vm-mail-box
            vm-ready-box
        !else
            ml-write "No new mail"
        !endif
    !else
        ml-write "This isn't your in-mail box"
        !bell
    !endif
!emacro

0 define-macro vm-format-mess
    vm-setup
    -1 buffer-mode "view"
    1 buffer-mode "indent"
    1 buffer-mode "justify"
    set-variable #l0 $buffer-fill-col
    beginning-of-buffer
    !force search-forward "^$"
    !force search-forward "^[ \CI]*[^ \CI\CJ>]"
    !while $status
        set-alpha-mark "S"
        set-variable #l2 0
        !repeat
            end-of-line
            !if &gre $window-acol #l2
                set-variable #l2 $window-acol
            !endif
            !force -2 search-forward "^[ \CI]*[^ \CI\CJ>]"
        !until &not $status
        !if &gre #l2 #l0
            insert-newline
            goto-alpha-mark "S"
            backward-line
            end-of-line
            insert-newline
            set-alpha-mark "S"
            -1 ifill-paragraph
            set-alpha-mark "E"
            goto-alpha-mark "S"
            backward-delete-char
            goto-alpha-mark "E"
            forward-delete-char
        !endif
        !force search-forward "^[ \CI]*[^ \CI\CJ>]"
    !done
    -1 buffer-mode "edit"
    1 buffer-mode "view"
    beginning-of-buffer
!emacro

define-macro-file htmltool html-to-ehf

0 define-macro vm-expand-html
    vm-setup
    beginning-of-line
    !force search-forward "^---- HTML Insert"
    !if &not $status
        ml-write "[Failed to find HTML Insert]"
        !abort
    !endif
    set-variable #l0 &rig @wl 5
    beginning-of-line
    backward-line
    set-variable #l1 @wl
    2 forward-line
    !if &seq @wl #l1
        find-buffer &rig %vm-curbuf 1
        vm-moveto
        !force search-forward &cat "^MicroEmacs-Info: " #l0
        !if &not $status
            find-buffer %vm-curbuf
            ml-write "[Insert not found in mail box - Try fixing]"
            !abort
        !endif
        beginning-of-line
        forward-line
        set-variable #l1 $window-line
        !force search-forward "^$"
        forward-word
        beginning-of-line
        set-variable #l2 $window-line
        !force search-forward "^MicroEmacs-Info: "
        !if $status
            !force search-backward "^--"
        !endif
        !if &not $status
            find-buffer %vm-curbuf
            ml-write "[Insert end marker not found in mail box - Try fixing]"
            !abort
        !endif
        set-variable #l3 $window-line
        set-mark
        ; got the top, after header and end of data locations,
        ; if the end of header and end locations are the same then the data has been removed
        backward-word
        !if &gre #l2 $window-line
            find-buffer %vm-curbuf
            ml-write "[Insert has been cut]"
            !abort
        !endif
        set-variable $window-line #l2
        copy-region
        !if @#
            find-buffer "*vm-html-temp"
            yank
            -1 yank
            set-variable $buffer-fill-col &sub $window-width 2
            beginning-of-buffer
            set-variable #g0 0
            !force html-to-ehf
            beginning-of-buffer
            set-mark
            insert-string "\esB"
            end-of-buffer
            backward-char
            insert-string "\esA"
            forward-char
            copy-region
            !force 0 delete-buffer $buffer-bname
        !endif
        find-buffer %vm-curbuf
        -1 buffer-mode "view"
        yank
        -1 yank
        -1 buffer-mode "edit"
        1 buffer-mode "view"
        exchange-point-and-mark
    !else
        set-mark
        !force search-forward &spr "^%s$" #l1
        !if &not $status
            find-buffer %vm-curbuf
            ml-write "[Insert end marker not found in mail message]"
            !abort
        !endif
        beginning-of-line
        -1 buffer-mode "view"
        -1 kill-region
        -1 buffer-mode "edit"
        1 buffer-mode "view"
    !endif
    backward-line
!emacro

0 define-macro vm-extract-data
    ; find the next data insert
    vm-setup
    beginning-of-line
    !force search-forward "^---- \\(HTML\\|Data\\) Insert"
    !if &not $status
        ml-write "[Insert not found]"
        !abort
    !endif
    set-variable #l0 &rig @wl 5
    beginning-of-line
    forward-line
    find-buffer &rig %vm-curbuf 1
    vm-moveto
    !force search-forward &cat "^MicroEmacs-Info: " #l0
    !if &not $status
        find-buffer %vm-curbuf
        ml-write "[Insert not found in mail box - Try fixing]"
        !abort
    !endif
    beginning-of-line
    forward-line
    set-variable #l1 $window-line
    !force search-forward "^$"
    forward-word
    beginning-of-line
    set-variable #l2 $window-line
    !force search-forward "^MicroEmacs-Info: "
    !if $status
        !force search-backward "^--"
    !endif
    !if &not $status
        find-buffer %vm-curbuf
        ml-write "[Insert end marker not found in mail box - Try fixing]"
        !abort
    !endif
    set-variable #l3 $window-line
    set-mark
    ; got the top, after header and end of data locations,
    ; if the end of header and end locations are the same then the data has been removed
    backward-word
    !if &gre #l2 $window-line
        find-buffer %vm-curbuf
        ml-write "[Insert has been cut]"
        !abort
    !endif
    !if &not @#
        ; We want to cut the Insert
        set-variable $window-line #l2
        -1 kill-region
        find-buffer %vm-curbuf
        ml-write "[Insert cut]"
        !return
    !endif
    ; get the file name to extract to
    !if &set #l4 &sin "Name=" #l0
        set-variable #l4 &lget &rig #l0 &add #l4 4 1
    !else
        set-variable #l4 ""
    !endif
    find-buffer %vm-curbuf
    screen-update
    set-variable #l3 @ml01 &spr "Extract Insert to (%s)" #l4
    !if &seq &set #l5 &stat "t" #l3 "D"
        ; given a directory name
        !if &not &seq &rig #l3 &sub &len #l3 1 "/"
            set-variable #l3 &cat #l3 "/"
        !endif
        set-variable #l3 &cat #l3 #l4
        set-variable #l5 &stat "t" #l3
    !endif
    !if &seq #l5 "R"
        set-variable #l6 @mc5 &spr "Over-write file %s (?/y/n) ? " #l3 "yYnN" "(Y)es, (N)o, (C-g)Abort ? "
        !if &iseq #l6 "n"
            !return
        !endif
    !elif &not &seq #l5 "X"
        ml-write "[Illegal file name given]"
        !abort
    !endif
    set-variable #l6 &rig #l3 &rsin "/" #l3
    set-variable #l8 #l3
    !if &band $system 0x100
        ; on win32 and dos change '/' to '\'
        set-variable #l8 &rep #l8 "/" "\\"
    !endif
    find-buffer &rig %vm-curbuf 1
    !if &seq &lef #l0 19 "Data Insert, base64"
        ; The base64 metamail extraction needs the header
        set-variable $window-line #l1
        !force &sub #l1 #l2 search-forward "name="
        !if $status
            1 kill-line
            -1 yank
            insert-string &spr "\"%s\"" #l6
            beginning-of-line
            set-variable $window-line #l1
        !else
            ml-write "[Failed to set name]"
            !abort
        !endif
        set-variable #l9 "base64"
    !else
        ; uuencode and html don't
        set-variable $window-line #l2
        !if &seq &lef #l0 4 "HTML"
            set-variable #l9 "HTML"
        !else
            2 forward-word
            1 kill-line
            -1 yank
            insert-string &cat " " #l6
            beginning-of-line
            set-variable #l9 "uuencode"
        !endif
    !endif
    set-variable #l9 &reg &spr "/history/%s/mail-%s" $platform #l9 ""
    !if &sin "%i" #l9
        set-variable #l4 $temp-name
    !else
        set-variable #l4 #l3
    !endif
    ; narrow out the stuff we don't want - its imperative we don't fail while narrowed
    set-variable #l1 $buffer-bname
    set-variable #l2 $buffer-fname
    3 narrow-buffer
    !force 2 write-buffer #l4
    !if &set #l5 $status
        ; store the write status
    !endif
    set-variable $buffer-bname #l1
    set-variable $buffer-fname #l2
    narrow-buffer
    find-buffer %vm-curbuf
    !if &not #l5
        ml-write &spr "[Failed to write file %s]" #l4
        !return
    !endif
    !if &seq #l9 ""
        ml-write &spr "[Insert written to %s]" #l4
    !else
        set-variable #l1 0
        !while &set #l2 &sin "%" &rig #l9 #l1
            set-variable #l2 &add #l1 #l2
            set-variable #l5 &mid #l9 #l2 1
            !if &seq #l5 "i"
                set-variable #l5 #l4
            !elif &seq #l5 "o"
                set-variable #l5 #l8
            !elif &seq #l5 "b"
                set-variable #l5 #l6
            !endif
            set-variable #l5 &cat &lef #l9 &sub #l2 1 #l5
            set-variable #l1 &len #l5
            set-variable #l9 &cat #l5 &rig #l9 &add #l2 1
        !done
        ; set the *inbox buffer's file name to the out name so the dir of execution
        ; will be correct
        set-variable $buffer-fname #l3
        !force 2 ipipe-shell-command #l9 "*Extract data*"
        set-variable $buffer-fname ""
        ml-write &spr "[Insert extracted to %s - logged to *Extract data*]" #l3
    !endif
!emacro

0 define-macro vm-cut-all-data
    vm-setup
    find-buffer &rig %vm-curbuf 1
    beginning-of-buffer
    !force search-forward "^MicroEmacs-Info: Data"
    !while $status
        !force search-forward "^$"
        forward-word
        beginning-of-line
        set-variable #l2 $window-line
        !force search-forward "^MicroEmacs-Info: "
        !if $status
            !force search-backward "^--"
        !endif
        !if &not $status
            find-buffer %vm-curbuf
            ml-write "[Insert end marker not found in mail box - Try fixing]"
            vm-ready-box
            !abort
        !endif
        set-mark
        ; got the top, after header and end of data locations,
        ; if the end of header and end locations are the same then the data has been removed
        backward-word
        !if &les #l2 $window-line
            set-variable $window-line #l2
            -1 kill-region
        !endif
        !force search-forward "^MicroEmacs-Info: Data"
    !done
    vm-ready-box
!emacro

define-macro vm
    !if &seq &set %vm-mail-dir &reg &spr "/history/%s/mail-dir" $platform "" ""
        ml-write "[Mail directory not setup! Execute mail-setup to configure]"
        !bell
        !abort
    !endif
    !if &seq &set %vm-mail-src &reg &spr "/history/%s/mail-src" $platform "" ""
        ml-write "[Incoming mail file not setup! Execute mail-setup to configure]"
        !bell
        !abort
    !endif
    !if &seq &set %vm-mail-box &reg &spr "/history/%s/mail-box" $platform "" ""
        ml-write "[Main mail box not setup! Execute mail-setup to configure]"
        !bell
        !abort
    !endif
    find-file &spr "file:%s%s" %vm-mail-dir %vm-mail-box @mna
    !if &not &seq $buffer-bname %vm-mail-box
        ml-write &spr "[A buffer with the name %s already exists]" %vm-mail-box
        !bell
        !abort
    !endif
    !if &reg &spr "/history/%s/mail-vmget" $platform "1"
        end-of-buffer
        !force 0 mail-check
        !if $status
            insert-file %vm-mail-src
            3 narrow-buffer
            ; use append file so the buffer status is not altered
            6 append-buffer &cat %vm-mail-dir "incoming.box"
            narrow-buffer
            find-buffer "*vm-empty-buffer"
            -1 buffer-mode "ctrlz"
            5 append-buffer %vm-mail-src
            delete-buffer $buffer-bname
            find-buffer %vm-mail-box
        !else
            ml-write "[No new mail]"
        !endif
    !endif
    !force 0 find-file &cat %vm-mail-dir %vm-mail-box
    vm-ready-box
!emacro

osd .osd.vm-help 0  "batcDH" 9 3 99 .scheme.osd-title "View Mail Help"
osd .osd.vm-help 3  "" 
osd .osd.vm-help 4  ""  " esc h   - View this help page"
osd .osd.vm-help 5  ""  " delete  - Hide VM windows"
osd .osd.vm-help 6  ""  " return  - Swap between message and list window"
osd .osd.vm-help 7  ""  " space   - Page down current message"
osd .osd.vm-help 8  ""  " A       - Auto-archive (Auto-filtering Archive)"
osd .osd.vm-help 11 ""  " a       - Archive current message to a user given box"
osd .osd.vm-help 12 ""  " C       - Cut all embedded data in the current box"
osd .osd.vm-help 13 ""  " c       - Cut the next embedded data in the current message"
osd .osd.vm-help 14 ""  "           (copes with uuencoded and metamail sections)"
osd .osd.vm-help 15 ""  " D       - Delete the current mail box (will prompt if change"
osd .osd.vm-help 16 ""  "           will be lost)"
osd .osd.vm-help 17 ""  " d       - Delete the current mail message"
osd .osd.vm-help 18 ""  " F       - Fix current mail box (try this if things strange"
osd .osd.vm-help 19 ""  "           things start happening)"
osd .osd.vm-help 20 ""  " f       - Format the layout of the current message"
osd .osd.vm-help 21 ""  " g       - Check and get any new mail"
osd .osd.vm-help 22 ""  " m       - Short cut to mail"
osd .osd.vm-help 23 ""  " n       - Goto next mail message"
osd .osd.vm-help 24 ""  " p       - Goto previous mail message"
osd .osd.vm-help 25 ""  " R       - Reply to current mail message with text inserted"
osd .osd.vm-help 26 ""  " r       - Reply to current mail message without text inserted"
osd .osd.vm-help 27 ""  " S       - Up-date changes to the mail box and save to disk"
osd .osd.vm-help 28 ""  " s       - Up-date changes to the mail box only, no save to disk"
osd .osd.vm-help 29 ""  " u       - Undo delete (only before a save)"
osd .osd.vm-help 30 ""  " v       - Visit another box"
osd .osd.vm-help 31 ""  " x       - Extract the next embedded data in the current message "
osd .osd.vm-help 32 ""  "           (copes with uuencoded and metamail sections)"
osd .osd.vm-help 33 ""  " z       - Forward current message to someone else"
osd .osd.vm-help 34 ""
osd .osd.vm-help 99 "BcfH" .scheme.osd-ebtt "  \HOK  " f void 

0 define-macro vm-input
    set-variable #l2 @cck
    set-variable #l3 @cc
    !if &not &set #l0 &lfi "|esc h|delete|space|return|tab|C-tab|A|a|C|c|d|D|f|F|g|m|n|p|r|R|s|S|u|v|x|z|" #l2
        !if &not &seq #l3 "ERROR"
            execute-line &spr "!nma %s %s" &cond @? @# "" #l3
            !return
        !endif
        ml-write &spr "[Key \"%s\" not bound - \"esc h\" to view help]" #l2
        !abort
    !endif
    set-variable #l1 &lget "|.osd.vm-help osd|vm-del-windows|scroll-down|vm-goto-list|vm-expand-html|0 vm-expand-html|vm-Archive-box|vm-archive-box|vm-cut-all-data|0 vm-extract-data|vm-delete-mail|vm-delete-box|vm-format-mess|vm-fix-box|vm-get-mail|mail|vm-show-next|vm-show-prev|vm-reply|vm-Reply|vm-save-box|vm-Save-box|vm-undo-mail|vm-visit-box|vm-extract-data|vm-forward|" #l0
    execute-line #l1
!emacro

0 define-macro vm-list-input
    set-variable #l2 @cck
    set-variable #l3 @cc
    !if &not &set #l0 &lfi "|esc h|delete|space|return|tab|C-tab|A|a|C|c|d|D|f|F|g|m|n|p|r|R|s|S|u|v|x|z|up|down|page-up|page-down|" #l2
        !if &not &seq #l3 "ERROR"
            execute-line &spr "!nma %s %s" &cond @? @# "" #l3
            !return
        !endif
        ml-write &spr "[Key \"%s\" not bound - \"esc h\" to view help]" #l2
        !abort
    !endif
    vm-setup-list
    set-variable #l1 &lget "|.osd.vm-help osd|vm-del-windows|scroll-down|void|vm-expand-html|0 vm-expand-html|vm-Archive-box|vm-archive-box|vm-cut-all-data|0 vm-extract-data|vm-delete-mail|vm-delete-box|vm-format-mess|vm-fix-box|vm-get-mail|mail|vm-show-next|vm-show-prev|vm-reply|vm-Reply|vm-save-box|vm-Save-box|vm-undo-mail|vm-visit-box|vm-extract-data|vm-forward|vm-show-prev|vm-show-next|scroll-up|scroll-down|" #l0
    execute-line #l1
    !if &lget  "|1|0|1|0|1|1|1|1|1|1|1|0|1|1|1|0|1|1|0|0|1|1|1|1|1|0|1|1|1|1|" #l0
        popup-window &cat %vm-curbuf "-list"
    !endif
!emacro

0 define-macro vm-list-mouse
    vm-setup-list
    popup-window &cat %vm-curbuf "-list"
!emacro


; Mail Filter Setup ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0 define-macro mailf-set-fields
    set-variable .mail-filter.cur @#
    !if @#
        osd .osd.mailf 40 "fh" &spr " %2d  " @#
        set-variable #l0 &mid $result 4 7
        set-variable .mail-filter.field &trr #l0
        osd .osd.mailf 50 "xMdsHfh" .scheme.osd-entry #l0 .osd.mailff
        set-variable .mail-filter.match &lget &reg &cat .mail-filter.reg "match" "\b" @#
        set-variable .mail-filter.box   &lget &reg &cat .mail-filter.reg "box"   "\b" @#
    !else
        set-variable .mail-filter.field "subject"
        set-variable .mail-filter.match ""
        set-variable .mail-filter.box ""
        osd .osd.mailf 40 "fh" "  ?  "
        osd .osd.mailf 50 "xMdsHfh" .scheme.osd-entry "subject" .osd.mailff
    !endif
!emacro

0 define-macro mailf-set-field
    set-variable .mail-filter.field $result
    osd .osd.mailf 50 "xMdsHfh" .scheme.osd-entry $result .osd.mailff
!emacro

0 define-macro maila-set
    !if &equ &abs @# 2
        set-variable #l0 ".mail-filter.box"
    !else
        set-variable #l0 ".mail-filter.match"
    !endif
    !if &les @# 0
        set-variable #l1 &ind #l0
        set-variable #l1 @ml2 "" #l1
        set-variable &ind #l0 #l1
    !else
        set-variable $result &ind #l0
    !endif
!emacro

0 define-macro maila-create
    -1 osd .osd.mailfc
    osd .osd.mailfc 0 "sS" .scheme.osd-child 53 5 -1 -1 maila-create
    set-variable #l3 0
    set-variable #l4 &reg &cat .mail-filter.reg "field" "\b"
    set-variable #l5 &reg &cat .mail-filter.reg "match" "\b"
    set-variable #l6 &reg &cat .mail-filter.reg "box"   "\b"
    !if &gre &len #l4 1
        !while &not &seq &set #l0 &lget #l4 &inc #l3 1 "" 
            set-variable #l1 &lget #l5 #l3
            set-variable #l2 &lget #l6 #l3
            osd .osd.mailfc #l3 "x" &spr "%2d  %s%n %s%n  %s" #l3 #l0 &sub 9 &len #l0 " " #l1 &sub 22 &len #l1 " " #l2 #l3 mailf-set-fields
        !done
    !else
        osd .osd.mailfc 1 ""
    !endif
!emacro

0 define-macro maila-com
    set-variable #l4 &reg &cat .mail-filter.reg "field" "\b"
    set-variable #l5 &reg &cat .mail-filter.reg "match" "\b"
    set-variable #l6 &reg &cat .mail-filter.reg "box"   "\b"
    !if   &equ @# 3
        ; delete the entry
        !if &not .mail-filter.cur
            ml-write "[No entry selected]" 
            !return
        !endif
        set-variable #l4 &lde #l4 .mail-filter.cur
        set-variable #l5 &lde #l5 .mail-filter.cur
        set-variable #l6 &lde #l6 .mail-filter.cur
    !else
        !if &seq .mail-filter.match ""
            ml-write "[Match field is empty]" 
            !return
        !endif
        !if &equ @# 2
            ; change the entry
            !if &not .mail-filter.cur
                ml-write "[No entry selected]" 
                !return
            !endif
            set-variable #l4 &lse #l4 .mail-filter.cur .mail-filter.field
            set-variable #l5 &lse #l5 .mail-filter.cur .mail-filter.match
            set-variable #l6 &lse #l6 .mail-filter.cur .mail-filter.box
        !else
            ; add the entry
            set-variable #l4 &lse #l4 -1 .mail-filter.field
            set-variable #l5 &lse #l5 -1 .mail-filter.match
            set-variable #l6 &lse #l6 -1 .mail-filter.box
        !endif
    !endif
    set-registry &cat .mail-filter.reg "field" #l4
    set-registry &cat .mail-filter.reg "match" #l5
    set-registry &cat .mail-filter.reg "box"   #l6
    maila-create
!emacro

osd .osd.mailff 0  "b"
osd .osd.mailff 10 "x" "subject" f mailf-set-field
osd .osd.mailff 20 "x" "from"    f mailf-set-field
osd .osd.mailff 30 "x" "to"      f mailf-set-field

-1 osd .osd.mailf
osd .osd.mailf 0 "batcHIs" 9 3 56 0 -1 -1 640 .scheme.osd-title "E-Mail Auto-Archive Setup"
osd .osd.mailf 10 ""
osd .osd.mailf 20  "IbH" .scheme.osd-sbar 53 5 .osd.mailfc
osd .osd.mailf 25  ""
osd .osd.mailf 30  "" "  #  Field     Search String           Mail Box "
osd .osd.mailf 35  ""
osd .osd.mailf 40  "fh" "  ?  "
osd .osd.mailf 50  "MdxsHfh" .scheme.osd-entry "subject" .osd.mailff
osd .osd.mailf 60  "hf" "   "
osd .osd.mailf 70  "ExHfh" .scheme.osd-entry "######################" 1 maila-set
osd .osd.mailf 80  "fh" "  "
osd .osd.mailf 90  "ExHf" .scheme.osd-entry "###############" 2 maila-set
osd .osd.mailf 600 ""
osd .osd.mailf 610 "BcfhxH" .scheme.osd-ebtt "  \HAdd  "  1 maila-com
osd .osd.mailf 620 "BcfhxH" .scheme.osd-ebtt " \HModify " 2 maila-com
osd .osd.mailf 630 "BcfhxH" .scheme.osd-ebtt " \HDelete " 3 maila-com
osd .osd.mailf 640 "BcfH"   .scheme.osd-ebtt " \HClose "   f void

0 define-macro mail-filter
    !if @#
        osd .osd.mailf 0 "batcHIs" 10 5 56 0 -1 -1 640 .scheme.osd-title "E-Mail Auto-Archive Setup"
        set-variable .reg "/history/mail/archive/"
    !else
        osd .osd.mailf 0 "batcHIs" 10 5 56 0 -1 -1 640 .scheme.osd-title "E-Mail Pre-Filter Setup"
        set-variable .reg "/history/mail/filter/"
    !endif
    maila-create
    0 mailf-set-fields
    .osd.mailf osd
!emacro

; E-Mail setup ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

0 define-macro mail-set-pfentry
    set-variable #l2 &spr "/history/%s/mail-%s" $platform &lget "|send|insert1|insert2|base64|uuencode|check|get|box|sig|fcc|" &abs @#
    !if &les @# 0
        set-variable #l0 &reg #l2 ""
        set-variable #l0 @ml2 "" #l0
        set-registry #l2 #l0
    !else
        set-variable $result &reg #l2 ""
    !endif
!emacro
    
0 define-macro mail-set-pfcheckbox
    set-variable #l2 &spr "/history/%s/mail-%s" $platform &lget "|queue|vmget|" &abs @#
    set-variable #l0 &lget "|0|1|" &abs @#
    set-variable #l0 &reg #l2 #l0
    !if &les @# 0
        set-variable #l0 &bxor #l0 1
        set-registry #l2 #l0
    !elif &not #l0
        !abort
    !endif
!emacro

0 define-macro mail-set-pffile
    set-variable #l2 &spr "/history/%s/mail-%s" $platform &lget "|src|dir|" &abs @#
    !if &les @# 0
        set-variable #l0 &reg #l2 ""
        set-variable #l0 @ml21 "" #l0
        !if &equ @# -2
            ; the mail-dir must have a trailing '/'
            !if &not &seq &rig #l0 &sub &len #l0 1 "/"
                set-variable #l0 &cat #l0 "/"
                set-registry #l2 #l0
                -2 osd
            !endif
        !endif
        set-registry #l2 #l0
    !else
        set-variable $result &reg #l2 ""
    !endif
!emacro

-1 osd .osd.mails
osd .osd.mails 0   "batcHIs" 9 4 58 0 -1 -1 630 .scheme.osd-title &spr "E-Mail Setup (%s%s)" &sup &lef $platform 1 &rig $platform 1
osd .osd.mails 30  ""
osd .osd.mails 40  "Sfh" "  User Mail \HDir:       " 50
osd .osd.mails 50  "EtxHf" .scheme.osd-entry "###############################" 2 mail-set-pffile
osd .osd.mails 55  ""
osd .osd.mails 60  "Sfh" "  Send Mail Signa\Hture: " 70
osd .osd.mails 70  "EtxHf" .scheme.osd-entry "############" 9 mail-set-pfentry
osd .osd.mails 80  "Sfh" "  Carbon-Copy \HFile:    " 90
osd .osd.mails 90  "EtxHf" .scheme.osd-entry "############" 10 mail-set-pfentry
osd .osd.mails 100 "Sfh" "  Insert Data (^C^\HI):  " 110
osd .osd.mails 110 "EtxHf" .scheme.osd-entry "###############################" 2 mail-set-pfentry
osd .osd.mails 120 "Sfh" "  Insert Data (^C^\HZ):  " 130
osd .osd.mails 130 "EtxHf" .scheme.osd-entry "###############################" 3 mail-set-pfentry
osd .osd.mails 140 "Sfh" "  S\Hend Mail Command:   " 150
osd .osd.mails 150 "EtxHf" .scheme.osd-entry "###############################" 1 mail-set-pfentry
osd .osd.mails 153 "Sfh" "                       "
osd .osd.mails 157 "Ctpfx" &cat .osd.checkbox-chars "\} \HQueue Outgoing Mail" 1 mail-set-pfcheckbox
osd .osd.mails 160 ""
osd .osd.mails 170 "Sfh" "  Chec\Hk Mail Every:    " 180
osd .osd.mails 180 "EtxHfh" .scheme.osd-entry "############" 6 mail-set-pfentry
osd .osd.mails 193 "Sf" " seconds"
osd .osd.mails 200 "Sfh" "  Get Mail C\Hommand:    " 210
osd .osd.mails 210 "EtxHf" .scheme.osd-entry "###############################" 7 mail-set-pfentry
osd .osd.mails 220 "Sfh" "  Incoming Mail \HBox:   " 230
osd .osd.mails 230 "EtxHf" .scheme.osd-entry "###############################" 1 mail-set-pffile
osd .osd.mails 240 "Sfh" "  \HVM Main In Box:      " 250
osd .osd.mails 250 "EtxHfh" .scheme.osd-entry "############" 8 mail-set-pfentry
osd .osd.mails 253 "Sfh" "  "
osd .osd.mails 257 "Ctpfx" &cat .osd.checkbox-chars "\} VM \HGets Mail" 2 mail-set-pfcheckbox
osd .osd.mails 260 "Sfh" "  \HMime Data Extract:   " 270
osd .osd.mails 270 "EtxHf" .scheme.osd-entry "###############################" 4 mail-set-pfentry
osd .osd.mails 280 "Sfh" "  \HUuencode Extract:    " 280
osd .osd.mails 290 "EtxHf" .scheme.osd-entry "###############################" 5 mail-set-pfentry
osd .osd.mails 600 ""
osd .osd.mails 605 "fh" "  "
osd .osd.mails 610 "BHtfxh" .scheme.osd-ebtt " Pre-Filter " 0 mail-filter
osd .osd.mails 615 "fh" "  "
osd .osd.mails 620 "BHtfxh" .scheme.osd-ebtt " \HAuto-Archive " 1 mail-filter
osd .osd.mails 625 "fh" "         "
osd .osd.mails 630 "BcfH"   .scheme.osd-ebtt " \HClose "   f void

define-macro mail-setup
    !if &band @# 1
        ; reread the setup if not run from user-setup
        !force read-registry "/history" $user-name "cbr"
    !endif
    !force !force .osd.mails osd
    !if &not &band @# 1
    !elif $status
        save-registry "/history" ""
    !else
        !force read-registry "/history" $user-name "cbr"
    !endif
!emacro
