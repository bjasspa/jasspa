;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
;  Created By    : Steven Phillips
;  Created       : 1998
;  Last Modified : <010805.0021>
;
;  Description   : Command-line macro for creating a perl tags file
;
;  Usage
;      me "@perltags"
;      me "@perltags" <files> <dirs>
;      me "@perltags" "-v%tag-option=rm"
;      me "@perltags" "-v%tag-option=r" <files> <dirs>
;
;  History
;
;  Copyright (c) 1998-99 JASSPA.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; options r - recurse, a - append, m - multiple links to a tag
set-variable %tag-option   &cond &exi %tag-option   %tag-option   ""
set-variable %tag-filemask &cond &exi %tag-filemask %tag-filemask ":*.pl:*.pm:"
set-variable %tag-ignore   &cond &exi %tag-ignore   %tag-ignore   ":SCCS/:CVS/:"

; in perl you can have function names with 's
set-char-mask "3" "'"

define-macro perltags-add-file
    set-variable $buffer-mask "luh13"
    set-variable #l2 $buffer-fname
    !if &seq &lef #l2 #g1 #g2
        set-variable #l2 &rig #l2 #g1
    !endif
    ml-write &spr "[Parsing file %s]" #l2
    1 buffer-mode "magic"
    beginning-of-buffer
    !repeat
        !force search-forward "^[ \t]*sub[ \t\n]\\(\\w*\\)[ \t\n]*{"
        !if $status
            set-variable #l1 @s1
            set-variable #l3 @wl
            next-window
            !tjump &sin "m" %tag-option 4
            beginning-of-buffer
            !force search-forward &spr "^%s\t" #l1
            !if &not $status
                end-of-buffer
                insert-string #l1
                insert-string "\t"
                insert-string #l2
                insert-string "\t/^"
                insert-string #l3
                insert-string "$/"
            !endif
            next-window
        !endif
    !until &not $status
!emacro

define-macro perltags-parse-tags
    ml-write "All done! Parsing tags file."
    beginning-of-buffer
    set-mark
    replace-string "\\\\" "\\\\\\\\"
    end-of-buffer
    sort-lines
!emacro
    
define-macro perltags-process-buffers
    !repeat
        set-variable #l0 $buffer-bname
        !if &xse #l0 "^.*<[0-9]*>$"
            set-variable #l1 &lef #l0 &sub &rsin "<" #l0 1
        !else
            set-variable #l1 #l0
        !endif
        !if &iseq #l1 "tags"
            !return
        !elif &lfind %tag-ignore #l1
        !elif &bmod "dir"
            set-variable #l2 $buffer-fname
            set-variable #l3 0
            !while &not &seq &set #l4 &lget %tag-filemask &inc #l3 1 ""
                !force find-file &cat #l2 #l4 
            !done
        !else
            beginning-of-buffer
            !force perltags-add-file
            !if &not $status
                ml-write &spr "[Warning: perltags-add-file failed on \"%s\"]" $buffer-fname
                !bell
                ;set-variable #l9 @cq
            !endif
        !endif
        0 delete-buffer #l0
    !until 0
!emacro

define-macro perltags
    !if &seq &lget %tag-filemask 1 ""
        ml-write "[No input file mask set!]"
        !abort
    !endif
    delete-other-windows
    split-window-vertically
    find-buffer "*scratch*"
    find-file "tags"
    !force 0 delete-buffer "*scratch*"
    set-variable #g1 &rsin "/" $buffer-fname
    set-variable #g2 &lef $buffer-fname #g1
    !if &not &sin "a" %tag-option
        beginning-of-buffer
        set-mark
        end-of-buffer
        -1 kill-region
    !else
        end-of-buffer
    !endif
    !if &sin "r" %tag-option
        set-variable %tag-filemask &lins %tag-filemask -1 "[^.]*/"
    !endif
    1 buffer-mode "magic"
    1 buffer-mode "exact"
    next-window
    !if &iseq $buffer-bname "tags"
        !force find-file "."
    !endif
    perltags-process-buffers
    perltags-parse-tags
!emacro
  
0 define-macro start-up
    perltags
    quick-exit
!emacro

; load in user extensions if found
!force execute-file "myperltags"
