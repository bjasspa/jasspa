; -!- emf -!-
; This is part of the JASSPA MicroEmacs macro files
; Copyright (C) 1998-2002 JASSPA (www.jasspa.com)
; See the file me.emf for copying and conditions.
;
; Created:     Wed Sep 30 1998
; Synopsis:    Cygnus shell hook
; Authors:     Jon Green
; Description:
;     This file contains the necessary hooks to run a Cygnus
;     window inside the MicroEmacs editor. The user variable
;     %cygnus-bin-path must be set to the cygnus bin directory,
;     this should be saved in the user setup file ($MENAME.emf),
;     this will typically be:
;                  
;         set-variable %cygnus-bin-path "c:/cygnus/b19/H-i386-cygwin32/bin"
;     or
;         set-variable %cygnus-bin-path "c:/cygnus/cygwin-b20/H-i586-cygwin32/bin"
;
;     This file assumes that a standard cygnus install has
;     been performed and the cygnus variables are *NOT* 
;     defined in the DOS environment space. If they are then
;     you do not need to push the cygnus environment variables
;     within the "cygnus" macro.
;
;     To run a shell then "esc-x cygnus"
;
;     To run with a hilighting within the shell window then define
;     the environment variable %cygnus-hilight i.e.
;
;         set-variable %cygnus-hilight 1
;
;     Set the variable %cygnus-prompt the the hilight regexp string
;     to hilight the prompt line if required, i.e.
;
;         set-variable %cygnus-prompt "^[a-z]*@[^>]*>"
;
;  Notes:
;      Cygnus is at "www.cygnus.com"
;
; convert any '\\'s to '/'s
set-variable #l0 &rep %cygnus-bin-path "\\" "/"
; ditch the end /bin/
!if &seq "/bin" &rig #l0 &sub &len #l0 4
    set-variable #l0 &lef #l0 &sub &len #l0 4
!else ; /bin/
    set-variable #l0 &lef #l0 &sub &len #l0 5
!endif
; set varaibles to the \\ equiv & ditch the /h-i...
set-variable #l1 &lef #l0 &sub &rsin "/" #l0 1
set-variable #l0 &rep #l0 "/" "\\"
; now set the environment
set-variable $MAKE_MODE unix
set-variable $CYGFS #l1
set-variable $TCL_LIBRARY &cat #l1 "/share/tcl8.0"
set-variable $TK_LIBRARY &cat #l1 "/share/tk8.0"
set-variable $TIX_LIBRARY &cat #l1 "/share/tix4.1"
set-variable $GDBTK_LIBRARY &cat #l1 "/share/gdbtcl"
set-variable $GCC_EXEC_PREFIX &cat #l0 "\\lib\\gcc-lib\\"
set-variable .cygnus.cygpath &cat #l0 "\\bin;"
!if &not &exist %cygnus-prompt
    set-variable %cygnus-prompt "^bash-[0-9.]*$"
!endif
!if &band .hilight.flags 0x02
    ; Introduce some hilighting for the shell. We hilight the prompt and
    ; a few commands that are used alot.
    !if &not &exist .hilight.cygnus
        set-variable .hilight.cygnus &pinc .hilight.next 1
    !endif
    0 hilight .hilight.cygnus 0                    $global-scheme
    ; Commonly used commands
    hilight   .hilight.cygnus 1 "awk"              .scheme.keyword
    hilight   .hilight.cygnus 1 "cat"              .scheme.keyword
    hilight   .hilight.cygnus 1 "cc"               .scheme.keyword
    hilight   .hilight.cygnus 1 "cd"               .scheme.keyword
    hilight   .hilight.cygnus 1 "chmod"            .scheme.keyword
    hilight   .hilight.cygnus 1 "compress"         .scheme.keyword
    hilight   .hilight.cygnus 1 "cpio"             .scheme.keyword
    hilight   .hilight.cygnus 1 "df"               .scheme.keyword
    hilight   .hilight.cygnus 1 "du"               .scheme.keyword
    hilight   .hilight.cygnus 1 "echo"             .scheme.keyword
    hilight   .hilight.cygnus 1 "find"             .scheme.keyword
    hilight   .hilight.cygnus 1 "gawk"             .scheme.keyword
    hilight   .hilight.cygnus 1 "gcc"              .scheme.keyword
    hilight   .hilight.cygnus 1 "grep"             .scheme.keyword
    hilight   .hilight.cygnus 1 "gunzip"           .scheme.keyword
    hilight   .hilight.cygnus 1 "gzip"             .scheme.keyword
    hilight   .hilight.cygnus 1 "install"          .scheme.keyword
    hilight   .hilight.cygnus 1 "kill"             .scheme.keyword
    hilight   .hilight.cygnus 1 "ln"               .scheme.keyword
    hilight   .hilight.cygnus 1 "lp"               .scheme.keyword
    hilight   .hilight.cygnus 1 "lpr"              .scheme.keyword
    hilight   .hilight.cygnus 1 "ls"               .scheme.keyword
    hilight   .hilight.cygnus 1 "make"             .scheme.keyword
    hilight   .hilight.cygnus 1 "nmake"            .scheme.keyword
    hilight   .hilight.cygnus 1 "mkdir"            .scheme.keyword
    hilight   .hilight.cygnus 1 "mv"               .scheme.keyword
    hilight   .hilight.cygnus 1 "pack"             .scheme.keyword
    hilight   .hilight.cygnus 1 "ps"               .scheme.keyword
    hilight   .hilight.cygnus 1 "pwd"              .scheme.keyword
    hilight   .hilight.cygnus 1 "rm"               .scheme.keyword
    hilight   .hilight.cygnus 1 "rmdir"            .scheme.keyword
    hilight   .hilight.cygnus 1 "sed"              .scheme.keyword
    hilight   .hilight.cygnus 1 "sort"             .scheme.keyword
    hilight   .hilight.cygnus 1 "tar"              .scheme.keyword
    hilight   .hilight.cygnus 1 "test"             .scheme.keyword
    hilight   .hilight.cygnus 1 "uncompress"       .scheme.keyword
    hilight   .hilight.cygnus 1 "unpack"           .scheme.keyword
    hilight   .hilight.cygnus 1 "who"              .scheme.keyword
    hilight   .hilight.cygnus 1 "zcat"             .scheme.keyword
    ; Hilight the common operators.
    hilight   .hilight.cygnus 1 ">"                .scheme.operator
    hilight   .hilight.cygnus 1 "<"                .scheme.operator
    hilight   .hilight.cygnus 1 "|"                .scheme.operator
    hilight   .hilight.cygnus 1 ">&"               .scheme.operator
    hilight   .hilight.cygnus 1 "&&"               .scheme.operator
    hilight   .hilight.cygnus 1 "||"               .scheme.operator
    ; Command line variables
    hilight   .hilight.cygnus 1 "\\$\\w+"          .scheme.variable
    hilight   .hilight.cygnus 1 "\\$[{(]\\w+[})]"  .scheme.variable
    hilight   .hilight.cygnus 0 %cygnus-prompt     .scheme.type
!else
    set-variable %cygnus-hilight 0
!endif
;
; Macros to control the shell window.
;
define-macro cygpipe-break
    2 ipipe-kill
    ml-write "cygnus break"
!emacro

0 define-macro cygpipe-minoutput
    set-variable #l2 @cck
    set-variable #l3 @cc
    !if &not &bmod "pipe"
        set-variable $buffer-input ""
        !if &gre &len @cc 1
            !goto exec-lbl
        !endif
        insert-string @cc
        !return
    !elif &les &len @cc 2
        goto-alpha-mark "I"
        ipipe-write @cc
    !elif &set #l0 &lfi "|tab|backward-delete-char|newline|" #l3
        goto-alpha-mark "I"
        ipipe-write &lget "|\t|\b|\n|" #l0
    !elif &set #l0 &lfi "|backspace|" #l2
        goto-alpha-mark "I"
        ipipe-write &lget "|\b|" #l0
    !elif &seq "quote-char" #l3
        goto-alpha-mark "I"
        ml-write "Quote: "
        ipipe-write @cqk
    !else
*exec-lbl
        !if &seq #l3 "ERROR"
            ml-write &spr "[Key not bound \"%s\"]" #l2
            !abort
        !else
            execute-line &spr "!nma %s %s" &cond @? @# "" #l3
        !endif
    !endif
!emacro

0 define-macro cygpipe-output
    set-variable #l2 @cck
    set-variable #l3 @cc
    !if &les &len @cc 2
        goto-alpha-mark "I"
        ipipe-write @cc
    !elif &set #l0 &lfi "|tab|backward-delete-char|newline|beginning-of-line|backward-char|forward-delete-char|end-of-line|forward-char|kill-line|recenter|forward-line|backward-line|expand-abbrev|forward-word|backward-word|" #l3
        goto-alpha-mark "I"
        ipipe-write &lget "|\t|\b|\n|\CA|\CB|\CD|\CE|\CF|\CK|\CL|\CN|\CP|\e\e|\ef|\eb|" #l0
    !elif &set #l0 &lfi "|backspace|" #l2
        goto-alpha-mark "I"
        ipipe-write &lget "|\b|" #l0
    !elif &seq "yank" #l3
        goto-alpha-mark "I"
        ipipe-write @y
    !elif &seq "quote-char" #l3
        goto-alpha-mark "I"
        ml-write "Quote: "
        ipipe-write @cqk
    !elif &and &seq "mouse-event" #l3 &sin "yank" &reg "history/mouse" #l2 ""
        goto-alpha-mark "I"
        ipipe-write @y
    !elif &seq #l3 "ERROR"
        ml-write &spr "[Key \"%s\" not bound - \"esc h\" to view help]" #l2
        !abort
    !else
        execute-line &spr "!nma %s %s" &cond @? @# "" #l3
    !endif
!emacro

0 define-macro cygpipe-mode
    -1 buffer-mode "usr2"
    -1 buffer-mode "usr3"
    -1 buffer-mode "usr4"
    !if &equ @# 1
        set-variable $buffer-input cygpipe-output
        1 buffer-mode "lock"
        1 buffer-mode "usr3"
        goto-alpha-mark "I"
    !elif &equ @# 2
        set-variable $buffer-input ""
        1 buffer-mode "lock"
        1 buffer-mode "usr4"
        goto-alpha-mark "I"
        !repeat
            2 screen-update
            set-variable #l0 @cqk
            !if &not &bmo "pipe"
                !return
            !elif &equ &len #l0 1
                ipipe-write #l0
            !elif &seq #l0 "f2"
                0 cygpipe-mode
                !return
            !elif &seq #l0 "f3"
                1 cygpipe-mode
                !return
            !endif
        !until 0
    !else
        set-variable $buffer-input ""
        -1 buffer-mode "lock"
        1 buffer-mode "usr2"
    !endif
!emacro

0 define-macro cygpipe-clear
    beginning-of-buffer
    set-mark
    end-of-buffer
    kill-region
!emacro    

0 define-macro cygpipe-input
    !if &not @#
        ; process has ended, clear-up
        set-variable $buffer-input ""
        set-variable $buffer-ipipe ""
        !force buffer-unbind-key &kbin "0" cygpipe-mode
        !force buffer-unbind-key &kbin "1" cygpipe-mode
        !force buffer-unbind-key &kbin "2" cygpipe-mode
    !endif
    !if &bmo "usr4"
        2 screen-update
    !endif
!emacro

0 define-macro cygpipe-kill
    !force ipipe-kill
    !force 0 delete-buffer $buffer-bname
!emacro

0 define-macro cygpipe-rerun
    beginning-of-buffer
    !if &seq &lef @wl 3 "cd "
        forward-line
    !endif
    0 ipipe-shell-command @wl $buffer-bname
!emacro

define-macro cygnus
    ; Set up the cygwin environment as default usage.
    set-variable .path $PATH
    set-variable $PATH &cat .cygnus.cygpath $PATH
    ; Call the cygwin process
    set-variable #l0 $buffer-bname
    set-variable #l8 "*cygnus*"
    !force 0 find-buffer #l8
    !if &and $status &bmod "pipe"
        ; Cygus buffer is found. Find another buffer.
        set-variable #l9 1
*again        
        set-variable #l8 &spr "*cygnus%d*"&pinc #l9 1
        !force 0 find-buffer #l8
        !if $status
            !goto again
        !endif
    !endif
    !if &band $system 0x100           ; is it MS-DOS type system ?
        4 ipipe-shell-command "bash -i -m" #l8
    !endif
    ; Restore the default path.
    set-variable $PATH .path
    popup-window #l8
    ; find-buffer #l8
    fhook-cygnus
!emacro

0 define-macro fhook-cygnus
    set-variable $buffer-fhook "fhook-cygnus"
    ; Bind the keys
    buffer-bind-create "b" "C-c C-k" ""   cygpipe-kill
    buffer-bind-create "b" "C-c C-c" "2"  cygpipe-kill
    buffer-bind-create "bo" "C-return" "" cygpipe-rerun
    buffer-bind-create "bo" "C-j" ""      cygpipe-rerun
    !if &seq &lef $buffer-bname 7 "*cygnus"
        set-variable $buffer-ipipe cygpipe-input
        buffer-bind-create "b" "f4" "2"   cygpipe-mode
    !else
        ml-write "cygpipe-minoutput"
        set-variable $buffer-input cygpipe-minoutput
        !return
    !endif
    -1 buffer-mode "wrap"
    1 buffer-mode "magic"
    buffer-bind-create "b" "f2" "0" cygpipe-mode
    buffer-bind-create "b" "f3" "1" cygpipe-mode
    buffer-bind-create "b" "f5" ""  cygpipe-clear
    set-variable $buffer-mask "luh1"
    ; Enable hilighting if requested.
    !if %cygnus-hilight
        set-variable $buffer-hilight .hilight.cygnus
    !endif
    1 cygpipe-mode
    ; execute user extensions if enabled
    !if &exi my-fhook-cygnus
        my-fhook-cygnus
    !endif
!emacro

buffer-init-fhook "cygnus"
