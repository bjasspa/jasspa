; -!- emf -!-
; This is part of the JASSPA MicroEmacs macro files
; Copyright (C) 2004-2009 JASSPA (www.jasspa.com)
; See the file me.emf for copying and conditions.
;
; Created:     Mon Jan 12 2004
; Synopsis:    Rectangle macros
; Authors:     Steven Phillips & Jon Green
;
; string-rectangle; The user is prompted for a string which is inserted at
; the same horizonatal position on all lines spanned by the current region. 
define-macro string-rectangle
    set-variable #l0 $window-line
    set-variable #l3 $window-col
    exchange-point-and-mark
    set-variable #l2 $window-line
    exchange-point-and-mark
    ; Compute the top line.
    !if &gre #l0 #l2
        set-variable #l1 #l2
        set-variable #l2 #l0
    !else
        set-variable #l1 #l0
    !endif
    ; Get the string to insert
    !force set-variable #l6 @1
    !if &not $status
        set-variable #l6 @ml "String"
    !endif
    ; Fill all of the lines in the region from the first column. 
    set-variable $window-line #l1
    !repeat
        ; Move to the column
        beginning-of-line
        !while &les $window-col #l3
            !if &not &seq @wc "\n"
                forward-char
            !else
                insert-string " "
            !endif
        !done
        ; Insert the string
        insert-string #l6
        !if &not &les $window-line #l2
            ; done the last line, return
            set-variable $window-line #l0
            set-variable $window-col &add #l3 &len #l6
            !return
        !endif
        forward-line
    !until 0
!emacro

define-macro space-rectangle
    set-variable #l0 &spr "%n" @# " "
    string-rectangle #l0
!emacro

define-macro copy-rectangle
    set-alpha-mark "\x81" 
    set-variable #l9 $window-col
    set-variable #l0 &bmod "view" 
    set-variable #l1 &bmod "edit" 
    set-variable #l2 &bmod "undo" 
    -1 buffer-mode view 
    1 buffer-mode undo 
    kill-rectangle 
    ; undo the kill and restore the buffer state 
    undo 
    &cond #l2 1 -1 buffer-mode "undo" 
    &cond #l1 1 -1 buffer-mode "edit" 
    &cond #l0 1 -1 buffer-mode "view" 
    goto-alpha-mark "\x81" 
    set-variable $window-col #l9
    ; flag the command to be a copy-region type command 
    set-variable @cl copy-region 
!emacro 
        
; yank-rectangle-overwrite; replaces a column of text with the current kill buffer.
; To use place the cursor at the top left of column and call this command. The width
; of the column to be replaced is determined by the width of the kill buffer text being
; inserted.
define-macro yank-rectangle-overwrite
    yank-rectangle
    set-variable #l0 $window-line
    set-variable #l1 $window-acol
    exchange-point-and-mark
    set-variable #l2 &add #l1 &sub #l1 $window-acol
    set-variable $window-acol #l1
    set-mark
    set-variable $window-line #l0
    !force set-variable $window-acol #l2
    !if &gre $window-acol #l2
        ; previous char is a multi-char display char (i.e. a tab)
        backward-char
    !endif
    !if &les $window-acol #l2
        ; last line not long enough (or multi display char), pad with spaces
        &sub #l2 $window-acol insert-space
    !endif
    kill-rectangle
    -1 yank
!emacro
