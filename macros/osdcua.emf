; -!- emf -!-
; This is part of the JASSPA MicroEmacs macro files
; Copyright (C) 2001-2005 JASSPA (www.jasspa.com)
; See the file me.emf for copying and conditions.
;
; Created:     Wed Feb 21 2001
; Adapted:     Gabriel Tabares-Barreiro
; Synopsis:    CUA (Standard GUI keybindings) emulation
; Authors:     Steven Phillips, Gabriel Tabares-Barreiro
;
osd 1  10  ""   "\HNew        C-n"   f osd-new-buffer ; Create a new document
osd 1  20  ""   "\HOpen       C-o"   f osd-file-open  ; Find a new file
osd 1  60  ""   "\HClose      C-w"   f osd-close
osd 1  90  ""   "\HSave       C-s"   f osd-save       ; Save the buffer
osd 1  100 ""   "Save \HAs    A-C-s" f osd-save-as    ; Save new file
osd 1  140 ""   "\HPrint      C-p"   f print-buffer   ; Print
osd 1  180 ""   "E\Hxit       A-f4"  f save-buffers-exit-emacs
; Edit
osd 2  10  ""   "\HUndo          C-z"   1 osd-undo       ; Undo the last command
osd 2  20  ""   "Redo            C-y"                    ; Re-do the last osd-undo
osd 2  40  "D"                                           ; Set buffer mark
osd 2  50  ""   "Cu\Ht           C-x"   f cut            ; Kill off the region
osd 2  60  ""   "\HCopy          C-c"   f copy           ; Copy the region
osd 2  70  ""   "\HPaste         C-v"   f paste          ; Paste text
osd 2  72  ""   "Pa\Hste Col     A-C-v" f yank-rectangle ; Rectangle paste text
osd 2  73  ""   "\HDelete        del"   f delete         ; Delete hilight text
osd 2  74  ""   "Select A\Hll    C-a"   f select-all     ; Select all text
; Search
osd 3  10  ""  "\HFind               C-f"   1 osd-search
osd 3  12  ""  "Find \HAgain         F3"    f hunt-forward
osd 3  13  ""  "Find \HPrevious      S-F3"  f hunt-backward
osd 3  20  ""  "\HReplace            C-h"   2 osd-search
osd 3  40  ""  "\HGoto Line Number   C-g"   f osd-goto-line
osd 3  50  ""  "Goto \HMatching (..) C-e"   f goto-matching-fence
osd 3  60  ""  "Mar\Hk               C-m"   f set-alpha-mark
osd 3  70  ""  "G\Hoto Mark          C-t"   f goto-alpha-mark
; insert
osd 4  40  ""  "\HFile       C-i"   f insert-file
osd 4  50  ""  "File \HName"        f insert-file-name
; format
osd 5  50  ""  "\HFill Paragraph"             f fill-paragraph
osd 5  150 ""  "Capitali\Hze Word"            f capitalize-word
osd 5  160 ""  "\HLower Case Word        A-l" f lower-case-word
osd 5  170 ""  "L\Hower Case Region      C-l" f cua-lower-case-region
osd 5  180 ""  "\HUpper Case Word        A-u" f upper-case-word
osd 5  190 ""  "U\Hpper Case Region      C-u" f cua-upper-case-region
; execute
osd 6  10  ""  "Execute \HCommand"   f execute-named-command
osd 6  30  ""  "Execute \HFile"      f execute-file
osd 6  50  ""  "\HStart Kbd Macro"   f start-kbd-macro
osd 6  60  ""  "\HQuery Kbd Macro"   f kbd-macro-query
osd 6  70  ""  "\HEnd Kbd Macro"     f end-kbd-macro
osd 6  80  ""  "Execute \HKbd Macro" f execute-kbd-macro
osd 6  110 ""  "\HIpipe command"     f ipipe-shell-command
osd 6  120 ""  "S\Hhell"             f shell
; tools
osd 7  10  ""  "Count \HWords      " f count-words
osd 7  20  ""  "\HSpell Word"        1 spell-word
; window
osd 8  10  ""  "\HSplit Window V"   f split-window-vertically
osd 8  20  ""  "\HGrow Window V"    1 change-window-depth
osd 8  30  ""  "S\Hhrink Window V" -1 change-window-depth
osd 8  40  ""  "Spl\Hit Window H"   f split-window-horizontally
osd 8  50  ""  "G\Hrow Window H"    1 change-window-width
osd 8  60  ""  "Shr\Hink Window H" -1 change-window-width
osd 8  80  ""  "\HOne Window"       f delete-other-windows
osd 8  90  ""  "\HDelete Window"    f delete-window
osd 8  110 ""  "\HPrevious Window"  f previous-window
osd 8  120 ""  "\HNext Window"      f next-window
!if &and &not &band $system 0x01 &opt "mwf"
    ; running a version that can support multiple frames
    osd 8  150 "-"
    osd 8  160 ""  "Create New \HFrame" f create-frame
    osd 8  170 ""  "\HClose This Frame" f delete-frame
    osd 8  180 ""  "Ne\Hxt Frame"       f next-frame
!endif
; help
osd 9  20  ""  "General Help (\H?)"     f osd-help
osd 9  30  ""  "Help on C\Hommand"      f help-command
osd 9  40  ""  "Help on V\Hariable"     f help-variable
osd 9  60  ""  "Describe \HBindings  "  f describe-bindings
osd 9  70  ""  "Describe \HKey"         f describe-key
osd 9  80  ""  "Describe Var\Hiable"    f describe-variable
osd 9  85  ""  "Describe \HWord"        f describe-word
osd 9  100 ""  "List Bu\Hffers"         f list-buffers
osd 9  110 ""  "List \HCommands"        f list-commands
osd 9  120 ""  "List \HVariables"       f list-variables
osd 9  130 ""  "Command \HApropos"      f command-apropos

; define a main menu initialisation macro - main use of this is to insert the
; find tag if a tags file exists & call specific file type open and close
; commands to customize the main menu. The name of the commands must be
; osd-ohook-XXXX and osd-chook-XXXX where XXXX is the hook label
0 define-macro osd-main
    ; preserve the visibility state of the current region
    0 show-region
    set-variable #l2 $result
    !if &equ &band #l2 5 5
        osd 2 50 "" "Cu\Ht           C-x" f kill-region
        osd 2 60 "" "\HCopy          C-c" f copy-region
        osd 2 73 "" "\HDelete        del" f delete
        3 show-region
    !else
        osd 2 50 "" "Cut           C-x"
        osd 2 60 "" "Copy          C-c"
        osd 2 73 "" "Delete        del"
    !endif
    ; disable the buffer specific tools menu
    !if &exi &ind .chook
        execute-named-command .chook
    !endif
    set-variable #l1 &cat &lef $buffer-fname &rsin "/" $buffer-fname "tags"
    !if &seq #l1 .osd.tag-last
        osd 1 40 ""  "Find \HTag" f "osd-find-tag"
    !elif &gre &stat "s" #l1 0
        osd 1 40 ""  "Find \HTag" f "osd-find-tag"
    !else
        osd 1 40 "D"
    !endif
    !if &seq @cl "undo"
        !jump 2
    !elif &and &seq @cl "osd-redo" .undo.count
        osd 2 20  ""  "\HRedo          C-y" f osd-redo
    !else
        osd 2 20  ""  "Redo          C-y"
    !endif
    set-variable #l0 &ind &spr ".%s.setup" $buffer-fhook
    !if &sin "p" #l0
        osd 9 10 "" &spr "View %s \HHelp  %s" &rig $buffer-fhook 6 &kbind "" buffer-help f buffer-help
    !else
        osd 9 10 "D"
    !endif
    !if &sin "o" #l0
        set-variable #l9 &ind &spr ".%s.name" $buffer-fhook
        !if &seq #l9 "ERROR"
            set-variable #l9 &cat &sup &mid $buffer-fhook 6 1 &rig $buffer-fhook 7
        !endif
        osd 7 1 "M" &cat #l9 " \HTools" .osd.tmp buffer-tool
        osd 7 2 "-"
    !else
        osd 7 1  "D"
        osd 7 2  "D"
    !endif
    !if &seq &ind &spr ".%s.setup-mask" $buffer-fhook "ERROR"
        osd 9 145 "D"
    !else
        osd 9 145 "" "Buffer \HSetup" f buffer-setup
    !endif
    ; let the current buffer type modify the menu
    !if &exi &set #l0 &cat "osd-ohook-" &rig $buffer-fhook 6
        set-variable .chook &cat "osd-chook-" &rig $buffer-fhook 6
        execute-named-command #l0
    !endif
    !if &band #l2 1
        show-region
    !endif
!emacro
