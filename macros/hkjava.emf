; -!- emf -!-
; This is part of the JASSPA MicroEmacs macro files
; Copyright (C) 1999-2002 JASSPA (www.jasspa.com)
; See the file me.emf for copying and conditions.
;
; Synopsis:    Java mode hook
; Authors:     Jon Green
;
define-macro fhook-java
    set-variable $buffer-mask "luh1"
    @# buffer-initialize "java"
    buffer-initialize-hooks
!emacro

; buffer-initialize variables
set-variable .fhook-java.setup &reg "/history" "fhook/java" "bdfghnopx"
set-variable .fhook-java.setup-mask "abdefghikmnoptux>"
set-variable .fhook-java.tags "javatags"
set-variable .fhook-java.comment "|/*|*/|*| * | * |f|"
set-variable .fhook-java.command-flag  "|bo|bo|"
set-variable .fhook-java.command-name  "|comment-restyle|comment-restyle|"
set-variable .fhook-java.command-nbind "|||"
set-variable .fhook-java.command-kbind "|esc q|esc o|"
set-variable .fhook-java.command-desc  "|||"

; Set up the collapse of functions
set-variable .fhook-java.collapse-open   "^[a-zA-Z].*{$"
set-variable .fhook-java.collapse-close  "^}"
set-variable .fhook-java.collapse-mclose "1"
set-variable .fhook-java.collapse-mnext  "-1"

; setup item-list
set-variable .fhook-java.item-list-s1 "^[ \t]*\\([a-zA-Z0-9_ \t]*[ \t]\\)?\\([a-zA-Z0-9_]+\\)[ \t]*([a-zA-Z0-9_,\t]*)[ \t]*{"
set-variable .fhook-java.item-list-r1 "Func \ecB\\2\ecA"
set-variable .fhook-java.item-list-s2 "^[ \t]*\\(public[ \t]+\\|private[ \t]+\\)?class[ \t]\\(\\w+\\)"
set-variable .fhook-java.item-list-r2 "Clss \ecB\\2\ecA"

!if &and &sin "h" .fhook-java.setup &band .hilight.flags 0x02 
    ; High-light Java Mode
    !if &not &exist .hilight.java
        set-variable .hilight.java &pinc .hilight.next 1
    !endif
    0 hilight    .hilight.java 2 50             $global-scheme
    hilight   .hilight.java 2  "//"            .scheme.comment
    hilight   .hilight.java 20 "/\\*" "*/" ""  .scheme.comment
    hilight   .hilight.java 4 "\"" "\"" "\\"   .scheme.string
    hilight   .hilight.java 0 "'.'"            .scheme.quote
    hilight   .hilight.java 0 "'\\\\.'"        .scheme.quote
    hilight   .hilight.java 0 "'\\\\'"         .scheme.error
    hilight   .hilight.java 0 "'\\\\''"        .scheme.quote
    ;
    hilight   .hilight.java 0x12 "import"      .scheme.prepro
    hilight   .hilight.java 0x12 "package"     .scheme.prepro
    ;
    hilight   .hilight.java 1 "break"        .scheme.keyword
    hilight   .hilight.java 1 "case"         .scheme.keyword
    hilight   .hilight.java 1 "catch"        .scheme.keyword
    hilight   .hilight.java 1 "continue"     .scheme.keyword
    hilight   .hilight.java 1 "default"      .scheme.keyword
    hilight   .hilight.java 1 "do"           .scheme.keyword
    hilight   .hilight.java 1 "else"         .scheme.keyword
    hilight   .hilight.java 1 "for"          .scheme.keyword
    hilight   .hilight.java 1 "goto"         .scheme.keyword
    hilight   .hilight.java 1 "if"           .scheme.keyword
    hilight   .hilight.java 1 "return"       .scheme.keyword
    hilight   .hilight.java 1 "super"        .scheme.keyword
    hilight   .hilight.java 1 "switch"       .scheme.keyword
    hilight   .hilight.java 1 "throw"        .scheme.keyword
    hilight   .hilight.java 1 "try"          .scheme.keyword
    hilight   .hilight.java 1 "while"        .scheme.keyword
    ;
    hilight   .hilight.java 1 "asm"          .scheme.type
    hilight   .hilight.java 1 "char"         .scheme.type
    hilight   .hilight.java 1 "const"        .scheme.type
    hilight   .hilight.java 1 "double"       .scheme.type
    hilight   .hilight.java 1 "enum"         .scheme.type
    hilight   .hilight.java 1 "extends"      .scheme.type
    hilight   .hilight.java 1 "extern"       .scheme.type
    hilight   .hilight.java 1 "float"        .scheme.type
    hilight   .hilight.java 1 "final"        .scheme.type
    hilight   .hilight.java 1 "int"          .scheme.type
    hilight   .hilight.java 1 "long"         .scheme.type
    hilight   .hilight.java 1 "register"     .scheme.type
    hilight   .hilight.java 1 "short"        .scheme.type
    hilight   .hilight.java 1 "signed"       .scheme.type
    hilight   .hilight.java 1 "size_t"       .scheme.type
    hilight   .hilight.java 1 "static"       .scheme.type
    hilight   .hilight.java 1 "struct"       .scheme.type
    hilight   .hilight.java 1 "synchronized" .scheme.type
    hilight   .hilight.java 1 "throws"       .scheme.type
    hilight   .hilight.java 1 "typedef"      .scheme.type
    hilight   .hilight.java 1 "unsigned"     .scheme.type
    hilight   .hilight.java 1 "void"         .scheme.type
    hilight   .hilight.java 1 "volatile"     .scheme.type
    ; Add some system types
    hilight   .hilight.java 1 "FILE"         .scheme.type
    ; Pre-processor directives
    hilight   .hilight.java 0 "__DATE__"     .scheme.prepro
    hilight   .hilight.java 0 "__FILE__"     .scheme.prepro
    hilight   .hilight.java 0 "__LINE__"     .scheme.prepro
    hilight   .hilight.java 0 "__STDC__"     .scheme.prepro
    hilight   .hilight.java 0 "__TIME__"     .scheme.prepro
    
    hilight   .hilight.java 1 "Character"    .scheme.prepro
    hilight   .hilight.java 1 "Color"        .scheme.prepro
    hilight   .hilight.java 1 "Integer"      .scheme.prepro
    hilight   .hilight.java 1 "Object"       .scheme.prepro
    hilight   .hilight.java 1 "String"       .scheme.prepro
    
    hilight   .hilight.java 1 "delete"       .scheme.keyword
    hilight   .hilight.java 1 "new"          .scheme.keyword
    
    hilight   .hilight.java 1 "this"         .scheme.variable
    hilight   .hilight.java 1 "null"         .scheme.variable
    
    hilight   .hilight.java 1 "auto"         .scheme.type
    hilight   .hilight.java 1 "class"        .scheme.type
    hilight   .hilight.java 1 "friend"       .scheme.type
    hilight   .hilight.java 1 "inline"       .scheme.type
    hilight   .hilight.java 1 "operator"     .scheme.type
    hilight   .hilight.java 1 "private"      .scheme.type
    hilight   .hilight.java 1 "protected"    .scheme.type
    hilight   .hilight.java 1 "public"       .scheme.type
    hilight   .hilight.java 1 "virtual"      .scheme.type
!endif
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Begin hook - entering the buffer - save the current fill-ignore characters
define-macro bhook-java
    !if &exi .fhook-java.fill-ignore
        set-variable .fhook-java.ofill-ignore $fill-ignore
        set-variable $fill-ignore .fhook-java.fill-ignore
    !endif
    !if &exist my-bhook-java
        my-bhook-java
    !endif
!emacro

; End hook - leaving the buffer - restore the fill-ignore characters
define-macro ehook-java
    !if &exi .fhook-java.fill-ignore
        set-variable $fill-ignore .fhook-java.ofill-ignore
    !endif
    !if &exist my-ehook-java
        my-ehook-java
    !endif
!emacro    

; Fix up the $fill-mode so that we wrap java
; doc parameters. Do this by removing the "@"
; from the $fill-ignore variable.
!if &sin "@" $fill-ignore
    set-variable .fhook-java.fill-ignore $fill-ignore
    set-variable .fhook-java.fill-ignore &rep .fhook-java.fill-ignore "@" ""
!endif

ml-write "[Java file hook loaded]"

; load in user extensions if found
!force execute-file "myjava"

