;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
;  Author        : Jon Green
;  Last Modified : <000513.2159>
;
;  Description   : Printer definition file. Simply describes how the
;                  raw printer codes are mapped by the print mechanism.
;
;  Notes         : This is pretty rough and ready at the moment - needs
;                  some sorting out.
; 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; Common definitions

;; flags - sets up destination & whether  the user wants, header, footer,
;; lineNos & '\\' long lines
"flags" = "0x0"

;; Header
"hlen" = "1" ;                 ;; Length of the header
"tsep" = "1" ;                 ;; Blank lines between header and text
"header" = "Page %n. Date: %D/%M/%Y %h:%m:%s  File: %f"

;; Footer
"fsep" = "1" ;                 ;; # blank lines between text and footer.
"flen" = "1" ;                 ;; Length of footer in lines
"footer" = "Page %n" ;         ;; Footer text

;; Margins
"mleft" = "0" ;                ;; Left margin in characters.
"mtop" = "0" ;                 ;; Top margin in characters.

;; Separator characters
"econt" = ">" ;                ;; Print continuation character.
"xsep" = "-+-" ;               ;; Horizontal/vertical separator intersection.
"hsep" = "-" ;                 ;; Horizontal separator sting - one character.
"vsep" = " | " ;               ;; Vertical separator string
"wsep" = "3" ;                 ;; The vertical separator width is 3 characters

;; Default number of pages
"cols" = "1" ;                 ;; 1 column per page
"rows" = "1" ;                 ;; 1 row per page

;; Command line definitions
"dos"
{
 "commandLine" = "copy %f prn"
}
"win32"
{
 "commandLine" = "copy %f prn"
}
"hpux"
{
 "commandLine" = "lp -s %f"
}
"sgi"
{
 "commandLine" = "lpr -s %f"
}
"sunos"
{
 "commandLine" = "lpr -s %f"
}
"sysv42"
{
 "commandLine" = "lp -s %f"
}
"linux"
{
 "commandLine" = "lp -s %f"
}

; Device definitions
"devices"
{
 ;
 ; HTML - we use this as a test printer. It simply converts to HTML.
 ;        capturing the output we can then view it and look for any
 ;        annomolies.
 "HTML"
 {
  ; Strip blanks from the end of the line.
  "strip" = "1"
  
  "rows" = "1"
  "cols" = "1"
  "mleft" = "0"
  "mtop" = "0"
  
  "eol" = "\n"
  "eop" = "</PRE><HR>\n"
  "sop" = "<PRE>"
  "eof" = "</BODY>\n</HTML>\n"
  "sof" = "<HTML>\n<HEAD><TITLE>Test Page</TITLE>\n</HEAD>\n<BODY>\n"
  "econt" = "" ;             ;; Print continuation character.
  "scont" = "" ;             ;; Print start continuation character
  
  ; Does bold, italic, use courier as underline.
  "start"
  {
   "order" = "FBuib"
   "F" = "<font color=\"#%p2%02x%p3%02x%p4%02x\">"
   "B" = "<font bgcolor=\"#%p2%02x%p3%02x%p4%02x\">"
   "b" = "<B>"
   "i" = "<I>"
   "u" = "<U>"
  }
  "end"
  {
   "order" = "biu"
   "b" = "</B>"
   "i" = "</I>"
   "u" = "</U>"
  }
  ; Filter the following characters through the device.
  "filter"
  {
   ;;            0x20=&nbsp\;;
   "<" = "&lt\;"
   ">" = "&gt\;"
   "&" = "&amp\;"
   "\"" = "&quot\;"
  }
  "layout"
  {
   " 80x70"
   {
    "paperx" = "80"
    "papery" = "70"
   }
   "160x140"
   {
    "cols" = "2" ; 2 column per page
    "paperx" = "160"
    "papery" = "140"
   }
  }
 };  End of /HTML
 "Plain Text"
 {
  ; Strip blanks from the end of the line.
  "strip" = "1"
  
  "rows" = "1"
  "cols" = "1"
  "mleft" = "0"
  "mtop" = "0"
  
  "eol" = "\n"
  "eop" = ""
  "sop" = ""
  "eof" = ""
  "sof" = ""
  
  "layout"
  {
   " 80x66"
   {
    "paperx" = "80"
    "papery" = "66"
   }
   "132x66"
   {
    "paperx" = "132"
    "papery" = "66"
   }
  }
 };  End of Plain Text
 ; Hewlett Packard Desk Jet - raw mode PCL printing.
 "HP Deskjet"
 {
  ; Strip blanks from the end of the line.
  "strip" = "1"
  ; Basic character translations.
  "eol" = "\r\n"
  "eop" = "\e&l0H"
  "eof" = "\eE"
  ; Does bold, underline and italic. Start/End sequences.
  "end"
  {
   "b" = "\e(s0B"
   "i" = "\e(s0S"
   "u" = "\e&d@"
  }
  "start"
  {
   "b" = "\e(s3B"
   "i" = "\e(s1S"
   "u" = "\e&d1D"
  }
  ; Page permutations (A4).
  "layout"
  {
   "110x48"
   {
    "paperx" = "110"
    "papery" = "48"
    "sof" = "\eE\e&l0L\e&l0E\e&a0L\e&l1O"
   }
   "192x134"
   {
    "cols" = "2" ; 2 column per page
    "paperx" = "192"
    "papery" = "134"
    "sof" = "\eE\e&l0L\e&l0E\e&a0L\e(s0P\e(s24H\e(s6V\e&l4C"
   }
   "220x96"
   {
    "cols" = "2" ; 2 column per page
    "paperx" = "220"
    "papery" = "96"
    "sof" = "\eE\e&l0L\e&l0E\e&a0L\e&l1O\e(s0P\e(s24H\e(s6V\e&l4C"
   }
   " 80x68"
   {
    "paperx" = "80"
    "papery" = "68"
    "sof" = "\eE\e&l0L\e&l0E\e&a0L"
   }
  }
 }; End of /HP Deskjet
 
 ; Hewlett Packard Laser Jet - raw mode PCL printing.
 "HP Laserjet 4v"
 {
  ; Strip blanks from the end of the line.
  "strip" = "1"
  ; Basic character translations.
  "eol" = "\r\n"
  "sop" = "\e&l0H"
  "eof" = "\eE"
  ; Does bold, underline and italic. Start/End sequences.
  "start"
  {
   "b" = "\e(s3B"
   "i" = "\e(s1S"
   "u" = "\e&d1D"
  }
  "end"
  {
   "b" = "\e(s0B"
   "i" = "\e(s0S"
   "u" = "\e&d@"
  }
  ; Page permutations (A4).
  "layout"
  {
   "113x45"
   {
    "paperx" = "113"
    "papery" = "45"
    "sof" = "\eE\e&l0L\e&l0E\e&a0L\e&l1O"
   }
   "180x136"
   {
    "cols" = "2" ; 2 column per page
    "paperx" = "180"
    "papery" = "136"
    "sof" = "\eE\e&l0L\e&l1E\e&a0L\e(s0P\e(s24H\e(s6V\e&l4C"
   }
   "261x91"
   {
    "cols" = "2" ; 2 column per page
    "paperx" = "261"
    "papery" = "91"
    "sof" = "\eE\e&l0L\e&l0E\e&a0L\e&l1O\e(s0P\e(s24H\e(s6V\e&l4C"
   }
   " 78x68"
   {
    "paperx" = "78"
    "papery" = "68"
    "sof" = "\eE\e&l0L\e&l1E\e&a0L"
   }
  }
 }; End of /HP Laserjet 4v
 ; Epson Stylus - ESC/P2 printing.
 "Epson Stylus"
 {
  ; Strip blanks from the end of the line.
  "strip" = "1"
  ; Basic character translations.
  "eol" = "\r\n"
  "eop" = "\f"
  "eof" = "\e@"
  ; Does bold, underline and italic. Start/End sequences.
  "end"
  {
   "order" = "uib"
   "b" = "\eF"
   "i" = "\e5"
   "u" = "\e(-10"
  }
  "start"
  {
   "order" = "biuF"
   "F" = "\er%p1%d"
   "b" = "\eE"
   "i" = "\e4"
   "u" = "\e(-11"
  }
  ; Page permutations (A4).
  "layout"
  {
   "110x48"
   {
    "paperx" = "110"
    "papery" = "48"
    "sof" = "\eE\e&l0L\e&l0E\e&a0L\e&l1O"
   }
   "192x134"
   {
    "cols" = "2" ; 2 column per page
    "paperx" = "192"
    "papery" = "134"
    "sof" = "\e@\el0\eX\x0f\x0c\x00"
    ;"sof" = "\eE\e&l0L\e&l0E\e&a0L\e(s0P\e(s24H\e(s6V\e&l4C"
   }
   "220x96"
   {
    "cols" = "2" ; 2 column per page
    "paperx" = "220"
    "papery" = "96"
    "sof" = "\eE\e&l0L\e&l0E\e&a0L\e&l1O\e(s0P\e(s24H\e(s6V\e&l4C"
   }
   " 80x66"
   {
    "paperx" = "80"
    "papery" = "66"
    "sof" = "\e@\el0"
   }
  }
 }; End of Epson Stylus
 ;
 ; Dot matrix printer.
 "Dot Matrix"
 {
  ; Strip blanks from the end of the line.
  "strip" = "1"
  
  "eol" = "\r\n"
  ; Use over-striking for bold and underline.
  "over"
  {
   "b" = "\b\\?\b\\?\b\\?"
   "u" = "\b_?"
   "bu" = "\b\\?\b\\?\b\\?\b_\b_\b_\b_"
  }
  ; Page size permutations. Assume standard paper sizes of 80/160
  "layout"
  {
   "160x66"
   {
    "cols" = "2" ; 2 column per page
    "paperx" = "160"
    "papery" = "66"
    "cols" = "2"
   }
   " 80x66"
   {
    "paperx" = "80"
    "papery" = "66"
    "cols" = "1"
   }
  }
 }; End of /Dot Matrix
 ;
 ; Microsoft windows. Most of the configuration is performed
 ; internally in the spooler. Simply provide the information to
 ; map the font for the page setter.
 "windows"
 {
  ; Strip blanks from the end of the line.
  "strip" = "1"
  ; Base movements.
  "sop" = "\es"
  "eop" = "\ee"
  "eol" = "\n"
  ; Can print most things
  "start"
  {
   "order" = "FBbiu"
   "F" = "\ec%p1%02xF"
   "B" = "\ec%p1%02xB"
   "b" = "\eB"
   "i" = "\eC"
   "u" = "\eE"
  }
  "end"
  {
   "order" = "biu"
   "b" = "\eA"
   "i" = "\eA"
   "u" = "\eA"
  }
  ; Page permutations.
  "layout"
  {
   "automatic"
   {
    "paperx" = "0"
    "papery" = "0"
   }
  }
 }; End of /Windows
}; End of /devices
