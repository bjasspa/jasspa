.\" -*- nroff -*-
.Id $Id: m4fil011.4,v 2.4 2001-12-18 16:52:53 jon Exp $
.Im MicroEmacs macro;directive|miscellaneousOperators
.so me.tni
.TH !while 4
.XI !while - "Conditional loop"
.XI !continue - "Restart a conditional loop"
.XI !done - "End a conditional loop"
.SH NAME
!while, !continue, !done \- Conditional loop
.SH SYNOPSIS
.na
.nf
\fB!while\fR \fIcondition\fR
.RS
\&... loop body ...
[\fB!continue\fR]
.RE
\fB!done\fR
.fi
.ad
.SH DESCRIPTION
The  \fB!while\fR  directive  allows  statements  only  to  be  executed  if a
\fIcondition\fR  specified in the  directive is met. Every line  following the
\fB!while\fR  directive,  until  the  first  \fB!done\fR  directive,  is  only
executed if the expression following the \fB!while\fR directive evaluates to a
\fCTRUE\fR value.
.PP
A \fB!continue\fR may be used in the loop, this immediately returns control to
the \fB!while\fR statement and skips the rest of the section.
.PP
.B "!while statement may  not be  nested." 
That is, only one \fB!while\fR statement may be outstanding at a time, a
.Ht !repeat 4 
statement  may be used  within  the  \fB!while\fR  to create an inner  loop if
required. Alternatively the
.Ht !goto 4 
used in conjunction with the
.Ht !if 4
statement may be used to construct loops.
.SH EXAMPLE
For example, the following macro segment fills to the fill column with spaces.
.Me $emf-scheme
.CS
!while &less $curcol $fill-col
    insert-string " "
    !if &equal %example "1"     ; Silly to show continue
        !continue               ; Goto !while
    !endif
    ml-write "You wont see me if %example = 1"
!done
.CE 0
.Me $ehf-scheme
.SH "SEE ALSO"
.na
.Ht !if 4 ,
.Ht !goto 4 ,
.Ht !repeat 4 .
.ad
.FH
